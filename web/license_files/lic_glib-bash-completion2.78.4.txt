<!--
SPDX-FileCopyrightText: GLib Development Team

SPDX-License-Identifier: LGPL-2.1-or-later
-->

<!DOCTYPE html>
<html lang="en">
<head>
  <title>GLib &ndash; 2.0</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <meta charset="utf-8" />

  
  <meta property="og:type" content="website"/>

  

  
  <meta property="og:title" content="GLib-2.0"/>
  <meta property="og:description" content="Reference for GLib-2.0"/>
  <meta name="twitter:title" content="GLib-2.0"/>
  <meta name="twitter:description" content="Reference for GLib-2.0"/>


  
  <meta name="twitter:card" content="summary"/>

  
  
  
  <link rel="search" type="application/opensearchdescription+xml" title="GLib" href="opensearch.xml">
  
  

  <link rel="stylesheet" href="style.css" type="text/css" />

  

  
  <script src="../urlmap.js"></script>
  
  
  <script src="fzy.js"></script>
  <script src="search.js"></script>
  
  <script src="main.js"></script>
</head>

<body>
  <div id="body-wrapper" tabindex="-1">

    <nav class="sidebar devhelp-hidden">
      
      
      <div class="search section">
        <form id="search-form" autocomplete="off">
          <input id="search-input" type="text" name="do-not-autocomplete" placeholder="Click, or press 's' to search" autocomplete="off"/>
        </form>
      </div>
      
      <div class="section namespace">
        <h3><a href="index.html">GLib</a></h3>
        <p>API Version: 2.0</p>
        
        <p>Library Version: 2.81.0</p>
        
      </div>
      
<div class="section">
  <h5>Sections</h5>
  <div class="links">
  

  
  
  
    <a href="#structs">Structs</a>
  
  
    <a href="#unions">Unions</a>
  
  
    <a href="#aliases">Aliases</a>
  
  
    <a href="#enums">Enumerations</a>
  
  
    <a href="#bitfields">Bitfields</a>
  
  
    <a href="#domains">Error Domains</a>
  
  
    <a href="#callbacks">Callbacks</a>
  
  
    <a href="#functions">Functions</a>
  
  
    <a href="#function_macros">Function Macros</a>
  
  
    <a href="#constants">Constants</a>
  
  </div>
</div>


      <div class="section generator">
        <p>Generated by <a href="https://gitlab.gnome.org/GNOME/gi-docgen">gi-docgen</a> 2023.1</p>
      </div>
    </nav>

    <button id="btn-to-top" class="hidden"><span class="up-arrow"></span></button>

    
<section id="main" class="content">
  <header>
    <h3>Namespace</h3>
    <h1>GLib &ndash; 2.0</h1>

    <div class="description">
      <p>GLib is a general-purpose, portable utility library, which provides many useful data types, macros, type conversions, string utilities, file utilities, a mainloop abstraction, and so on.</p>
    </div>

    <div class="meta info">
      <table>
        <tr><td><em>Version</em></td><td>2.81.0</td></tr>
        <tr><td><em>Authors</em></td><td>GLib Development Team</td></tr>
        <tr><td><em>License</em></td><td>LGPL-2.1-or-later</td></tr>
        <tr><td><em>Website</em></td><td><a href="https://www.gtk.org" class="external">https://www.gtk.org</a></td></tr>
        <tr><td><em>Source</em></td><td><a href="https://gitlab.gnome.org/GNOME/glib/" class="external">https://gitlab.gnome.org/GNOME/glib/</a></td></tr>
      </table>
    </div>

    <div class="meta build toggle-wrapper">
      <h4>Build</h4>

      <div class="docblock">
      <table>
        <tr><td>C headers</td><td><code>glib.h</code></td></tr>
        <tr><td>pkg-config files</td><td><code>glib-2.0</code></td></tr>
      </table>
      </div>
    </div>
  </header>

  

  
  <section>
    <div class="toggle-wrapper">
      <h4 id="related" style="display:flex;">
        Related libraries
        <a href="#related" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table>
        
          <tr>
            <td><strong>GModule</strong></td>
            <td>Portable API for dynamically loading modules</td>
          </tr>
          <tr>
            <td></td>
            <td><a href="https://docs.gtk.org/gmodule/" class="external">Browse documentation</a></td>
          </tr>
        
          <tr>
            <td><strong>GObject</strong></td>
            <td>The base type system library</td>
          </tr>
          <tr>
            <td></td>
            <td><a href="https://docs.gtk.org/gobject/" class="external">Browse documentation</a></td>
          </tr>
        
          <tr>
            <td><strong>GIO</strong></td>
            <td>GObject Interfaces and Objects, Networking, IPC, and I/O</td>
          </tr>
          <tr>
            <td></td>
            <td><a href="https://docs.gtk.org/gio/" class="external">Browse documentation</a></td>
          </tr>
        
        </table>
      </div>
    </div>
  </section>
  

  
  <section>
    <div class="toggle-wrapper">
      <h4 id="extra" style="display:flex;">
        Additional documentation
        <a href="#extra" class="anchor"></a>
      </h4>

      <div class="docblock">
        <ul>
        
          <li><a href="building.html">Building GLib</a></li>
        
          <li><a href="compiling.html">Compiling GLib Applications</a></li>
        
          <li><a href="cross-compiling.html">Cross-compiling the GLib package</a></li>
        
          <li><a href="running.html">Running GLib Applications</a></li>
        
          <li><a href="programming.html">Writing GLib Applications</a></li>
        
          <li><a href="resources.html">Support and Bug Reports</a></li>
        
          <li><a href="gvariant-format-strings.html">GVariant Format Strings</a></li>
        
          <li><a href="gvariant-text-format.html">GVariant Text Format</a></li>
        
          <li><a href="character-set.html">Character Set Conversions</a></li>
        
          <li><a href="i18n.html">Internationalization</a></li>
        
          <li><a href="string-utils.html">String Utilities</a></li>
        
          <li><a href="types.html">Basic Types</a></li>
        
          <li><a href="macros.html">Macros</a></li>
        
          <li><a href="conversion-macros.html">Conversion Macros</a></li>
        
          <li><a href="auto-cleanup.html">Automatic Cleanup</a></li>
        
          <li><a href="memory.html">Memory Allocation</a></li>
        
          <li><a href="memory-slices.html">Memory Slices</a></li>
        
          <li><a href="error-reporting.html">Error Reporting</a></li>
        
          <li><a href="logging.html">Message Logging</a></li>
        
          <li><a href="warnings.html">Warnings and Assertions</a></li>
        
          <li><a href="file-utils.html">File Utilities</a></li>
        
          <li><a href="host-utils.html">Hostname Utilities</a></li>
        
          <li><a href="misc-utils.html">Miscellaneous Utilities</a></li>
        
          <li><a href="main-loop.html">The Main Event Loop</a></li>
        
          <li><a href="reference-counting.html">Reference Counting</a></li>
        
          <li><a href="testing.html">Testing Framework</a></li>
        
          <li><a href="atomic.html">Atomic Operations</a></li>
        
          <li><a href="checked-math.html">Bounds-checking Integer Arithmetic</a></li>
        
          <li><a href="threads.html">Threads</a></li>
        
          <li><a href="spawn.html">Spawning Processes</a></li>
        
          <li><a href="random.html">Random Numbers</a></li>
        
          <li><a href="numerical.html">Numerical Definitions</a></li>
        
          <li><a href="markup.html">Simple XML Subset Parser</a></li>
        
          <li><a href="base64.html">Base64 Encoding</a></li>
        
          <li><a href="goption.html">Commandline Option Parser</a></li>
        
          <li><a href="data-structures.html">Data Structures</a></li>
        
          <li><a href="datalist-and-dataset.html">Keyed Data Lists and Datasets</a></li>
        
          <li><a href="shell.html">Shell Utilities</a></li>
        
          <li><a href="uuid.html">GUuid</a></li>
        
          <li><a href="unicode.html">Unicode</a></li>
        
          <li><a href="version.html">Version Information</a></li>
        
          <li><a href="threads-deprecated.html">Deprecated Thread API</a></li>
        
          <li><a href="classes_hierarchy.html">Classes Hierarchy</a></li>
        
        </ul>
      </div>
    </div>
  </section>
  

  

  
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="structs" class="section-header" style="display:flex;">
        Structs
        <a href="#structs" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="Allocator" class="symbol" href="struct.Allocator.html">Allocator</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Array" class="symbol" href="struct.Array.html">Array</a></td>
            
            <td class="docblock-summary">
            <p>Contains the public fields of a&nbsp;GArray.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="AsyncQueue" class="symbol" href="struct.AsyncQueue.html">AsyncQueue</a></td>
            
            <td class="docblock-summary">
            <p>An opaque data structure which represents an asynchronous&nbsp;queue.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="BookmarkFile" class="symbol" href="struct.BookmarkFile.html">BookmarkFile</a></td>
            
            <td class="docblock-summary">
            <p><code>GBookmarkFile</code> lets you parse, edit or create files containing&nbsp;bookmarks.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ByteArray" class="symbol" href="struct.ByteArray.html">ByteArray</a></td>
            
            <td class="docblock-summary">
            <p>Contains the public fields of a&nbsp;GByteArray.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Bytes" class="symbol" href="struct.Bytes.html">Bytes</a></td>
            
            <td class="docblock-summary">
            <p>A simple refcounted data type representing an immutable sequence of zero or
more bytes from an unspecified&nbsp;origin.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Cache" class="symbol" href="struct.Cache.html">Cache</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GCache</code> allows sharing of complex data structures, in order to
save system&nbsp;resources.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Checksum" class="symbol" href="struct.Checksum.html">Checksum</a></td>
            
            <td class="docblock-summary">
            <p>GLib provides a generic <span class="caps">API</span> for computing checksums (or ‘digests’)
for a sequence of arbitrary bytes, using various hashing algorithms
like <span class="caps">MD5</span>, <span class="caps">SHA</span>-1 and <span class="caps">SHA</span>-256. Checksums are commonly used in various
environments and&nbsp;specifications.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Completion" class="symbol" href="struct.Completion.html">Completion</a></td>
            
            <td class="docblock-summary">
            <p><code>GCompletion</code> provides support for automatic completion of a string
using any group of target strings. It is typically used for file
name completion as is common in many <span class="caps">UNIX</span>&nbsp;shells.</p>
            <p><span class="emblem deprecated">deprecated: 2.26</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Cond" class="symbol" href="struct.Cond.html">Cond</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GCond</code> struct is an opaque data structure that represents a
condition. Threads can block on a <code>GCond</code> if they find a certain
condition to be false. If other threads change the state of this
condition they signal the <code>GCond</code>, and that causes the waiting
threads to be woken&nbsp;up.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Data" class="symbol" href="struct.Data.html">Data</a></td>
            
            <td class="docblock-summary">
            <p>An opaque data structure that represents a keyed data&nbsp;list.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Date" class="symbol" href="struct.Date.html">Date</a></td>
            
            <td class="docblock-summary">
            <p><code>GDate</code> is a struct for calendrical&nbsp;calculations.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DateTime" class="symbol" href="struct.DateTime.html">DateTime</a></td>
            
            <td class="docblock-summary">
            <p><code>GDateTime</code> is a structure that combines a Gregorian date and time
into a single&nbsp;structure.</p>
            <p><span class="emblem available">since: 2.26</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DebugKey" class="symbol" href="struct.DebugKey.html">DebugKey</a></td>
            
            <td class="docblock-summary">
            <p>Associates a string with a bit flag.
Used in&nbsp;g_parse_debug_string().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Dir" class="symbol" href="struct.Dir.html">Dir</a></td>
            
            <td class="docblock-summary">
            <p>An opaque structure representing an opened&nbsp;directory.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Error" class="symbol" href="struct.Error.html">Error</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GError</code> structure contains information about
an error that has&nbsp;occurred.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HashTable" class="symbol" href="struct.HashTable.html">HashTable</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GHashTable</code> struct is an opaque data structure to represent a
[Hash Table][glib-Hash-Tables]. It should only be accessed via the
following&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HashTableIter" class="symbol" href="struct.HashTableIter.html">HashTableIter</a></td>
            
            <td class="docblock-summary">
            <p>A GHashTableIter structure represents an iterator that can be used
to iterate over the elements of a <code>GHashTable</code>. GHashTableIter
structures are typically allocated on the stack and then initialized
with&nbsp;g_hash_table_iter_init().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Hmac" class="symbol" href="struct.Hmac.html">Hmac</a></td>
            
            <td class="docblock-summary">
            <p>HMACs should be used when producing a cookie or hash based on data
and a key. Simple mechanisms for using <span class="caps">SHA1</span> and other algorithms to
digest a key and data together are vulnerable to various security
issues.
<a href="http://en.wikipedia.org/wiki/HMAC"><span class="caps">HMAC</span></a>
uses algorithms like <span class="caps">SHA1</span> in a secure way to produce a digest of a
key and&nbsp;data.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Hook" class="symbol" href="struct.Hook.html">Hook</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GHook</code> struct represents a single hook function in a <code>GHookList</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookList" class="symbol" href="struct.HookList.html">HookList</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GHookList</code> struct represents a list of hook&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IConv" class="symbol" href="struct.IConv.html">IConv</a></td>
            
            <td class="docblock-summary">
            <p>The GIConv struct wraps an <code>iconv()</code> conversion descriptor. It contains
private data and should only be accessed using the following&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOChannel" class="symbol" href="struct.IOChannel.html">IOChannel</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GIOChannel</code> data type aims to provide a portable method for
using file descriptors, pipes, and sockets, and integrating them
into the main event loop (see <code>GMainContext</code>). Currently,
full support is available on <span class="caps">UNIX</span> platforms; support for Windows
is only partially&nbsp;complete.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOFuncs" class="symbol" href="struct.IOFuncs.html">IOFuncs</a></td>
            
            <td class="docblock-summary">
            <p>A table of functions used to handle different types of <code>GIOChannel</code>
in a generic&nbsp;way.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KeyFile" class="symbol" href="struct.KeyFile.html">KeyFile</a></td>
            
            <td class="docblock-summary">
            <p><code>GKeyFile</code> parses .ini-like config&nbsp;files.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="List" class="symbol" href="struct.List.html">List</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GList</code> struct is used for each element in a doubly-linked&nbsp;list.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LogField" class="symbol" href="struct.LogField.html">LogField</a></td>
            
            <td class="docblock-summary">
            <p>Structure representing a single field in a structured log entry. See
<code>g_log_structured()</code> for&nbsp;details.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MainContext" class="symbol" href="struct.MainContext.html">MainContext</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GMainContext</code> struct is an opaque data
type representing a set of sources to be handled in a main&nbsp;loop.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MainLoop" class="symbol" href="struct.MainLoop.html">MainLoop</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GMainLoop</code> struct is an opaque data type
representing the main event loop of a GLib or <span class="caps">GTK</span>&nbsp;application.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MappedFile" class="symbol" href="struct.MappedFile.html">MappedFile</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GMappedFile</code> represents a file mapping created with
g_mapped_file_new(). It has only private members and should
not be accessed&nbsp;directly.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MarkupParseContext" class="symbol" href="struct.MarkupParseContext.html">MarkupParseContext</a></td>
            
            <td class="docblock-summary">
            <p>A parse context is used to parse a stream of bytes that
you expect to contain marked-up&nbsp;text.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MarkupParser" class="symbol" href="struct.MarkupParser.html">MarkupParser</a></td>
            
            <td class="docblock-summary">
            <p>Any of the fields in <code>GMarkupParser</code> can be <code>NULL</code>, in which case they
will be ignored. Except for the <code>error</code> function, any of these callbacks
can set an error; in particular the <code>G_MARKUP_ERROR_UNKNOWN_ELEMENT</code>,
<code>G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE</code>, and <code>G_MARKUP_ERROR_INVALID_CONTENT</code>
errors are intended to be set from these callbacks. If you set an error
from a callback, <code>g_markup_parse_context_parse()</code> will report that error
back to its&nbsp;caller.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MatchInfo" class="symbol" href="struct.MatchInfo.html">MatchInfo</a></td>
            
            <td class="docblock-summary">
            <p>A GMatchInfo is an opaque struct used to return information about&nbsp;matches.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MemChunk" class="symbol" href="struct.MemChunk.html">MemChunk</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MemVTable" class="symbol" href="struct.MemVTable.html">MemVTable</a></td>
            
            <td class="docblock-summary">
            <p>A set of functions used to perform memory allocation. The same <code>GMemVTable</code> must
be used for all allocations in the same program; a call to g_mem_set_vtable(),
if it exists, should be prior to any use of&nbsp;GLib.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Node" class="symbol" href="struct.Node.html">Node</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GNode</code> struct represents one node in a [n-ary&nbsp;tree][glib-N-ary-Trees].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Once" class="symbol" href="struct.Once.html">Once</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GOnce</code> struct controls a one-time initialization function. Any
one-time initialization function must have its own unique <code>GOnce</code>
struct.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionContext" class="symbol" href="struct.OptionContext.html">OptionContext</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GOptionContext</code> struct defines which options
are accepted by the commandline option parser. The struct has only private
fields and should not be directly&nbsp;accessed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionEntry" class="symbol" href="struct.OptionEntry.html">OptionEntry</a></td>
            
            <td class="docblock-summary">
            <p>A GOptionEntry struct defines a single option. To have an effect, they
must be added to a <code>GOptionGroup</code> with <code>g_option_context_add_main_entries()</code>
or&nbsp;g_option_group_add_entries().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionGroup" class="symbol" href="struct.OptionGroup.html">OptionGroup</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GOptionGroup</code> struct defines the options in a single
group. The struct has only private fields and should not be directly&nbsp;accessed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PathBuf" class="symbol" href="struct.PathBuf.html">PathBuf</a></td>
            
            <td class="docblock-summary">
            <p><code>GPathBuf</code> is a helper type that allows you to easily build paths from
individual elements, using the platform specific conventions for path&nbsp;separators.</p>
            <p><span class="emblem available">since: 2.76</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PatternSpec" class="symbol" href="struct.PatternSpec.html">PatternSpec</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GPatternSpec</code> struct is the &#8216;compiled&#8217; form of a glob-style&nbsp;pattern.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PollFD" class="symbol" href="struct.PollFD.html">PollFD</a></td>
            
            <td class="docblock-summary">
            <p>Represents a file descriptor, which events to poll for, and which events&nbsp;occurred.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Private" class="symbol" href="struct.Private.html">Private</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GPrivate</code> struct is an opaque data structure to represent a
thread-local data key. It is approximately equivalent to the
pthread_setspecific()/pthread_getspecific() APIs on <span class="caps">POSIX</span> and to
TlsSetValue()/TlsGetValue() on&nbsp;Windows.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PtrArray" class="symbol" href="struct.PtrArray.html">PtrArray</a></td>
            
            <td class="docblock-summary">
            <p>Contains the public fields of a pointer&nbsp;array.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Queue" class="symbol" href="struct.Queue.html">Queue</a></td>
            
            <td class="docblock-summary">
            <p>Contains the public fields of a&nbsp;[Queue][glib-Double-ended-Queues].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Rand" class="symbol" href="struct.Rand.html">Rand</a></td>
            
            <td class="docblock-summary">
            <p>The GRand struct is an opaque data structure. It should only be
accessed through the g_rand_*&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RecMutex" class="symbol" href="struct.RecMutex.html">RecMutex</a></td>
            
            <td class="docblock-summary">
            <p>The GRecMutex struct is an opaque data structure to represent a
recursive mutex. It is similar to a <code>GMutex</code> with the difference
that it is possible to lock a GRecMutex multiple times in the same
thread without deadlock. When doing so, care has to be taken to
unlock the recursive mutex as often as it has been&nbsp;locked.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Regex" class="symbol" href="struct.Regex.html">Regex</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GRegex</code> is the &#8220;compiled&#8221; form of a regular expression&nbsp;pattern.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Relation" class="symbol" href="struct.Relation.html">Relation</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GRelation</code> is a table of data which can be indexed on any number
of fields, rather like simple database tables. A <code>GRelation</code> contains
a number of records, called tuples. Each record contains a number of
fields. Records are not ordered, so it is not possible to find the
record at a particular&nbsp;index.</p>
            <p><span class="emblem deprecated">deprecated: 2.26</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RWLock" class="symbol" href="struct.RWLock.html">RWLock</a></td>
            
            <td class="docblock-summary">
            <p>The GRWLock struct is an opaque data structure to represent a
reader-writer lock. It is similar to a <code>GMutex</code> in that it allows
multiple threads to coordinate access to a shared&nbsp;resource.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Scanner" class="symbol" href="struct.Scanner.html">Scanner</a></td>
            
            <td class="docblock-summary">
            <p><code>GScanner</code> provides a general-purpose lexical&nbsp;scanner.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ScannerConfig" class="symbol" href="struct.ScannerConfig.html">ScannerConfig</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the <code>GScanner</code> parser configuration. Most settings can
be changed during the parsing phase and will affect the lexical
parsing of the next unpeeked&nbsp;token.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Sequence" class="symbol" href="struct.Sequence.html">Sequence</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSequence</code> struct is an opaque data type representing a
[sequence][glib-Sequences] data&nbsp;type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SequenceIter" class="symbol" href="struct.SequenceIter.html">SequenceIter</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSequenceIter</code> struct is an opaque data type representing an
iterator pointing into a <code>GSequence</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SList" class="symbol" href="struct.SList.html">SList</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSList</code> struct is used for each element in the singly-linked&nbsp;list.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Source" class="symbol" href="struct.Source.html">Source</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSource</code> struct is an opaque data type
representing an event&nbsp;source.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceCallbackFuncs" class="symbol" href="struct.SourceCallbackFuncs.html">SourceCallbackFuncs</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSourceCallbackFuncs</code> struct contains
functions for managing callback&nbsp;objects.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceFuncs" class="symbol" href="struct.SourceFuncs.html">SourceFuncs</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GSourceFuncs</code> struct contains a table of
functions used to handle event sources in a generic&nbsp;manner.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StatBuf" class="symbol" href="struct.StatBuf.html">StatBuf</a></td>
            
            <td class="docblock-summary">
            <p>A type corresponding to the appropriate struct type for the <code>stat()</code>
system call, depending on the platform and/or compiler being&nbsp;used.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StaticMutex" class="symbol" href="struct.StaticMutex.html">StaticMutex</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GStaticMutex</code> works like a <code>GMutex</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StaticPrivate" class="symbol" href="struct.StaticPrivate.html">StaticPrivate</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GStaticPrivate</code> works almost like a <code>GPrivate</code>, but it has one
significant advantage. It doesn&#8217;t need to be created at run-time
like a <code>GPrivate</code>, but can be defined at compile-time. This is
similar to the difference between <code>GMutex</code> and <code>GStaticMutex</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StaticRecMutex" class="symbol" href="struct.StaticRecMutex.html">StaticRecMutex</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GStaticRecMutex</code> works like a <code>GStaticMutex</code>, but it can be locked
multiple times by one thread. If you enter it n times, you have to
unlock it n times again to let other threads lock it. An exception
is the function g_static_rec_mutex_unlock_full(): that allows you to
unlock a <code>GStaticRecMutex</code> completely returning the depth, (i.e. the
number of times this mutex was locked). The depth can later be used
to restore the state of the <code>GStaticRecMutex</code> by calling
g_static_rec_mutex_lock_full(). In GLib 2.32, <code>GStaticRecMutex</code> has
been deprecated in favor of <code>GRecMutex</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StaticRWLock" class="symbol" href="struct.StaticRWLock.html">StaticRWLock</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GStaticRWLock</code> struct represents a read-write lock. A read-write
lock can be used for protecting data that some portions of code only
read from, while others also write. In such situations it is
desirable that several readers can read at once, whereas of course
only one writer may write at a&nbsp;time.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="String" class="symbol" href="struct.String.html">String</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GString</code> is an object that handles the memory management of a C&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StringChunk" class="symbol" href="struct.StringChunk.html">StringChunk</a></td>
            
            <td class="docblock-summary">
            <p><code>GStringChunk</code> provides efficient storage of groups of&nbsp;strings.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="StrvBuilder" class="symbol" href="struct.StrvBuilder.html">StrvBuilder</a></td>
            
            <td class="docblock-summary">
            <p><code>GStrvBuilder</code> is a helper object to build a <code>NULL</code>-terminated string&nbsp;arrays.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestCase" class="symbol" href="struct.TestCase.html">TestCase</a></td>
            
            <td class="docblock-summary">
            <p>An opaque structure representing a test&nbsp;case.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestConfig" class="symbol" href="struct.TestConfig.html">TestConfig</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestLogBuffer" class="symbol" href="struct.TestLogBuffer.html">TestLogBuffer</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestLogMsg" class="symbol" href="struct.TestLogMsg.html">TestLogMsg</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestSuite" class="symbol" href="struct.TestSuite.html">TestSuite</a></td>
            
            <td class="docblock-summary">
            <p>An opaque structure representing a test&nbsp;suite.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Thread" class="symbol" href="struct.Thread.html">Thread</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GThread</code> struct represents a running thread. This struct
is returned by <code>g_thread_new()</code> or g_thread_try_new(). You can
obtain the <code>GThread</code> struct representing the current thread by
calling&nbsp;g_thread_self().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ThreadFunctions" class="symbol" href="struct.ThreadFunctions.html">ThreadFunctions</a></td>
            
            <td class="docblock-summary">
            <p>This function table is no longer used by <code>g_thread_init()</code>
to initialize the thread&nbsp;system.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ThreadPool" class="symbol" href="struct.ThreadPool.html">ThreadPool</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GThreadPool</code> struct represents a thread&nbsp;pool.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Timer" class="symbol" href="struct.Timer.html">Timer</a></td>
            
            <td class="docblock-summary">
            <p><code>GTimer</code> records a start time, and counts microseconds elapsed since
that&nbsp;time.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TimeVal" class="symbol" href="struct.TimeVal.html">TimeVal</a></td>
            
            <td class="docblock-summary">
            <p>Represents a precise time, with seconds and&nbsp;microseconds.</p>
            <p><span class="emblem deprecated">deprecated: 2.62</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TimeZone" class="symbol" href="struct.TimeZone.html">TimeZone</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GTimeZone</code> represents a time zone, at no particular point in&nbsp;time.</p>
            <p><span class="emblem available">since: 2.26</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TrashStack" class="symbol" href="struct.TrashStack.html">TrashStack</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GTrashStack</code> is an efficient way to keep a stack of unused allocated
memory chunks. Each memory chunk is required to be large enough to hold
a <code>gpointer</code>. This allows the stack to be maintained without any space
overhead, since the stack pointers can be stored inside the memory&nbsp;chunks.</p>
            <p><span class="emblem deprecated">deprecated: 2.48</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Tree" class="symbol" href="struct.Tree.html">Tree</a></td>
            
            <td class="docblock-summary">
            <p>The GTree struct is an opaque data structure representing a
[balanced binary tree][glib-Balanced-Binary-Trees]. It should be
accessed only by using the following&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TreeNode" class="symbol" href="struct.TreeNode.html">TreeNode</a></td>
            
            <td class="docblock-summary">
            <p>An opaque type which identifies a specific node in a <code>GTree</code>.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Tuples" class="symbol" href="struct.Tuples.html">Tuples</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GTuples</code> struct is used to return records (or tuples) from the
<code>GRelation</code> by g_relation_select(). It only contains one public
member - the number of records that matched. To access the matched
records, you must use&nbsp;g_tuples_index().</p>
            <p><span class="emblem deprecated">deprecated: 2.26</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnixPipe" class="symbol" href="struct.UnixPipe.html">UnixPipe</a></td>
            
            <td class="docblock-summary">
            <p>A Unix pipe. The advantage of this type over <code>int[2]</code> is that it can
be closed automatically when it goes out of scope, using <code>g_auto(GUnixPipe)</code>,
on compilers that support that&nbsp;feature.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Uri" class="symbol" href="struct.Uri.html">Uri</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GUri</code> type and related functions can be used to parse URIs into
their components, and build valid URIs from individual&nbsp;components.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UriParamsIter" class="symbol" href="struct.UriParamsIter.html">UriParamsIter</a></td>
            
            <td class="docblock-summary">
            <p>Many <span class="caps">URI</span> schemes include one or more attribute/value pairs as part of the <span class="caps">URI</span>
value. For example <code>scheme://server/path?query=string&amp;is=there</code> has two
attributes – <code>query=string</code> and <code>is=there</code> – in its query&nbsp;part.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Variant" class="symbol" href="struct.Variant.html">Variant</a></td>
            
            <td class="docblock-summary">
            <p><code>GVariant</code> is a variant datatype; it can contain one or more values
along with information about the type of the&nbsp;values.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantBuilder" class="symbol" href="struct.VariantBuilder.html">VariantBuilder</a></td>
            
            <td class="docblock-summary">
            <p>A utility type for constructing container-type <code>GVariant</code> instances.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantDict" class="symbol" href="struct.VariantDict.html">VariantDict</a></td>
            
            <td class="docblock-summary">
            <p><code>GVariantDict</code> is a mutable interface to <code>GVariant</code> dictionaries.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantIter" class="symbol" href="struct.VariantIter.html">VariantIter</a></td>
            
            <td class="docblock-summary">
            <p><code>GVariantIter</code> is an opaque data structure and can only be accessed
using the following&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantType" class="symbol" href="struct.VariantType.html">VariantType</a></td>
            
            <td class="docblock-summary">
            <p>A type in the <code>GVariant</code> type&nbsp;system.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="unions" class="section-header" style="display:flex;">
        Unions
        <a href="#unions" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="DoubleIEEE754" class="symbol" href="union.DoubleIEEE754.html">DoubleIEEE754</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FloatIEEE754" class="symbol" href="union.FloatIEEE754.html">FloatIEEE754</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Mutex" class="symbol" href="union.Mutex.html">Mutex</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GMutex</code> struct is an opaque data structure to represent a mutex
(mutual exclusion). It can be used to protect data against shared&nbsp;access.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TokenValue" class="symbol" href="union.TokenValue.html">TokenValue</a></td>
            
            <td class="docblock-summary">
            <p>A union holding the value of the&nbsp;token.</p>
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="aliases" class="section-header" style="display:flex;">
        Aliases
        <a href="#aliases" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="DateDay" class="symbol" href="alias.DateDay.html">DateDay</a></td>
            
            <td class="docblock-summary">
            <p>Integer representing a day of the month; between 1 and&nbsp;31.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DateYear" class="symbol" href="alias.DateYear.html">DateYear</a></td>
            
            <td class="docblock-summary">
            <p>Integer type representing a&nbsp;year.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MainContextPusher" class="symbol" href="alias.MainContextPusher.html">MainContextPusher</a></td>
            
            <td class="docblock-summary">
            <p>Opaque type. See <code>g_main_context_pusher_new()</code> for&nbsp;details.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MutexLocker" class="symbol" href="alias.MutexLocker.html">MutexLocker</a></td>
            
            <td class="docblock-summary">
            <p>Opaque type. See <code>g_mutex_locker_new()</code> for&nbsp;details.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Pid" class="symbol" href="alias.Pid.html">Pid</a></td>
            
            <td class="docblock-summary">
            <p>A type which is used to hold a process&nbsp;identification.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Quark" class="symbol" href="alias.Quark.html">Quark</a></td>
            
            <td class="docblock-summary">
            <p>A GQuark is a non-zero integer which uniquely identifies a
particular&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RecMutexLocker" class="symbol" href="alias.RecMutexLocker.html">RecMutexLocker</a></td>
            
            <td class="docblock-summary">
            <p>Opaque type. See <code>g_rec_mutex_locker_new()</code> for&nbsp;details.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RefString" class="symbol" href="alias.RefString.html">RefString</a></td>
            
            <td class="docblock-summary">
            <p>A typedef for a reference-counted string. A pointer to a <code>GRefString</code> can be
treated like a standard <code>char*</code> array by all code, but can additionally have
<code>g_ref_string_*()</code> methods called on it. <code>g_ref_string_*()</code> methods cannot be
called on <code>char*</code> arrays not allocated using&nbsp;g_ref_string_new().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RWLockReaderLocker" class="symbol" href="alias.RWLockReaderLocker.html">RWLockReaderLocker</a></td>
            
            <td class="docblock-summary">
            <p>Opaque type. See <code>g_rw_lock_reader_locker_new()</code> for&nbsp;details.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RWLockWriterLocker" class="symbol" href="alias.RWLockWriterLocker.html">RWLockWriterLocker</a></td>
            
            <td class="docblock-summary">
            <p>Opaque type. See <code>g_rw_lock_writer_locker_new()</code> for&nbsp;details.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Strv" class="symbol" href="alias.Strv.html">Strv</a></td>
            
            <td class="docblock-summary">
            <p>A typedef alias for gchar**. This is mostly useful when used together with
<code>g_auto()</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Time" class="symbol" href="alias.Time.html">Time</a></td>
            
            <td class="docblock-summary">
            <p>Simply a replacement for <code>time_t</code>. It has been deprecated
since it is not equivalent to <code>time_t</code> on 64-bit platforms
with a 64-bit <code>time_t</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.62</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TimeSpan" class="symbol" href="alias.TimeSpan.html">TimeSpan</a></td>
            
            <td class="docblock-summary">
            <p>A value representing an interval of time, in&nbsp;microseconds.</p>
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="enums" class="section-header" style="display:flex;">
        Enumerations
        <a href="#enums" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="ChecksumType" class="symbol" href="enum.ChecksumType.html">ChecksumType</a></td>
            
            <td class="docblock-summary">
            <p>The hashing algorithm to be used by <code>GChecksum</code> when performing the
digest of some&nbsp;data.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DateDMY" class="symbol" href="enum.DateDMY.html">DateDMY</a></td>
            
            <td class="docblock-summary">
            <p>This enumeration isn&#8217;t used in the <span class="caps">API</span>, but may be useful if you need
to mark a number as a day, month, or&nbsp;year.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DateMonth" class="symbol" href="enum.DateMonth.html">DateMonth</a></td>
            
            <td class="docblock-summary">
            <p>Enumeration representing a month; values are <code>G_DATE_JANUARY</code>,
<code>G_DATE_FEBRUARY</code>, etc. <code>G_DATE_BAD_MONTH</code> is the invalid&nbsp;value.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DateWeekday" class="symbol" href="enum.DateWeekday.html">DateWeekday</a></td>
            
            <td class="docblock-summary">
            <p>Enumeration representing a day of the week; <code>G_DATE_MONDAY</code>,
<code>G_DATE_TUESDAY</code>, etc. <code>G_DATE_BAD_WEEKDAY</code> is an invalid&nbsp;weekday.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ErrorType" class="symbol" href="enum.ErrorType.html">ErrorType</a></td>
            
            <td class="docblock-summary">
            <p>The possible errors, used in the <code>v_error</code> field
of <code>GTokenValue</code>, when the token is a <code>G_TOKEN_ERROR</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOError" class="symbol" href="enum.IOError.html">IOError</a></td>
            
            <td class="docblock-summary">
            <p><code>GIOError</code> is only used by the deprecated functions
g_io_channel_read(), g_io_channel_write(), and&nbsp;g_io_channel_seek().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOStatus" class="symbol" href="enum.IOStatus.html">IOStatus</a></td>
            
            <td class="docblock-summary">
            <p>Statuses returned by most of the <code>GIOFuncs</code> functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LogWriterOutput" class="symbol" href="enum.LogWriterOutput.html">LogWriterOutput</a></td>
            
            <td class="docblock-summary">
            <p>Return values from <code>GLogWriterFuncs</code> to indicate whether the given log entry
was successfully handled by the writer, or whether there was an error in
handling it (and hence a fallback writer should be&nbsp;used).</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="NormalizeMode" class="symbol" href="enum.NormalizeMode.html">NormalizeMode</a></td>
            
            <td class="docblock-summary">
            <p>Defines how a Unicode string is transformed in a canonical
form, standardizing such issues as whether a character with
an accent is represented as a base character and combining
accent or as a single precomposed character. Unicode strings
should generally be normalized before comparing&nbsp;them.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OnceStatus" class="symbol" href="enum.OnceStatus.html">OnceStatus</a></td>
            
            <td class="docblock-summary">
            <p>The possible statuses of a one-time initialization function
controlled by a <code>GOnce</code> struct.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionArg" class="symbol" href="enum.OptionArg.html">OptionArg</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GOptionArg</code> enum values determine which type of extra argument the
options expect to find. If an option expects an extra argument, it can
be specified in several ways; with a short option: <code>-x arg</code>, with a long
option: <code>--name arg</code> or combined in a single argument: <code>--name=arg</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SeekType" class="symbol" href="enum.SeekType.html">SeekType</a></td>
            
            <td class="docblock-summary">
            <p>An enumeration specifying the base position for a
<code>g_io_channel_seek_position()</code> operation.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SliceConfig" class="symbol" href="enum.SliceConfig.html">SliceConfig</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestFileType" class="symbol" href="enum.TestFileType.html">TestFileType</a></td>
            
            <td class="docblock-summary">
            <p>The type of file to return the filename for, when used with&nbsp;g_test_build_filename().</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestLogType" class="symbol" href="enum.TestLogType.html">TestLogType</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestResult" class="symbol" href="enum.TestResult.html">TestResult</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ThreadPriority" class="symbol" href="enum.ThreadPriority.html">ThreadPriority</a></td>
            
            <td class="docblock-summary">
            <p>Thread&nbsp;priorities.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TimeType" class="symbol" href="enum.TimeType.html">TimeType</a></td>
            
            <td class="docblock-summary">
            <p>Disambiguates a given time in two&nbsp;ways.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TokenType" class="symbol" href="enum.TokenType.html">TokenType</a></td>
            
            <td class="docblock-summary">
            <p>The possible types of token returned from each
<code>g_scanner_get_next_token()</code> call.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TraverseType" class="symbol" href="enum.TraverseType.html">TraverseType</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of traversal performed by g_tree_traverse(),
<code>g_node_traverse()</code> and g_node_find(). The different orders are
illustrated here:
- In order: A, B, C, D, E, F, G, H, I
  <img alt="" src="Sorted_binary_tree_inorder.svg" />
- Pre order: F, B, A, D, C, E, G, I, H
  <img alt="" src="Sorted_binary_tree_preorder.svg" />
- Post order: A, C, E, D, B, H, I, G, F
  <img alt="" src="Sorted_binary_tree_postorder.svg" />
- Level order: F, B, G, A, D, I, C, E, H
  <img alt="" src="Sorted_binary_tree_breadth-first_traversal.svg" /></p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnicodeBreakType" class="symbol" href="enum.UnicodeBreakType.html">UnicodeBreakType</a></td>
            
            <td class="docblock-summary">
            <p>These are the possible line break&nbsp;classifications.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnicodeScript" class="symbol" href="enum.UnicodeScript.html">UnicodeScript</a></td>
            
            <td class="docblock-summary">
            <p>The <code>GUnicodeScript</code> enumeration identifies different writing
systems. The values correspond to the names as defined in the
Unicode standard. The enumeration has been added in GLib 2.14,
and is interchangeable with <code>PangoScript</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnicodeType" class="symbol" href="enum.UnicodeType.html">UnicodeType</a></td>
            
            <td class="docblock-summary">
            <p>These are the possible character classifications from the
Unicode specification.
See <a href="http://www.unicode.org/reports/tr44/#General_Category_Values">Unicode Character Database</a>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnixPipeEnd" class="symbol" href="enum.UnixPipeEnd.html">UnixPipeEnd</a></td>
            
            <td class="docblock-summary">
            <p>Mnemonic constants for the ends of a Unix&nbsp;pipe.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UserDirectory" class="symbol" href="enum.UserDirectory.html">UserDirectory</a></td>
            
            <td class="docblock-summary">
            <p>These are logical ids for special directories which are defined
depending on the platform used. You should use <code>g_get_user_special_dir()</code>
to retrieve the full path associated to the logical&nbsp;id.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantClass" class="symbol" href="enum.VariantClass.html">VariantClass</a></td>
            
            <td class="docblock-summary">
            <p>The range of possible top-level types of <code>GVariant</code> instances.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="bitfields" class="section-header" style="display:flex;">
        Bitfields
        <a href="#bitfields" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="AsciiType" class="symbol" href="flags.AsciiType.html">AsciiType</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FileSetContentsFlags" class="symbol" href="flags.FileSetContentsFlags.html">FileSetContentsFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags to pass to <code>g_file_set_contents_full()</code> to affect its safety and&nbsp;performance.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FileTest" class="symbol" href="flags.FileTest.html">FileTest</a></td>
            
            <td class="docblock-summary">
            <p>A test to perform on a file using&nbsp;g_file_test().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FormatSizeFlags" class="symbol" href="flags.FormatSizeFlags.html">FormatSizeFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags to modify the format of the string returned by&nbsp;g_format_size_full().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookFlagMask" class="symbol" href="flags.HookFlagMask.html">HookFlagMask</a></td>
            
            <td class="docblock-summary">
            <p>Flags used internally in the <code>GHook</code> implementation.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOCondition" class="symbol" href="flags.IOCondition.html">IOCondition</a></td>
            
            <td class="docblock-summary">
            <p>A bitwise combination representing a condition to watch for on an
event&nbsp;source.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOFlags" class="symbol" href="flags.IOFlags.html">IOFlags</a></td>
            
            <td class="docblock-summary">
            <p>Specifies properties of a <code>GIOChannel</code>. Some of the flags can only be
read with g_io_channel_get_flags(), but not changed with&nbsp;g_io_channel_set_flags().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KeyFileFlags" class="symbol" href="flags.KeyFileFlags.html">KeyFileFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags which influence the&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LogLevelFlags" class="symbol" href="flags.LogLevelFlags.html">LogLevelFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags specifying the level of log&nbsp;messages.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MainContextFlags" class="symbol" href="flags.MainContextFlags.html">MainContextFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags to pass to <code>g_main_context_new_with_flags()</code> which affect the behaviour
of a <code>GMainContext</code>.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MarkupCollectType" class="symbol" href="flags.MarkupCollectType.html">MarkupCollectType</a></td>
            
            <td class="docblock-summary">
            <p>A mixed enumerated type and flags field. You must specify one type
(string, strdup, boolean, tristate).  Additionally, you may  optionally
bitwise <span class="caps">OR</span> the type with the flag <code>G_MARKUP_COLLECT_OPTIONAL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MarkupParseFlags" class="symbol" href="flags.MarkupParseFlags.html">MarkupParseFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags that affect the behaviour of the&nbsp;parser.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionFlags" class="symbol" href="flags.OptionFlags.html">OptionFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags which modify individual&nbsp;options.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RegexCompileFlags" class="symbol" href="flags.RegexCompileFlags.html">RegexCompileFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags specifying compile-time&nbsp;options.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RegexMatchFlags" class="symbol" href="flags.RegexMatchFlags.html">RegexMatchFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags specifying match-time&nbsp;options.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SpawnFlags" class="symbol" href="flags.SpawnFlags.html">SpawnFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags passed to g_spawn_sync(), <code>g_spawn_async()</code> and&nbsp;g_spawn_async_with_pipes().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestSubprocessFlags" class="symbol" href="flags.TestSubprocessFlags.html">TestSubprocessFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags to pass to <code>g_test_trap_subprocess()</code> to control input and&nbsp;output.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestTrapFlags" class="symbol" href="flags.TestTrapFlags.html">TestTrapFlags</a></td>
            
            <td class="docblock-summary">
            <p>Test traps are guards around forked tests.
These flags determine what traps to&nbsp;set.</p>
            <p><span class="emblem deprecated">deprecated: 2.38</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TraverseFlags" class="symbol" href="flags.TraverseFlags.html">TraverseFlags</a></td>
            
            <td class="docblock-summary">
            <p>Specifies which nodes are visited during several of the tree
functions, including <code>g_node_traverse()</code> and&nbsp;g_node_find().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UriFlags" class="symbol" href="flags.UriFlags.html">UriFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags that describe a <span class="caps">URI</span>.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UriHideFlags" class="symbol" href="flags.UriHideFlags.html">UriHideFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags describing what parts of the <span class="caps">URI</span> to hide in
g_uri_to_string_partial(). Note that <code>G_URI_HIDE_PASSWORD</code> and
<code>G_URI_HIDE_AUTH_PARAMS</code> will only work if the <code>GUri</code> was parsed with
the corresponding&nbsp;flags.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UriParamsFlags" class="symbol" href="flags.UriParamsFlags.html">UriParamsFlags</a></td>
            
            <td class="docblock-summary">
            <p>Flags modifying the way parameters are handled by <code>g_uri_parse_params()</code> and
<code>GUriParamsIter</code>.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="domains" class="section-header" style="display:flex;">
        Error Domains
        <a href="#domains" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="BookmarkFileError" class="symbol" href="error.BookmarkFileError.html">BookmarkFileError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by bookmark file&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ConvertError" class="symbol" href="error.ConvertError.html">ConvertError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by character set conversion&nbsp;routines.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FileError" class="symbol" href="error.FileError.html">FileError</a></td>
            
            <td class="docblock-summary">
            <p>Values corresponding to <code>errno</code> codes returned from file operations
on <span class="caps">UNIX</span>. Unlike <code>errno</code> codes, GFileError values are available on
all systems, even Windows. The exact meaning of each code depends
on what sort of file operation you were performing; the <span class="caps">UNIX</span>
documentation gives more details. The following error code descriptions
come from the <span class="caps">GNU</span> C Library manual, and are under the copyright
of that&nbsp;manual.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOChannelError" class="symbol" href="error.IOChannelError.html">IOChannelError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by <code>GIOChannel</code> operations.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KeyFileError" class="symbol" href="error.KeyFileError.html">KeyFileError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by key file&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MarkupError" class="symbol" href="error.MarkupError.html">MarkupError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by markup&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="NumberParserError" class="symbol" href="error.NumberParserError.html">NumberParserError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by functions converting a string to a&nbsp;number.</p>
            <p><span class="emblem available">since: 2.54</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionError" class="symbol" href="error.OptionError.html">OptionError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by option&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RegexError" class="symbol" href="error.RegexError.html">RegexError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by regular expressions&nbsp;functions.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ShellError" class="symbol" href="error.ShellError.html">ShellError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by shell&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SpawnError" class="symbol" href="error.SpawnError.html">SpawnError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by spawning&nbsp;processes.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ThreadError" class="symbol" href="error.ThreadError.html">ThreadError</a></td>
            
            <td class="docblock-summary">
            <p>Possible errors of thread related&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UriError" class="symbol" href="error.UriError.html">UriError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by <code>GUri</code> methods.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VariantParseError" class="symbol" href="error.VariantParseError.html">VariantParseError</a></td>
            
            <td class="docblock-summary">
            <p>Error codes returned by parsing text-format&nbsp;GVariants.</p>
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="callbacks" class="section-header" style="display:flex;">
        Callbacks
        <a href="#callbacks" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="CacheDestroyFunc" class="symbol" href="callback.CacheDestroyFunc.html">CacheDestroyFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the <code>value_destroy_func</code> and <code>key_destroy_func</code>
functions passed to g_cache_new(). The functions are passed a
pointer to the <code>GCache</code> key or <code>GCache</code> value and should free any
memory and other resources associated with&nbsp;it.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CacheDupFunc" class="symbol" href="callback.CacheDupFunc.html">CacheDupFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the <code>key_dup_func</code> function passed to
g_cache_new(). The function is passed a key
(<strong>not</strong> a value as the prototype implies) and
should return a duplicate of the&nbsp;key.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CacheNewFunc" class="symbol" href="callback.CacheNewFunc.html">CacheNewFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the <code>value_new_func</code> function passed to
g_cache_new(). It is passed a <code>GCache</code> key and should create the
value corresponding to the&nbsp;key.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ChildWatchFunc" class="symbol" href="callback.ChildWatchFunc.html">ChildWatchFunc</a></td>
            
            <td class="docblock-summary">
            <p>Prototype of a <code>GChildWatchSource</code> callback, called when a child
process has&nbsp;exited.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ClearHandleFunc" class="symbol" href="callback.ClearHandleFunc.html">ClearHandleFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_clear_handle_id().
The implementation is expected to free the resource identified
by <code>handle_id</code>; for instance, if <code>handle_id</code> is a <code>GSource</code> <span class="caps">ID</span>,
<code>g_source_remove()</code> can be&nbsp;used.</p>
            <p><span class="emblem available">since: 2.56</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CompareDataFunc" class="symbol" href="callback.CompareDataFunc.html">CompareDataFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of a comparison function used to compare two
values.  The function should return a negative integer if the first
value comes before the second, 0 if they are equal, or a positive
integer if the first value comes after the&nbsp;second.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CompareFunc" class="symbol" href="callback.CompareFunc.html">CompareFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of a comparison function used to compare two
values.  The function should return a negative integer if the first
value comes before the second, 0 if they are equal, or a positive
integer if the first value comes after the&nbsp;second.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CompletionFunc" class="symbol" href="callback.CompletionFunc.html">CompletionFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the function passed to g_completion_new(). It
should return the string corresponding to the given target item.
This is used when you use data structures as <code>GCompletion</code> items.</p>
            <p><span class="emblem deprecated">deprecated: 2.26</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CompletionStrncmpFunc" class="symbol" href="callback.CompletionStrncmpFunc.html">CompletionStrncmpFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the function passed to
g_completion_set_compare(). This is used when you use strings as
<code>GCompletion</code> items.</p>
            <p><span class="emblem deprecated">deprecated: 2.26</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CopyFunc" class="symbol" href="callback.CopyFunc.html">CopyFunc</a></td>
            
            <td class="docblock-summary">
            <p>A function of this signature is used to copy the node data
when doing a deep-copy of a&nbsp;tree.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DataForeachFunc" class="symbol" href="callback.DataForeachFunc.html">DataForeachFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_dataset_foreach(). It is
called with each <code>GQuark</code> id and associated data element, together
with the <code>user_data</code> parameter supplied to&nbsp;g_dataset_foreach().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DestroyNotify" class="symbol" href="callback.DestroyNotify.html">DestroyNotify</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function which is called when a data element
is destroyed. It is passed the pointer to the data element and
should free any memory and resources allocated for&nbsp;it.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DuplicateFunc" class="symbol" href="callback.DuplicateFunc.html">DuplicateFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of functions that are used to &#8216;duplicate&#8217; an object.
What this means depends on the context, it could just be
incrementing the reference count, if <code>data</code> is a ref-counted&nbsp;object.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="EqualFunc" class="symbol" href="callback.EqualFunc.html">EqualFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of a function used to test two values for
equality. The function should return <code>TRUE</code> if both values are equal
and <code>FALSE</code> otherwise.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="EqualFuncFull" class="symbol" href="callback.EqualFuncFull.html">EqualFuncFull</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of a function used to test two values for
equality. The function should return <code>TRUE</code> if both values are equal
and <code>FALSE</code> otherwise.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ErrorClearFunc" class="symbol" href="callback.ErrorClearFunc.html">ErrorClearFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function which is called when an extended
error instance is freed. It is passed the error pointer about to be
freed, and should free the error&#8217;s private data&nbsp;fields.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ErrorCopyFunc" class="symbol" href="callback.ErrorCopyFunc.html">ErrorCopyFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function which is called when an extended
error instance is copied. It is passed the pointer to the
destination error and source error, and should copy only the fields
of the private data from <code>src_error</code> to <code>dest_error</code>.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ErrorInitFunc" class="symbol" href="callback.ErrorInitFunc.html">ErrorInitFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function which is called just after an
extended error instance is created and its fields filled. It should
only initialize the fields in the private data, which can be
received with the generated <code>*_get_private()</code> function.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="FreeFunc" class="symbol" href="callback.FreeFunc.html">FreeFunc</a></td>
            
            <td class="docblock-summary">
            <p>Declares a type of function which takes an arbitrary
data pointer argument and has no return value. It is
not currently used in GLib or <span class="caps">GTK</span>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="Func" class="symbol" href="callback.Func.html">Func</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of functions passed to <code>g_list_foreach()</code> and&nbsp;g_slist_foreach().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HashFunc" class="symbol" href="callback.HashFunc.html">HashFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the hash function which is passed to
<code>g_hash_table_new()</code> when a <code>GHashTable</code> is&nbsp;created.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HFunc" class="symbol" href="callback.HFunc.html">HFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the function passed to g_hash_table_foreach().
It is called with each key/value pair, together with the <code>user_data</code>
parameter which is passed to&nbsp;g_hash_table_foreach().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookCheckFunc" class="symbol" href="callback.HookCheckFunc.html">HookCheckFunc</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of a hook function that can be invoked
by&nbsp;g_hook_list_invoke_check().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookCheckMarshaller" class="symbol" href="callback.HookCheckMarshaller.html">HookCheckMarshaller</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of function used by&nbsp;g_hook_list_marshal_check().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookCompareFunc" class="symbol" href="callback.HookCompareFunc.html">HookCompareFunc</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of function used to compare <code>GHook</code> elements in&nbsp;g_hook_insert_sorted().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookFinalizeFunc" class="symbol" href="callback.HookFinalizeFunc.html">HookFinalizeFunc</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of function to be called when a hook in a
list of hooks gets&nbsp;finalized.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookFindFunc" class="symbol" href="callback.HookFindFunc.html">HookFindFunc</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of the function passed to&nbsp;g_hook_find().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookFunc" class="symbol" href="callback.HookFunc.html">HookFunc</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of a hook function that can be invoked
by&nbsp;g_hook_list_invoke().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HookMarshaller" class="symbol" href="callback.HookMarshaller.html">HookMarshaller</a></td>
            
            <td class="docblock-summary">
            <p>Defines the type of function used by&nbsp;g_hook_list_marshal().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HRFunc" class="symbol" href="callback.HRFunc.html">HRFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the function passed to
g_hash_table_foreach_remove(). It is called with each key/value
pair, together with the <code>user_data</code> parameter passed to
g_hash_table_foreach_remove(). It should return <code>TRUE</code> if the
key/value pair should be removed from the <code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IOFunc" class="symbol" href="callback.IOFunc.html">IOFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to <code>g_io_add_watch()</code> or
g_io_add_watch_full(), which is called when the requested condition
on a <code>GIOChannel</code> is&nbsp;satisfied.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LogFunc" class="symbol" href="callback.LogFunc.html">LogFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the prototype of log handler&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LogWriterFunc" class="symbol" href="callback.LogWriterFunc.html">LogWriterFunc</a></td>
            
            <td class="docblock-summary">
            <p>Writer function for log entries. A log entry is a collection of one or more
<code>GLogFields</code>, using the standard <a href="https://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html">field names from journal
specification</a>.
See <code>g_log_structured()</code> for more&nbsp;information.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="NodeForeachFunc" class="symbol" href="callback.NodeForeachFunc.html">NodeForeachFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_node_children_foreach().
The function is called with each child node, together with the user
data passed to&nbsp;g_node_children_foreach().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="NodeTraverseFunc" class="symbol" href="callback.NodeTraverseFunc.html">NodeTraverseFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_node_traverse(). The
function is called with each of the nodes visited, together with the
user data passed to g_node_traverse(). If the function returns
<code>TRUE</code>, then the traversal is&nbsp;stopped.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionArgFunc" class="symbol" href="callback.OptionArgFunc.html">OptionArgFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of function to be passed as callback for <code>G_OPTION_ARG_CALLBACK</code>
options.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionErrorFunc" class="symbol" href="callback.OptionErrorFunc.html">OptionErrorFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of function to be used as callback when a parse error&nbsp;occurs.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OptionParseFunc" class="symbol" href="callback.OptionParseFunc.html">OptionParseFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of function that can be called before and after&nbsp;parsing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PollFunc" class="symbol" href="callback.PollFunc.html">PollFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_main_context_set_poll_func().
The semantics of the function should match those of the <code>poll()</code> system&nbsp;call.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PrintFunc" class="symbol" href="callback.PrintFunc.html">PrintFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the print handler functions.
These are called with the complete formatted string to&nbsp;output.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RegexEvalCallback" class="symbol" href="callback.RegexEvalCallback.html">RegexEvalCallback</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the function passed to g_regex_replace_eval().
It is called for each occurrence of the pattern in the string passed
to g_regex_replace_eval(), and it should append the replacement to
<code>result</code>.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ScannerMsgFunc" class="symbol" href="callback.ScannerMsgFunc.html">ScannerMsgFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the message handler&nbsp;function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SequenceIterCompareFunc" class="symbol" href="callback.SequenceIterCompareFunc.html">SequenceIterCompareFunc</a></td>
            
            <td class="docblock-summary">
            <p>A <code>GSequenceIterCompareFunc</code> is a function used to compare iterators.
It must return zero if the iterators compare equal, a negative value
if <code>a</code> comes before <code>b</code>, and a positive value if <code>b</code> comes before <code>a</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceDisposeFunc" class="symbol" href="callback.SourceDisposeFunc.html">SourceDisposeFunc</a></td>
            
            <td class="docblock-summary">
            <p>Dispose function for <code>source</code>. See <code>g_source_set_dispose_function()</code> for&nbsp;details.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceDummyMarshal" class="symbol" href="callback.SourceDummyMarshal.html">SourceDummyMarshal</a></td>
            
            <td class="docblock-summary">
            <p>This is just a placeholder for <code>GClosureMarshal</code>,
which cannot be used here for dependency&nbsp;reasons.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceFunc" class="symbol" href="callback.SourceFunc.html">SourceFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_timeout_add(),
g_timeout_add_full(), g_idle_add(), and&nbsp;g_idle_add_full().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SourceOnceFunc" class="symbol" href="callback.SourceOnceFunc.html">SourceOnceFunc</a></td>
            
            <td class="docblock-summary">
            <p>A source function that is only called once before being removed from the main
context&nbsp;automatically.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SpawnChildSetupFunc" class="symbol" href="callback.SpawnChildSetupFunc.html">SpawnChildSetupFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the setup function passed to g_spawn_async(),
<code>g_spawn_sync()</code> and g_spawn_async_with_pipes(), which can, in very
limited ways, be used to affect the child&#8217;s&nbsp;execution.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestDataFunc" class="symbol" href="callback.TestDataFunc.html">TestDataFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type used for test case functions that take an extra pointer&nbsp;argument.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestFixtureFunc" class="symbol" href="callback.TestFixtureFunc.html">TestFixtureFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type used for functions that operate on test fixtures.  This is
used for the fixture setup and teardown functions as well as for the
testcases&nbsp;themselves.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestFunc" class="symbol" href="callback.TestFunc.html">TestFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type used for test case&nbsp;functions.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TestLogFatalFunc" class="symbol" href="callback.TestLogFatalFunc.html">TestLogFatalFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the prototype of fatal log handler&nbsp;functions.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ThreadFunc" class="symbol" href="callback.ThreadFunc.html">ThreadFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of the <code>func</code> functions passed to <code>g_thread_new()</code>
or&nbsp;g_thread_try_new().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TranslateFunc" class="symbol" href="callback.TranslateFunc.html">TranslateFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of functions which are used to translate user-visible
strings, for <option>&#8212;help</option> output.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TraverseFunc" class="symbol" href="callback.TraverseFunc.html">TraverseFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_tree_traverse(). It is
passed the key and value of each node, together with the <code>user_data</code>
parameter passed to g_tree_traverse(). If the function returns
<code>TRUE</code>, the traversal is&nbsp;stopped.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TraverseNodeFunc" class="symbol" href="callback.TraverseNodeFunc.html">TraverseNodeFunc</a></td>
            
            <td class="docblock-summary">
            <p>Specifies the type of function passed to g_tree_foreach_node(). It is
passed each node, together with the <code>user_data</code> parameter passed to
g_tree_foreach_node(). If the function returns <code>TRUE</code>, the traversal is&nbsp;stopped.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UnixFDSourceFunc" class="symbol" href="callback.UnixFDSourceFunc.html">UnixFDSourceFunc</a></td>
            
            <td class="docblock-summary">
            <p>The type of functions to be called when a <span class="caps">UNIX</span> fd watch source&nbsp;triggers.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VoidFunc" class="symbol" href="callback.VoidFunc.html">VoidFunc</a></td>
            
            <td class="docblock-summary">
            <p>Declares a type of function which takes no arguments
and has no return value. It is used to specify the type
function passed to&nbsp;g_atexit().</p>
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="functions" class="section-header" style="display:flex;">
        Functions
        <a href="#functions" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="access" class="symbol" href="func.access.html">access</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>access()</code> function. This function is used to
test a pathname for one or several of read, write or execute
permissions, or just&nbsp;existence.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="aligned_alloc" class="symbol" href="func.aligned_alloc.html">aligned_alloc</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_malloc(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>)
bytes, but care is taken to align the allocated memory to with the given
alignment value. Additionally, it will detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="aligned_alloc0" class="symbol" href="func.aligned_alloc0.html">aligned_alloc0</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_aligned_alloc(), but it will
also clear the allocated memory before returning&nbsp;it.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="aligned_free" class="symbol" href="func.aligned_free.html">aligned_free</a></td>
            
            <td class="docblock-summary">
            <p>Frees the memory allocated by&nbsp;g_aligned_alloc().</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="aligned_free_sized" class="symbol" href="func.aligned_free_sized.html">aligned_free_sized</a></td>
            
            <td class="docblock-summary">
            <p>Frees the memory pointed to by <code>mem</code>, assuming it is has the given <code>size</code> and
<code>alignment</code>.</p>
            <p><span class="emblem available">since: 2.76</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_digit_value" class="symbol" href="func.ascii_digit_value.html">ascii_digit_value</a></td>
            
            <td class="docblock-summary">
            <p>Determines the numeric value of a character as a decimal digit. If the
character is not a decimal digit according to <code>g_ascii_isdigit()</code>,
<code>-1</code> is&nbsp;returned.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_dtostr" class="symbol" href="func.ascii_dtostr.html">ascii_dtostr</a></td>
            
            <td class="docblock-summary">
            <p>Converts a <code>gdouble</code> to a string, using the &#8216;.&#8217; as
decimal&nbsp;point.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_formatd" class="symbol" href="func.ascii_formatd.html">ascii_formatd</a></td>
            
            <td class="docblock-summary">
            <p>Converts a <code>gdouble</code> to a string, using the &#8216;.&#8217; as
decimal point. To format the number you pass in
a <code>printf()</code>-style format string. Allowed conversion
specifiers are &#8216;e&#8217;, &#8216;E&#8217;, &#8216;f&#8217;, &#8216;F&#8217;, &#8216;g&#8217; and&nbsp;&#8216;G&#8217;.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strcasecmp" class="symbol" href="func.ascii_strcasecmp.html">ascii_strcasecmp</a></td>
            
            <td class="docblock-summary">
            <p>Compare two strings, ignoring the case of <span class="caps">ASCII</span>&nbsp;characters.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strdown" class="symbol" href="func.ascii_strdown.html">ascii_strdown</a></td>
            
            <td class="docblock-summary">
            <p>Converts all upper case <span class="caps">ASCII</span> letters to lower case <span class="caps">ASCII</span> letters, with
semantics that exactly match <code>g_ascii_tolower()</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_string_to_signed" class="symbol" href="func.ascii_string_to_signed.html">ascii_string_to_signed</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function for converting a string to a signed&nbsp;number.</p>
            <p><span class="emblem available">since: 2.54</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_string_to_unsigned" class="symbol" href="func.ascii_string_to_unsigned.html">ascii_string_to_unsigned</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function for converting a string to an unsigned&nbsp;number.</p>
            <p><span class="emblem available">since: 2.54</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strncasecmp" class="symbol" href="func.ascii_strncasecmp.html">ascii_strncasecmp</a></td>
            
            <td class="docblock-summary">
            <p>Compare <code>s1</code> and <code>s2</code>, ignoring the case of <span class="caps">ASCII</span> characters and any
characters after the first <code>n</code> in each string. If either string is
less than <code>n</code> bytes long, comparison will stop at the first nul byte&nbsp;encountered.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strtod" class="symbol" href="func.ascii_strtod.html">ascii_strtod</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to a floating point&nbsp;value.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strtoll" class="symbol" href="func.ascii_strtoll.html">ascii_strtoll</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to a <code>gint64</code> value.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strtoull" class="symbol" href="func.ascii_strtoull.html">ascii_strtoull</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to a <code>guint64</code> value.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_strup" class="symbol" href="func.ascii_strup.html">ascii_strup</a></td>
            
            <td class="docblock-summary">
            <p>Converts all lower case <span class="caps">ASCII</span> letters to upper case <span class="caps">ASCII</span> letters, with
semantics that exactly match <code>g_ascii_toupper()</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_tolower" class="symbol" href="func.ascii_tolower.html">ascii_tolower</a></td>
            
            <td class="docblock-summary">
            <p>Convert a character to <span class="caps">ASCII</span> lower case. If the character is not an
<span class="caps">ASCII</span> upper case letter, it is returned&nbsp;unchanged.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_toupper" class="symbol" href="func.ascii_toupper.html">ascii_toupper</a></td>
            
            <td class="docblock-summary">
            <p>Convert a character to <span class="caps">ASCII</span> upper case. If the character is not an
<span class="caps">ASCII</span> lower case letter, it is returned&nbsp;unchanged.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_xdigit_value" class="symbol" href="func.ascii_xdigit_value.html">ascii_xdigit_value</a></td>
            
            <td class="docblock-summary">
            <p>Determines the numeric value of a character as a hexadecimal digit. If the
character is not a hex digit according to <code>g_ascii_isxdigit()</code>,
<code>-1</code> is&nbsp;returned.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_warning" class="symbol" href="func.assert_warning.html">assert_warning</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message" class="symbol" href="func.assertion_message.html">assertion_message</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_cmpint" class="symbol" href="func.assertion_message_cmpint.html">assertion_message_cmpint</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_cmpnum" class="symbol" href="func.assertion_message_cmpnum.html">assertion_message_cmpnum</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_cmpstr" class="symbol" href="func.assertion_message_cmpstr.html">assertion_message_cmpstr</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_cmpstrv" class="symbol" href="func.assertion_message_cmpstrv.html">assertion_message_cmpstrv</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_error" class="symbol" href="func.assertion_message_error.html">assertion_message_error</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assertion_message_expr" class="symbol" href="func.assertion_message_expr.html">assertion_message_expr</a></td>
            
            <td class="docblock-summary">
            <p>Internal function used to print messages from the public <code>g_assert()</code> and
<code>g_assert_not_reached()</code> macros.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atexit" class="symbol" href="func.atexit.html">atexit</a></td>
            
            <td class="docblock-summary">
            <p>Specifies a function to be called at normal program&nbsp;termination.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_add" class="symbol" href="func.atomic_int_add.html">atomic_int_add</a></td>
            
            <td class="docblock-summary">
            <p>Atomically adds <code>val</code> to the value of <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_and" class="symbol" href="func.atomic_int_and.html">atomic_int_and</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;and&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_compare_and_exchange" class="symbol" href="func.atomic_int_compare_and_exchange.html">atomic_int_compare_and_exchange</a></td>
            
            <td class="docblock-summary">
            <p>Compares <code>atomic</code> to <code>oldval</code> and, if equal, sets it to <code>newval</code>.
If <code>atomic</code> was not equal to <code>oldval</code> then no change&nbsp;occurs.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_compare_and_exchange_full" class="symbol" href="func.atomic_int_compare_and_exchange_full.html">atomic_int_compare_and_exchange_full</a></td>
            
            <td class="docblock-summary">
            <p>Compares <code>atomic</code> to <code>oldval</code> and, if equal, sets it to <code>newval</code>.
If <code>atomic</code> was not equal to <code>oldval</code> then no change occurs.
In any case the value of <code>atomic</code> before this operation is stored in <code>preval</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_dec_and_test" class="symbol" href="func.atomic_int_dec_and_test.html">atomic_int_dec_and_test</a></td>
            
            <td class="docblock-summary">
            <p>Decrements the value of <code>atomic</code> by&nbsp;1.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_exchange" class="symbol" href="func.atomic_int_exchange.html">atomic_int_exchange</a></td>
            
            <td class="docblock-summary">
            <p>Sets the <code>atomic</code> to <code>newval</code> and returns the old value from <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_exchange_and_add" class="symbol" href="func.atomic_int_exchange_and_add.html">atomic_int_exchange_and_add</a></td>
            
            <td class="docblock-summary">
            <p>This function existed before <code>g_atomic_int_add()</code> returned the prior
value of the integer (which it now does).  It is retained only for
compatibility reasons.  Don&#8217;t use this function in new&nbsp;code.</p>
            <p><span class="emblem deprecated">deprecated: 2.30</span>&nbsp;<span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_get" class="symbol" href="func.atomic_int_get.html">atomic_int_get</a></td>
            
            <td class="docblock-summary">
            <p>Gets the current value of <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_inc" class="symbol" href="func.atomic_int_inc.html">atomic_int_inc</a></td>
            
            <td class="docblock-summary">
            <p>Increments the value of <code>atomic</code> by&nbsp;1.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_or" class="symbol" href="func.atomic_int_or.html">atomic_int_or</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;or&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_set" class="symbol" href="func.atomic_int_set.html">atomic_int_set</a></td>
            
            <td class="docblock-summary">
            <p>Sets the value of <code>atomic</code> to <code>newval</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_int_xor" class="symbol" href="func.atomic_int_xor.html">atomic_int_xor</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;xor&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_add" class="symbol" href="func.atomic_pointer_add.html">atomic_pointer_add</a></td>
            
            <td class="docblock-summary">
            <p>Atomically adds <code>val</code> to the value of <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_and" class="symbol" href="func.atomic_pointer_and.html">atomic_pointer_and</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;and&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_compare_and_exchange" class="symbol" href="func.atomic_pointer_compare_and_exchange.html">atomic_pointer_compare_and_exchange</a></td>
            
            <td class="docblock-summary">
            <p>Compares <code>atomic</code> to <code>oldval</code> and, if equal, sets it to <code>newval</code>.
If <code>atomic</code> was not equal to <code>oldval</code> then no change&nbsp;occurs.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_compare_and_exchange_full" class="symbol" href="func.atomic_pointer_compare_and_exchange_full.html">atomic_pointer_compare_and_exchange_full</a></td>
            
            <td class="docblock-summary">
            <p>Compares <code>atomic</code> to <code>oldval</code> and, if equal, sets it to <code>newval</code>.
If <code>atomic</code> was not equal to <code>oldval</code> then no change occurs.
In any case the value of <code>atomic</code> before this operation is stored in <code>preval</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_exchange" class="symbol" href="func.atomic_pointer_exchange.html">atomic_pointer_exchange</a></td>
            
            <td class="docblock-summary">
            <p>Sets the <code>atomic</code> to <code>newval</code> and returns the old value from <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_get" class="symbol" href="func.atomic_pointer_get.html">atomic_pointer_get</a></td>
            
            <td class="docblock-summary">
            <p>Gets the current value of <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_or" class="symbol" href="func.atomic_pointer_or.html">atomic_pointer_or</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;or&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_set" class="symbol" href="func.atomic_pointer_set.html">atomic_pointer_set</a></td>
            
            <td class="docblock-summary">
            <p>Sets the value of <code>atomic</code> to <code>newval</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_pointer_xor" class="symbol" href="func.atomic_pointer_xor.html">atomic_pointer_xor</a></td>
            
            <td class="docblock-summary">
            <p>Performs an atomic bitwise &#8216;xor&#8217; of the value of <code>atomic</code> and <code>val</code>,
storing the result back in <code>atomic</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_acquire" class="symbol" href="func.atomic_rc_box_acquire.html">atomic_rc_box_acquire</a></td>
            
            <td class="docblock-summary">
            <p>Atomically acquires a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_alloc" class="symbol" href="func.atomic_rc_box_alloc.html">atomic_rc_box_alloc</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>block_size</code> bytes of memory, and adds atomic
reference counting semantics to&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_alloc0" class="symbol" href="func.atomic_rc_box_alloc0.html">atomic_rc_box_alloc0</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>block_size</code> bytes of memory, and adds atomic
reference counting semantics to&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_dup" class="symbol" href="func.atomic_rc_box_dup.html">atomic_rc_box_dup</a></td>
            
            <td class="docblock-summary">
            <p>Allocates a new block of data with atomic reference counting
semantics, and copies <code>block_size</code> bytes of <code>mem_block</code>
into&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_get_size" class="symbol" href="func.atomic_rc_box_get_size.html">atomic_rc_box_get_size</a></td>
            
            <td class="docblock-summary">
            <p>Retrieves the size of the reference counted data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_release" class="symbol" href="func.atomic_rc_box_release.html">atomic_rc_box_release</a></td>
            
            <td class="docblock-summary">
            <p>Atomically releases a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_release_full" class="symbol" href="func.atomic_rc_box_release_full.html">atomic_rc_box_release_full</a></td>
            
            <td class="docblock-summary">
            <p>Atomically releases a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_ref_count_compare" class="symbol" href="func.atomic_ref_count_compare.html">atomic_ref_count_compare</a></td>
            
            <td class="docblock-summary">
            <p>Atomically compares the current value of <code>arc</code> with <code>val</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_ref_count_dec" class="symbol" href="func.atomic_ref_count_dec.html">atomic_ref_count_dec</a></td>
            
            <td class="docblock-summary">
            <p>Atomically decreases the reference&nbsp;count.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_ref_count_inc" class="symbol" href="func.atomic_ref_count_inc.html">atomic_ref_count_inc</a></td>
            
            <td class="docblock-summary">
            <p>Atomically increases the reference&nbsp;count.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_ref_count_init" class="symbol" href="func.atomic_ref_count_init.html">atomic_ref_count_init</a></td>
            
            <td class="docblock-summary">
            <p>Initializes a reference count variable to&nbsp;1.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_decode" class="symbol" href="func.base64_decode.html">base64_decode</a></td>
            
            <td class="docblock-summary">
            <p>Decode a sequence of Base-64 encoded text into binary data.  Note
that the returned binary data is not necessarily zero-terminated,
so it should not be used as a character&nbsp;string.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_decode_inplace" class="symbol" href="func.base64_decode_inplace.html">base64_decode_inplace</a></td>
            
            <td class="docblock-summary">
            <p>Decode a sequence of Base-64 encoded text into binary data
by overwriting the input&nbsp;data.</p>
            <p><span class="emblem available">since: 2.20</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_decode_step" class="symbol" href="func.base64_decode_step.html">base64_decode_step</a></td>
            
            <td class="docblock-summary">
            <p>Incrementally decode a sequence of binary data from its Base-64 stringified
representation. By calling this function multiple times you can convert
data in chunks to avoid having to have the full encoded data in&nbsp;memory.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_encode" class="symbol" href="func.base64_encode.html">base64_encode</a></td>
            
            <td class="docblock-summary">
            <p>Encode a sequence of binary data into its Base-64 stringified&nbsp;representation.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_encode_close" class="symbol" href="func.base64_encode_close.html">base64_encode_close</a></td>
            
            <td class="docblock-summary">
            <p>Flush the status from a sequence of calls to&nbsp;g_base64_encode_step().</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="base64_encode_step" class="symbol" href="func.base64_encode_step.html">base64_encode_step</a></td>
            
            <td class="docblock-summary">
            <p>Incrementally encode a sequence of binary data into its Base-64 stringified
representation. By calling this function multiple times you can convert
data in chunks to avoid having to have the full encoded data in&nbsp;memory.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="basename" class="symbol" href="func.basename.html">basename</a></td>
            
            <td class="docblock-summary">
            <p>Gets the name of the file without any leading directory
components. It returns a pointer into the given file name&nbsp;string.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_lock" class="symbol" href="func.bit_lock.html">bit_lock</a></td>
            
            <td class="docblock-summary">
            <p>Sets the indicated <code>lock_bit</code> in <code>address</code>.  If the bit is already
set, this call will block until <code>g_bit_unlock()</code> unsets the
corresponding&nbsp;bit.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_nth_lsf" class="symbol" href="func.bit_nth_lsf.html">bit_nth_lsf</a></td>
            
            <td class="docblock-summary">
            <p>Find the position of the first bit set in <code>mask</code>, searching
from (but not including) <code>nth_bit</code> upwards. Bits are numbered
from 0 (least significant) to sizeof(#gulong) * 8 - 1 (31 or 63,
usually). To start searching from the 0th bit, set <code>nth_bit</code> to&nbsp;-1.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_nth_msf" class="symbol" href="func.bit_nth_msf.html">bit_nth_msf</a></td>
            
            <td class="docblock-summary">
            <p>Find the position of the first bit set in <code>mask</code>, searching
from (but not including) <code>nth_bit</code> downwards. Bits are numbered
from 0 (least significant) to sizeof(#gulong) * 8 - 1 (31 or 63,
usually). To start searching from the last bit, set <code>nth_bit</code> to
-1 or GLIB_SIZEOF_LONG *&nbsp;8.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_storage" class="symbol" href="func.bit_storage.html">bit_storage</a></td>
            
            <td class="docblock-summary">
            <p>Gets the number of bits used to hold <code>number</code>,
e.g. if <code>number</code> is 4, 3 bits are&nbsp;needed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_trylock" class="symbol" href="func.bit_trylock.html">bit_trylock</a></td>
            
            <td class="docblock-summary">
            <p>Sets the indicated <code>lock_bit</code> in <code>address</code>, returning <code>TRUE</code> if
successful.  If the bit is already set, returns <code>FALSE</code> immediately.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="bit_unlock" class="symbol" href="func.bit_unlock.html">bit_unlock</a></td>
            
            <td class="docblock-summary">
            <p>Clears the indicated <code>lock_bit</code> in <code>address</code>.  If another thread is
currently blocked in <code>g_bit_lock()</code> on this same bit then it will be
woken&nbsp;up.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="blow_chunks" class="symbol" href="func.blow_chunks.html">blow_chunks</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="build_filename" class="symbol" href="func.build_filename.html">build_filename</a></td>
            
            <td class="docblock-summary">
            <p>Creates a filename from a series of elements using the correct
separator for the current&nbsp;platform.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="build_filename_valist" class="symbol" href="func.build_filename_valist.html">build_filename_valist</a></td>
            
            <td class="docblock-summary">
            <p>Creates a filename from a list of elements using the correct
separator for the current&nbsp;platform.</p>
            <p><span class="emblem available">since: 2.56</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="build_filenamev" class="symbol" href="func.build_filenamev.html">build_filenamev</a></td>
            
            <td class="docblock-summary">
            <p>Creates a filename from a vector of elements using the correct
separator for the current&nbsp;platform.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="build_path" class="symbol" href="func.build_path.html">build_path</a></td>
            
            <td class="docblock-summary">
            <p>Creates a path from a series of elements using <code>separator</code> as the
separator between&nbsp;elements.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="build_pathv" class="symbol" href="func.build_pathv.html">build_pathv</a></td>
            
            <td class="docblock-summary">
            <p>Behaves exactly like g_build_path(), but takes the path elements
as a string array, instead of variadic&nbsp;arguments.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="canonicalize_filename" class="symbol" href="func.canonicalize_filename.html">canonicalize_filename</a></td>
            
            <td class="docblock-summary">
            <p>Gets the canonical file name from <code>filename</code>. All triple slashes are turned into
single slashes, and all <code>..</code> and <code>.</code>s resolved against <code>relative_to</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="chdir" class="symbol" href="func.chdir.html">chdir</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>chdir()</code> function. The function changes the
current directory of the process to <code>path</code>.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="check_version" class="symbol" href="func.check_version.html">check_version</a></td>
            
            <td class="docblock-summary">
            <p>Checks that the GLib library in use is compatible with the
given&nbsp;version.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="child_watch_add" class="symbol" href="func.child_watch_add.html">child_watch_add</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called when the child indicated by <code>pid</code>
exits, at a default priority, <code>G_PRIORITY_DEFAULT</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="child_watch_add_full" class="symbol" href="func.child_watch_add_full.html">child_watch_add_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called when the child indicated by <code>pid</code>
exits, at the priority <code>priority</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="child_watch_source_new" class="symbol" href="func.child_watch_source_new.html">child_watch_source_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new child_watch&nbsp;source.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="chmod" class="symbol" href="func.chmod.html">chmod</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>chmod()</code> function. The <code>chmod()</code> function is
used to set the permissions of a file system&nbsp;object.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="clear_error" class="symbol" href="func.clear_error.html">clear_error</a></td>
            
            <td class="docblock-summary">
            <p>If <code>err</code> or <em><code>err</code> is <code>NULL</code>, does nothing. Otherwise,
calls <code>g_error_free()</code> on </em><code>err</code> and sets *<code>err</code> to <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="clear_handle_id" class="symbol" href="func.clear_handle_id.html">clear_handle_id</a></td>
            
            <td class="docblock-summary">
            <p>Clears a numeric handler, such as a <code>GSource</code> <span class="caps">ID</span>.</p>
            <p><span class="emblem available">since: 2.56</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="clear_list" class="symbol" href="func.clear_list.html">clear_list</a></td>
            
            <td class="docblock-summary">
            <p>Clears a pointer to a <code>GList</code>, freeing it and, optionally, freeing its elements using <code>destroy</code>.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="clear_pointer" class="symbol" href="func.clear_pointer.html">clear_pointer</a></td>
            
            <td class="docblock-summary">
            <p>Clears a reference to a&nbsp;variable.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="clear_slist" class="symbol" href="func.clear_slist.html">clear_slist</a></td>
            
            <td class="docblock-summary">
            <p>Clears a pointer to a <code>GSList</code>, freeing it and, optionally, freeing its elements using <code>destroy</code>.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="close" class="symbol" href="func.close.html">close</a></td>
            
            <td class="docblock-summary">
            <p>This wraps the <code>close()</code> call. In case of error, %errno will be
preserved, but the error will also be stored as a <code>GError</code> in <code>error</code>.
In case of success, %errno is&nbsp;undefined.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="closefrom" class="symbol" href="func.closefrom.html">closefrom</a></td>
            
            <td class="docblock-summary">
            <p>Close every file descriptor equal to or greater than <code>lowfd</code>.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_checksum_for_bytes" class="symbol" href="func.compute_checksum_for_bytes.html">compute_checksum_for_bytes</a></td>
            
            <td class="docblock-summary">
            <p>Computes the checksum for a binary <code>data</code>. This is a
convenience wrapper for g_checksum_new(), <code>g_checksum_get_string()</code>
and&nbsp;g_checksum_free().</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_checksum_for_data" class="symbol" href="func.compute_checksum_for_data.html">compute_checksum_for_data</a></td>
            
            <td class="docblock-summary">
            <p>Computes the checksum for a binary <code>data</code> of <code>length</code>. This is a
convenience wrapper for g_checksum_new(), <code>g_checksum_get_string()</code>
and&nbsp;g_checksum_free().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_checksum_for_string" class="symbol" href="func.compute_checksum_for_string.html">compute_checksum_for_string</a></td>
            
            <td class="docblock-summary">
            <p>Computes the checksum of a&nbsp;string.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_hmac_for_bytes" class="symbol" href="func.compute_hmac_for_bytes.html">compute_hmac_for_bytes</a></td>
            
            <td class="docblock-summary">
            <p>Computes the <span class="caps">HMAC</span> for a binary <code>data</code>. This is a
convenience wrapper for g_hmac_new(), <code>g_hmac_get_string()</code>
and&nbsp;g_hmac_unref().</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_hmac_for_data" class="symbol" href="func.compute_hmac_for_data.html">compute_hmac_for_data</a></td>
            
            <td class="docblock-summary">
            <p>Computes the <span class="caps">HMAC</span> for a binary <code>data</code> of <code>length</code>. This is a
convenience wrapper for g_hmac_new(), <code>g_hmac_get_string()</code>
and&nbsp;g_hmac_unref().</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="compute_hmac_for_string" class="symbol" href="func.compute_hmac_for_string.html">compute_hmac_for_string</a></td>
            
            <td class="docblock-summary">
            <p>Computes the <span class="caps">HMAC</span> for a&nbsp;string.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="convert" class="symbol" href="func.convert.html">convert</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string from one character set to&nbsp;another.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="convert_error_quark" class="symbol" href="func.convert_error_quark.html">convert_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="convert_with_fallback" class="symbol" href="func.convert_with_fallback.html">convert_with_fallback</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string from one character set to another, possibly
including fallback sequences for characters not representable
in the output. Note that it is not guaranteed that the specification
for the fallback sequences in <code>fallback</code> will be honored. Some
systems may do an approximate conversion from <code>from_codeset</code>
to <code>to_codeset</code> in their <code>iconv()</code> functions,
in which case GLib will simply return that approximate&nbsp;conversion.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="convert_with_iconv" class="symbol" href="func.convert_with_iconv.html">convert_with_iconv</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string from one character set to&nbsp;another.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="creat" class="symbol" href="func.creat.html">creat</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>creat()</code> function. The <code>creat()</code> function is
used to convert a pathname into a file descriptor, creating a file
if&nbsp;necessary.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_clear" class="symbol" href="func.datalist_clear.html">datalist_clear</a></td>
            
            <td class="docblock-summary">
            <p>Frees all the data elements of the datalist.
The data elements&#8217; destroy functions are called
if they have been&nbsp;set.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_foreach" class="symbol" href="func.datalist_foreach.html">datalist_foreach</a></td>
            
            <td class="docblock-summary">
            <p>Calls the given function for each data element of the datalist. The
function is called with each data element&#8217;s <code>GQuark</code> id and data,
together with the given <code>user_data</code> parameter. Note that this
function is <span class="caps">NOT</span> thread-safe. So unless <code>datalist</code> can be protected
from any modifications during invocation of this function, it should
not be&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_get_data" class="symbol" href="func.datalist_get_data.html">datalist_get_data</a></td>
            
            <td class="docblock-summary">
            <p>Gets a data element, using its string identifier. This is slower than
<code>g_datalist_id_get_data()</code> because it compares&nbsp;strings.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_get_flags" class="symbol" href="func.datalist_get_flags.html">datalist_get_flags</a></td>
            
            <td class="docblock-summary">
            <p>Gets flags values packed in together with the datalist.
See&nbsp;g_datalist_set_flags().</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_dup_data" class="symbol" href="func.datalist_id_dup_data.html">datalist_id_dup_data</a></td>
            
            <td class="docblock-summary">
            <p>This is a variant of <code>g_datalist_id_get_data()</code> which
returns a &#8216;duplicate&#8217; of the value. <code>dup_func</code> defines the
meaning of &#8216;duplicate&#8217; in this context, it could e.g.
take a reference on a ref-counted&nbsp;object.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_get_data" class="symbol" href="func.datalist_id_get_data.html">datalist_id_get_data</a></td>
            
            <td class="docblock-summary">
            <p>Retrieves the data element corresponding to <code>key_id</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_remove_multiple" class="symbol" href="func.datalist_id_remove_multiple.html">datalist_id_remove_multiple</a></td>
            
            <td class="docblock-summary">
            <p>Removes multiple keys from a&nbsp;datalist.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_remove_no_notify" class="symbol" href="func.datalist_id_remove_no_notify.html">datalist_id_remove_no_notify</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element, without calling its destroy notification&nbsp;function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_replace_data" class="symbol" href="func.datalist_id_replace_data.html">datalist_id_replace_data</a></td>
            
            <td class="docblock-summary">
            <p>Compares the member that is associated with <code>key_id</code> in
<code>datalist</code> to <code>oldval</code>, and if they are the same, replace
<code>oldval</code> with <code>newval</code>.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_set_data_full" class="symbol" href="func.datalist_id_set_data_full.html">datalist_id_set_data_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data corresponding to the given <code>GQuark</code> id, and the
function to be called when the element is removed from the datalist.
Any previous data with the same key is removed, and its destroy
function is&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_init" class="symbol" href="func.datalist_init.html">datalist_init</a></td>
            
            <td class="docblock-summary">
            <p>Resets the datalist to <code>NULL</code>. It does not free any memory or call
any destroy&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_set_flags" class="symbol" href="func.datalist_set_flags.html">datalist_set_flags</a></td>
            
            <td class="docblock-summary">
            <p>Turns on flag values for a data list. This function is used
to keep a small number of boolean flags in an object with
a data list without using any additional space. It is
not generally useful except in circumstances where space
is very tight. (It is used in the base <code>GObject</code> type, for&nbsp;example.)</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_unset_flags" class="symbol" href="func.datalist_unset_flags.html">datalist_unset_flags</a></td>
            
            <td class="docblock-summary">
            <p>Turns off flag values for a data list. See <code>g_datalist_unset_flags()</code></p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_destroy" class="symbol" href="func.dataset_destroy.html">dataset_destroy</a></td>
            
            <td class="docblock-summary">
            <p>Destroys the dataset, freeing all memory allocated, and calling any
destroy functions set for data&nbsp;elements.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_foreach" class="symbol" href="func.dataset_foreach.html">dataset_foreach</a></td>
            
            <td class="docblock-summary">
            <p>Calls the given function for each data element which is associated
with the given location. Note that this function is <span class="caps">NOT</span> thread-safe.
So unless <code>dataset_location</code> can be protected from any modifications
during invocation of this function, it should not be&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_id_get_data" class="symbol" href="func.dataset_id_get_data.html">dataset_id_get_data</a></td>
            
            <td class="docblock-summary">
            <p>Gets the data element corresponding to a <code>GQuark</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_id_remove_no_notify" class="symbol" href="func.dataset_id_remove_no_notify.html">dataset_id_remove_no_notify</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element, without calling its destroy notification&nbsp;function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_id_set_data_full" class="symbol" href="func.dataset_id_set_data_full.html">dataset_id_set_data_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data element associated with the given <code>GQuark</code> id, and also
the function to call when the data element is destroyed. Any
previous data with the same key is removed, and its destroy function
is&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dcgettext" class="symbol" href="func.dcgettext.html">dcgettext</a></td>
            
            <td class="docblock-summary">
            <p>This is a variant of <code>g_dgettext()</code> that allows specifying a locale
category instead of always using <code>LC_MESSAGES</code>. See <code>g_dgettext()</code> for
more information about how this functions differs from calling
<code>dcgettext()</code> directly.</p>
            <p><span class="emblem available">since: 2.26</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dgettext" class="symbol" href="func.dgettext.html">dgettext</a></td>
            
            <td class="docblock-summary">
            <p>This function is a wrapper of <code>dgettext()</code> which does not translate
the message if the default domain as set with <code>textdomain()</code> has no
translations for the current&nbsp;locale.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="direct_equal" class="symbol" href="func.direct_equal.html">direct_equal</a></td>
            
            <td class="docblock-summary">
            <p>Compares two #gpointer arguments and returns <code>TRUE</code> if they are equal.
It can be passed to <code>g_hash_table_new()</code> as the <code>key_equal_func</code>
parameter, when using opaque pointers compared by pointer value as
keys in a <code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="direct_hash" class="symbol" href="func.direct_hash.html">direct_hash</a></td>
            
            <td class="docblock-summary">
            <p>Converts a gpointer to a hash value.
It can be passed to <code>g_hash_table_new()</code> as the <code>hash_func</code> parameter,
when using opaque pointers compared by pointer value as keys in a
<code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dngettext" class="symbol" href="func.dngettext.html">dngettext</a></td>
            
            <td class="docblock-summary">
            <p>This function is a wrapper of <code>dngettext()</code> which does not translate
the message if the default domain as set with <code>textdomain()</code> has no
translations for the current&nbsp;locale.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="double_equal" class="symbol" href="func.double_equal.html">double_equal</a></td>
            
            <td class="docblock-summary">
            <p>Compares the two #gdouble values being pointed to and returns
<code>TRUE</code> if they are equal.
It can be passed to <code>g_hash_table_new()</code> as the <code>key_equal_func</code>
parameter, when using non-<code>NULL</code> pointers to doubles as keys in a
<code>GHashTable</code>.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="double_hash" class="symbol" href="func.double_hash.html">double_hash</a></td>
            
            <td class="docblock-summary">
            <p>Converts a pointer to a #gdouble to a hash value.
It can be passed to <code>g_hash_table_new()</code> as the <code>hash_func</code> parameter,
It can be passed to <code>g_hash_table_new()</code> as the <code>hash_func</code> parameter,
when using non-<code>NULL</code> pointers to doubles as keys in a <code>GHashTable</code>.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dpgettext" class="symbol" href="func.dpgettext.html">dpgettext</a></td>
            
            <td class="docblock-summary">
            <p>This function is a variant of <code>g_dgettext()</code> which supports
a disambiguating message context. <span class="caps">GNU</span> gettext uses the
&#8216;\004&#8217; character to separate the message context and
message id in <code>msgctxtid</code>.
If 0 is passed as <code>msgidoffset</code>, this function will fall back to
trying to use the deprecated convention of using &#8220;|&#8221; as a separation&nbsp;character.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dpgettext2" class="symbol" href="func.dpgettext2.html">dpgettext2</a></td>
            
            <td class="docblock-summary">
            <p>This function is a variant of <code>g_dgettext()</code> which supports
a disambiguating message context. <span class="caps">GNU</span> gettext uses the
&#8216;\004&#8217; character to separate the message context and
message id in <code>msgctxtid</code>.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="environ_getenv" class="symbol" href="func.environ_getenv.html">environ_getenv</a></td>
            
            <td class="docblock-summary">
            <p>Returns the value of the environment variable <code>variable</code> in the
provided list <code>envp</code>.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="environ_setenv" class="symbol" href="func.environ_setenv.html">environ_setenv</a></td>
            
            <td class="docblock-summary">
            <p>Sets the environment variable <code>variable</code> in the provided list
<code>envp</code> to <code>value</code>.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="environ_unsetenv" class="symbol" href="func.environ_unsetenv.html">environ_unsetenv</a></td>
            
            <td class="docblock-summary">
            <p>Removes the environment variable <code>variable</code> from the provided
environment <code>envp</code>.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="fdwalk_set_cloexec" class="symbol" href="func.fdwalk_set_cloexec.html">fdwalk_set_cloexec</a></td>
            
            <td class="docblock-summary">
            <p>Mark every file descriptor equal to or greater than <code>lowfd</code> to be closed
at the next <code>execve()</code> or similar, as if via the <code>FD_CLOEXEC</code> flag.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_error_from_errno" class="symbol" href="func.file_error_from_errno.html">file_error_from_errno</a></td>
            
            <td class="docblock-summary">
            <p>Gets a <code>GFileError</code> constant based on the passed-in <code>err_no</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_error_quark" class="symbol" href="func.file_error_quark.html">file_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_get_contents" class="symbol" href="func.file_get_contents.html">file_get_contents</a></td>
            
            <td class="docblock-summary">
            <p>Reads an entire file into allocated memory, with good error&nbsp;checking.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_open_tmp" class="symbol" href="func.file_open_tmp.html">file_open_tmp</a></td>
            
            <td class="docblock-summary">
            <p>Opens a file for writing in the preferred directory for temporary
files (as returned by&nbsp;g_get_tmp_dir()).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_read_link" class="symbol" href="func.file_read_link.html">file_read_link</a></td>
            
            <td class="docblock-summary">
            <p>Reads the contents of the symbolic link <code>filename</code> like the <span class="caps">POSIX</span>
<code>readlink()</code> function.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_set_contents" class="symbol" href="func.file_set_contents.html">file_set_contents</a></td>
            
            <td class="docblock-summary">
            <p>Writes all of <code>contents</code> to a file named <code>filename</code>. This is a convenience
wrapper around calling <code>g_file_set_contents_full()</code> with <code>flags</code> set to
<code>G_FILE_SET_CONTENTS_CONSISTENT | G_FILE_SET_CONTENTS_ONLY_EXISTING</code> and
<code>mode</code> set to <code>0666</code>.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_set_contents_full" class="symbol" href="func.file_set_contents_full.html">file_set_contents_full</a></td>
            
            <td class="docblock-summary">
            <p>Writes all of <code>contents</code> to a file named <code>filename</code>, with good error checking.
If a file called <code>filename</code> already exists it will be&nbsp;overwritten.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="file_test" class="symbol" href="func.file_test.html">file_test</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if any of the tests in the bitfield <code>test</code> are
<code>TRUE</code>. For example, <code>(G_FILE_TEST_EXISTS | G_FILE_TEST_IS_DIR)</code>
will return <code>TRUE</code> if the file exists; the check whether it&#8217;s a
directory doesn&#8217;t matter since the existence test is <code>TRUE</code>. With
the current set of available tests, there&#8217;s no point passing in
more than one test at a&nbsp;time.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_display_basename" class="symbol" href="func.filename_display_basename.html">filename_display_basename</a></td>
            
            <td class="docblock-summary">
            <p>Returns the display basename for the particular filename, guaranteed
to be valid <span class="caps">UTF</span>-8. The display name might not be identical to the filename,
for instance there might be problems converting it to <span class="caps">UTF</span>-8, and some files
can be translated in the&nbsp;display.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_display_name" class="symbol" href="func.filename_display_name.html">filename_display_name</a></td>
            
            <td class="docblock-summary">
            <p>Converts a filename into a valid <span class="caps">UTF</span>-8 string. The conversion is
not necessarily reversible, so you should keep the original around
and use the return value of this function only for display purposes.
Unlike g_filename_to_utf8(), the result is guaranteed to be non-<code>NULL</code>
even if the filename actually isn&#8217;t in the GLib file name&nbsp;encoding.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_from_uri" class="symbol" href="func.filename_from_uri.html">filename_from_uri</a></td>
            
            <td class="docblock-summary">
            <p>Converts an escaped <span class="caps">ASCII</span>-encoded <span class="caps">URI</span> to a local filename in the
encoding used for&nbsp;filenames.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_from_utf8" class="symbol" href="func.filename_from_utf8.html">filename_from_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string from <span class="caps">UTF</span>-8 to the encoding GLib uses for
filenames. Note that on Windows GLib uses <span class="caps">UTF</span>-8 for filenames;
on other platforms, this function indirectly depends on the
[current&nbsp;locale][setlocale].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_to_uri" class="symbol" href="func.filename_to_uri.html">filename_to_uri</a></td>
            
            <td class="docblock-summary">
            <p>Converts an absolute filename to an escaped <span class="caps">ASCII</span>-encoded <span class="caps">URI</span>, with the path
component following Section 3.3. of <span class="caps">RFC</span>&nbsp;2396.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="filename_to_utf8" class="symbol" href="func.filename_to_utf8.html">filename_to_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string which is in the encoding used by GLib for
filenames into a <span class="caps">UTF</span>-8 string. Note that on Windows GLib uses <span class="caps">UTF</span>-8
for filenames; on other platforms, this function indirectly depends on
the [current&nbsp;locale][setlocale].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="find_program_in_path" class="symbol" href="func.find_program_in_path.html">find_program_in_path</a></td>
            
            <td class="docblock-summary">
            <p>Locates the first executable named <code>program</code> in the user&#8217;s path, in the
same way that <code>execvp()</code> would locate it. Returns an allocated string
with the absolute path name, or <code>NULL</code> if the program is not found in
the path. If <code>program</code> is already an absolute path, returns a copy of
<code>program</code> if <code>program</code> exists and is executable, and <code>NULL</code> otherwise.</p>
<p>On Windows, if <code>program</code> does not have a file type suffix, tries
with the suffixes .exe, .cmd, .bat and .com, and the suffixes in
the <code>PATHEXT</code> environment&nbsp;variable.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="fopen" class="symbol" href="func.fopen.html">fopen</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the stdio <code>fopen()</code> function. The <code>fopen()</code> function
opens a file and associates a new stream with&nbsp;it.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="format_size" class="symbol" href="func.format_size.html">format_size</a></td>
            
            <td class="docblock-summary">
            <p>Formats a size (for example the size of a file) into a human readable
string.  Sizes are rounded to the nearest size prefix (kB, <span class="caps">MB</span>, <span class="caps">GB</span>)
and are displayed rounded to the nearest tenth. E.g. the file size
3292528 bytes will be converted into the string &#8220;3.2 <span class="caps">MB</span>&#8221;. The returned string
is <span class="caps">UTF</span>-8, and may use a non-breaking space to separate the number and units,
to ensure they aren’t separated when line&nbsp;wrapped.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="format_size_for_display" class="symbol" href="func.format_size_for_display.html">format_size_for_display</a></td>
            
            <td class="docblock-summary">
            <p>Formats a size (for example the size of a file) into a human
readable string. Sizes are rounded to the nearest size prefix
(<span class="caps">KB</span>, <span class="caps">MB</span>, <span class="caps">GB</span>) and are displayed rounded to the nearest tenth.
E.g. the file size 3292528 bytes will be converted into the
string &#8220;3.1 <span class="caps">MB</span>&#8221;.</p>
            <p><span class="emblem deprecated">deprecated: 2.30</span>&nbsp;<span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="format_size_full" class="symbol" href="func.format_size_full.html">format_size_full</a></td>
            
            <td class="docblock-summary">
            <p>Formats a&nbsp;size.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="fprintf" class="symbol" href="func.fprintf.html">fprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>fprintf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="free" class="symbol" href="func.free.html">free</a></td>
            
            <td class="docblock-summary">
            <p>Frees the memory pointed to by <code>mem</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="free_sized" class="symbol" href="func.free_sized.html">free_sized</a></td>
            
            <td class="docblock-summary">
            <p>Frees the memory pointed to by <code>mem</code>, assuming it is has the given <code>size</code>.</p>
            <p><span class="emblem available">since: 2.76</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="freopen" class="symbol" href="func.freopen.html">freopen</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>freopen()</code> function. The <code>freopen()</code> function
opens a file and associates it with an existing&nbsp;stream.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="fsync" class="symbol" href="func.fsync.html">fsync</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>fsync()</code> function. On Windows, <code>_commit()</code> will be
used. On macOS, <code>fcntl(F_FULLFSYNC)</code> will be used.
The <code>fsync()</code> function is used to synchronize a file&#8217;s in-core
state with that of the&nbsp;disk.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_application_name" class="symbol" href="func.get_application_name.html">get_application_name</a></td>
            
            <td class="docblock-summary">
            <p>Gets a human-readable name for the application, as set by
g_set_application_name(). This name should be localized if
possible, and is intended for display to the user.  Contrast with
g_get_prgname(), which gets a non-localized name. If
<code>g_set_application_name()</code> has not been called, returns the result of
<code>g_get_prgname()</code> (which may be <code>NULL</code> if <code>g_set_prgname()</code> has also not
been&nbsp;called).</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_charset" class="symbol" href="func.get_charset.html">get_charset</a></td>
            
            <td class="docblock-summary">
            <p>Obtains the character set for the [current locale][setlocale]; you
might use this character set as an argument to g_convert(), to convert
from the current locale&#8217;s encoding to some other encoding. (Frequently
<code>g_locale_to_utf8()</code> and <code>g_locale_from_utf8()</code> are nice shortcuts,&nbsp;though.)</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_codeset" class="symbol" href="func.get_codeset.html">get_codeset</a></td>
            
            <td class="docblock-summary">
            <p>Gets the character set for the current&nbsp;locale.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_console_charset" class="symbol" href="func.get_console_charset.html">get_console_charset</a></td>
            
            <td class="docblock-summary">
            <p>Obtains the character set used by the console attached to the process,
which is suitable for printing output to the&nbsp;terminal.</p>
            <p><span class="emblem available">since: 2.62</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_current_dir" class="symbol" href="func.get_current_dir.html">get_current_dir</a></td>
            
            <td class="docblock-summary">
            <p>Gets the current&nbsp;directory.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_current_time" class="symbol" href="func.get_current_time.html">get_current_time</a></td>
            
            <td class="docblock-summary">
            <p>Equivalent to the <span class="caps">UNIX</span> <code>gettimeofday()</code> function, but&nbsp;portable.</p>
            <p><span class="emblem deprecated">deprecated: 2.62</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_environ" class="symbol" href="func.get_environ.html">get_environ</a></td>
            
            <td class="docblock-summary">
            <p>Gets the list of environment variables for the current&nbsp;process.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_filename_charsets" class="symbol" href="func.get_filename_charsets.html">get_filename_charsets</a></td>
            
            <td class="docblock-summary">
            <p>Determines the preferred character sets used for filenames.
The first character set from the <code>charsets</code> is the filename encoding, the
subsequent character sets are used when trying to generate a displayable
representation of a filename, see&nbsp;g_filename_display_name().</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_home_dir" class="symbol" href="func.get_home_dir.html">get_home_dir</a></td>
            
            <td class="docblock-summary">
            <p>Gets the current user&#8217;s home&nbsp;directory.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_host_name" class="symbol" href="func.get_host_name.html">get_host_name</a></td>
            
            <td class="docblock-summary">
            <p>Return a name for the&nbsp;machine.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_language_names" class="symbol" href="func.get_language_names.html">get_language_names</a></td>
            
            <td class="docblock-summary">
            <p>Computes a list of applicable locale names, which can be used to
e.g. construct locale-dependent filenames or search paths. The returned
list is sorted from most desirable to least desirable and always contains
the default locale&nbsp;&#8220;C&#8221;.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_language_names_with_category" class="symbol" href="func.get_language_names_with_category.html">get_language_names_with_category</a></td>
            
            <td class="docblock-summary">
            <p>Computes a list of applicable locale names with a locale category name,
which can be used to construct the fallback locale-dependent filenames
or search paths. The returned list is sorted from most desirable to
least desirable and always contains the default locale&nbsp;&#8220;C&#8221;.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_locale_variants" class="symbol" href="func.get_locale_variants.html">get_locale_variants</a></td>
            
            <td class="docblock-summary">
            <p>Returns a list of derived variants of <code>locale</code>, which can be used to
e.g. construct locale-dependent filenames or search paths. The returned
list is sorted from most desirable to least desirable.
This function handles territory, charset and extra locale modifiers. See
<a href="man:setlocale"><code>setlocale(3)</code></a> for information about locales and their&nbsp;format.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_monotonic_time" class="symbol" href="func.get_monotonic_time.html">get_monotonic_time</a></td>
            
            <td class="docblock-summary">
            <p>Queries the system monotonic&nbsp;time.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_num_processors" class="symbol" href="func.get_num_processors.html">get_num_processors</a></td>
            
            <td class="docblock-summary">
            <p>Determine the approximate number of threads that the system will
schedule simultaneously for this process.  This is intended to be
used as a parameter to <code>g_thread_pool_new()</code> for <span class="caps">CPU</span> bound tasks and
similar&nbsp;cases.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_os_info" class="symbol" href="func.get_os_info.html">get_os_info</a></td>
            
            <td class="docblock-summary">
            <p>Get information about the operating&nbsp;system.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_prgname" class="symbol" href="func.get_prgname.html">get_prgname</a></td>
            
            <td class="docblock-summary">
            <p>Gets the name of the program. This name should not be localized,
in contrast to&nbsp;g_get_application_name().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_real_name" class="symbol" href="func.get_real_name.html">get_real_name</a></td>
            
            <td class="docblock-summary">
            <p>Gets the real name of the user. This usually comes from the user&#8217;s
entry in the <code>passwd</code> file. The encoding of the returned string is
system-defined. (On Windows, it is, however, always <span class="caps">UTF</span>-8.) If the
real user name cannot be determined, the string &#8220;Unknown&#8221; is&nbsp;returned.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_real_time" class="symbol" href="func.get_real_time.html">get_real_time</a></td>
            
            <td class="docblock-summary">
            <p>Queries the system wall-clock&nbsp;time.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_system_config_dirs" class="symbol" href="func.get_system_config_dirs.html">get_system_config_dirs</a></td>
            
            <td class="docblock-summary">
            <p>Returns an ordered list of base directories in which to access
system-wide configuration&nbsp;information.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_system_data_dirs" class="symbol" href="func.get_system_data_dirs.html">get_system_data_dirs</a></td>
            
            <td class="docblock-summary">
            <p>Returns an ordered list of base directories in which to access
system-wide application&nbsp;data.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_tmp_dir" class="symbol" href="func.get_tmp_dir.html">get_tmp_dir</a></td>
            
            <td class="docblock-summary">
            <p>Gets the directory to use for temporary&nbsp;files.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_cache_dir" class="symbol" href="func.get_user_cache_dir.html">get_user_cache_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns a base directory in which to store non-essential, cached
data specific to particular&nbsp;user.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_config_dir" class="symbol" href="func.get_user_config_dir.html">get_user_config_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns a base directory in which to store user-specific application
configuration information such as user preferences and&nbsp;settings.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_data_dir" class="symbol" href="func.get_user_data_dir.html">get_user_data_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns a base directory in which to access application data such
as icons that is customized for a particular&nbsp;user.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_name" class="symbol" href="func.get_user_name.html">get_user_name</a></td>
            
            <td class="docblock-summary">
            <p>Gets the user name of the current user. The encoding of the returned
string is system-defined. On <span class="caps">UNIX</span>, it might be the preferred file name
encoding, or something else, and there is no guarantee that it is even
consistent on a machine. On Windows, it is always <span class="caps">UTF</span>-8.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_runtime_dir" class="symbol" href="func.get_user_runtime_dir.html">get_user_runtime_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns a directory that is unique to the current user on the local&nbsp;system.</p>
            <p><span class="emblem available">since: 2.28</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_special_dir" class="symbol" href="func.get_user_special_dir.html">get_user_special_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns the full path of a special directory using its logical&nbsp;id.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="get_user_state_dir" class="symbol" href="func.get_user_state_dir.html">get_user_state_dir</a></td>
            
            <td class="docblock-summary">
            <p>Returns a base directory in which to store state files specific to
particular&nbsp;user.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="getenv" class="symbol" href="func.getenv.html">getenv</a></td>
            
            <td class="docblock-summary">
            <p>Returns the value of an environment&nbsp;variable.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hostname_is_ascii_encoded" class="symbol" href="func.hostname_is_ascii_encoded.html">hostname_is_ascii_encoded</a></td>
            
            <td class="docblock-summary">
            <p>Tests if <code>hostname</code> contains segments with an <span class="caps">ASCII</span>-compatible
encoding of an Internationalized Domain Name. If this returns
<code>TRUE</code>, you should decode the hostname with <code>g_hostname_to_unicode()</code>
before displaying it to the&nbsp;user.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hostname_is_ip_address" class="symbol" href="func.hostname_is_ip_address.html">hostname_is_ip_address</a></td>
            
            <td class="docblock-summary">
            <p>Tests if <code>hostname</code> is the string form of an IPv4 or IPv6 address.
(Eg,&nbsp;&#8220;192.168.0.1&#8221;.)</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hostname_is_non_ascii" class="symbol" href="func.hostname_is_non_ascii.html">hostname_is_non_ascii</a></td>
            
            <td class="docblock-summary">
            <p>Tests if <code>hostname</code> contains Unicode characters. If this returns
<code>TRUE</code>, you need to encode the hostname with <code>g_hostname_to_ascii()</code>
before using it in non-<span class="caps">IDN</span>-aware&nbsp;contexts.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hostname_to_ascii" class="symbol" href="func.hostname_to_ascii.html">hostname_to_ascii</a></td>
            
            <td class="docblock-summary">
            <p>Converts <code>hostname</code> to its canonical <span class="caps">ASCII</span> form; an <span class="caps">ASCII</span>-only
string containing no uppercase letters and not ending with a
trailing&nbsp;dot.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hostname_to_unicode" class="symbol" href="func.hostname_to_unicode.html">hostname_to_unicode</a></td>
            
            <td class="docblock-summary">
            <p>Converts <code>hostname</code> to its canonical presentation form; a <span class="caps">UTF</span>-8
string in Unicode normalization form C, containing no uppercase
letters, no forbidden characters, and no <span class="caps">ASCII</span>-encoded segments,
and not ending with a trailing&nbsp;dot.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="iconv" class="symbol" href="func.iconv.html">iconv</a></td>
            
            <td class="docblock-summary">
            <p>Same as the standard <span class="caps">UNIX</span> routine iconv(), but
may be implemented via libiconv on <span class="caps">UNIX</span> flavors that lack
a native&nbsp;implementation.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="idle_add" class="symbol" href="func.idle_add.html">idle_add</a></td>
            
            <td class="docblock-summary">
            <p>Adds a function to be called whenever there are no higher priority
events pending to the default main loop. The function is given the
default idle priority, <code>G_PRIORITY_DEFAULT_IDLE</code>.  If the function
returns <code>FALSE</code> it is automatically removed from the list of event
sources and will not be called&nbsp;again.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="idle_add_full" class="symbol" href="func.idle_add_full.html">idle_add_full</a></td>
            
            <td class="docblock-summary">
            <p>Adds a function to be called whenever there are no higher priority
events&nbsp;pending.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="idle_add_once" class="symbol" href="func.idle_add_once.html">idle_add_once</a></td>
            
            <td class="docblock-summary">
            <p>Adds a function to be called whenever there are no higher priority
events pending to the default main loop. The function is given the
default idle priority, <code>G_PRIORITY_DEFAULT_IDLE</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="idle_remove_by_data" class="symbol" href="func.idle_remove_by_data.html">idle_remove_by_data</a></td>
            
            <td class="docblock-summary">
            <p>Removes the idle function with the given&nbsp;data.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="idle_source_new" class="symbol" href="func.idle_source_new.html">idle_source_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new idle&nbsp;source.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="int64_equal" class="symbol" href="func.int64_equal.html">int64_equal</a></td>
            
            <td class="docblock-summary">
            <p>Compares the two #gint64 values being pointed to and returns
<code>TRUE</code> if they are equal.
It can be passed to <code>g_hash_table_new()</code> as the <code>key_equal_func</code>
parameter, when using non-<code>NULL</code> pointers to 64-bit integers as keys in a
<code>GHashTable</code>.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="int64_hash" class="symbol" href="func.int64_hash.html">int64_hash</a></td>
            
            <td class="docblock-summary">
            <p>Converts a pointer to a #gint64 to a hash&nbsp;value.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="int_equal" class="symbol" href="func.int_equal.html">int_equal</a></td>
            
            <td class="docblock-summary">
            <p>Compares the two #gint values being pointed to and returns
<code>TRUE</code> if they are equal.
It can be passed to <code>g_hash_table_new()</code> as the <code>key_equal_func</code>
parameter, when using non-<code>NULL</code> pointers to integers as keys in a
<code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="int_hash" class="symbol" href="func.int_hash.html">int_hash</a></td>
            
            <td class="docblock-summary">
            <p>Converts a pointer to a #gint to a hash value.
It can be passed to <code>g_hash_table_new()</code> as the <code>hash_func</code> parameter,
when using non-<code>NULL</code> pointers to integer values as keys in a <code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="intern_static_string" class="symbol" href="func.intern_static_string.html">intern_static_string</a></td>
            
            <td class="docblock-summary">
            <p>Returns a canonical representation for <code>string</code>. Interned strings
can be compared for equality by comparing the pointers, instead of
using strcmp(). <code>g_intern_static_string()</code> does not copy the string,
therefore <code>string</code> must not be freed or&nbsp;modified.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="intern_string" class="symbol" href="func.intern_string.html">intern_string</a></td>
            
            <td class="docblock-summary">
            <p>Returns a canonical representation for <code>string</code>. Interned strings
can be compared for equality by comparing the pointers, instead of
using&nbsp;strcmp().</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="io_add_watch" class="symbol" href="func.io_add_watch.html">io_add_watch</a></td>
            
            <td class="docblock-summary">
            <p>Adds the <code>GIOChannel</code> into the default main loop context
with the default&nbsp;priority.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="io_add_watch_full" class="symbol" href="func.io_add_watch_full.html">io_add_watch_full</a></td>
            
            <td class="docblock-summary">
            <p>Adds the <code>GIOChannel</code> into the default main loop context
with the given&nbsp;priority.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="io_create_watch" class="symbol" href="func.io_create_watch.html">io_create_watch</a></td>
            
            <td class="docblock-summary">
            <p>Creates a <code>GSource</code> that&#8217;s dispatched when <code>condition</code> is met for the
given <code>channel</code>. For example, if condition is <code>G_IO_IN</code>, the source will
be dispatched when there&#8217;s data available for&nbsp;reading.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="listenv" class="symbol" href="func.listenv.html">listenv</a></td>
            
            <td class="docblock-summary">
            <p>Gets the names of all variables set in the&nbsp;environment.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="locale_from_utf8" class="symbol" href="func.locale_from_utf8.html">locale_from_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string from <span class="caps">UTF</span>-8 to the encoding used for strings by
the C runtime (usually the same as that used by the operating
system) in the [current locale][setlocale]. On Windows this means
the system&nbsp;codepage.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="locale_to_utf8" class="symbol" href="func.locale_to_utf8.html">locale_to_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string which is in the encoding used for strings by
the C runtime (usually the same as that used by the operating
system) in the [current locale][setlocale] into a <span class="caps">UTF</span>-8&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log" class="symbol" href="func.log.html">log</a></td>
            
            <td class="docblock-summary">
            <p>Logs an error or debugging&nbsp;message.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_default_handler" class="symbol" href="func.log_default_handler.html">log_default_handler</a></td>
            
            <td class="docblock-summary">
            <p>The default log handler set up by GLib; <code>g_log_set_default_handler()</code>
allows to install an alternate default log&nbsp;handler.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_get_debug_enabled" class="symbol" href="func.log_get_debug_enabled.html">log_get_debug_enabled</a></td>
            
            <td class="docblock-summary">
            <p>Return whether debug output from the GLib logging system is&nbsp;enabled.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_remove_handler" class="symbol" href="func.log_remove_handler.html">log_remove_handler</a></td>
            
            <td class="docblock-summary">
            <p>Removes the log&nbsp;handler.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_always_fatal" class="symbol" href="func.log_set_always_fatal.html">log_set_always_fatal</a></td>
            
            <td class="docblock-summary">
            <p>Sets the message levels which are always fatal, in any log&nbsp;domain.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_debug_enabled" class="symbol" href="func.log_set_debug_enabled.html">log_set_debug_enabled</a></td>
            
            <td class="docblock-summary">
            <p>Enable or disable debug output from the GLib logging system for all&nbsp;domains.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_default_handler" class="symbol" href="func.log_set_default_handler.html">log_set_default_handler</a></td>
            
            <td class="docblock-summary">
            <p>Installs a default log handler which is used if no
log handler has been set for the particular log domain
and log level&nbsp;combination.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_fatal_mask" class="symbol" href="func.log_set_fatal_mask.html">log_set_fatal_mask</a></td>
            
            <td class="docblock-summary">
            <p>Sets the log levels which are fatal in the given&nbsp;domain.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_handler" class="symbol" href="func.log_set_handler.html">log_set_handler</a></td>
            
            <td class="docblock-summary">
            <p>Sets the log handler for a domain and a set of log&nbsp;levels.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_handler_full" class="symbol" href="func.log_set_handler_full.html">log_set_handler_full</a></td>
            
            <td class="docblock-summary">
            <p>Like <code>g_log_set_handler()</code>, but takes a destroy notify for the <code>user_data</code>.</p>
            <p><span class="emblem available">since: 2.46</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_set_writer_func" class="symbol" href="func.log_set_writer_func.html">log_set_writer_func</a></td>
            
            <td class="docblock-summary">
            <p>Set a writer function which will be called to format and write out each log&nbsp;message.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_structured" class="symbol" href="func.log_structured.html">log_structured</a></td>
            
            <td class="docblock-summary">
            <p>Log a message with structured&nbsp;data.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_structured_array" class="symbol" href="func.log_structured_array.html">log_structured_array</a></td>
            
            <td class="docblock-summary">
            <p>Log a message with structured&nbsp;data.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_structured_standard" class="symbol" href="func.log_structured_standard.html">log_structured_standard</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_variant" class="symbol" href="func.log_variant.html">log_variant</a></td>
            
            <td class="docblock-summary">
            <p>Log a message with structured data, accepting the data within a <code>GVariant</code>.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_default" class="symbol" href="func.log_writer_default.html">log_writer_default</a></td>
            
            <td class="docblock-summary">
            <p>Format a structured log message and output it to the default log destination
for the&nbsp;platform.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_default_set_debug_domains" class="symbol" href="func.log_writer_default_set_debug_domains.html">log_writer_default_set_debug_domains</a></td>
            
            <td class="docblock-summary">
            <p>Reset the list of domains to be logged, that might be initially set by the
<code>G_MESSAGES_DEBUG</code> environment&nbsp;variable.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_default_set_use_stderr" class="symbol" href="func.log_writer_default_set_use_stderr.html">log_writer_default_set_use_stderr</a></td>
            
            <td class="docblock-summary">
            <p>Configure whether the built-in log functions will output all log messages to
<code>stderr</code>.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_default_would_drop" class="symbol" href="func.log_writer_default_would_drop.html">log_writer_default_would_drop</a></td>
            
            <td class="docblock-summary">
            <p>Check whether <code>g_log_writer_default()</code> and <code>g_log_default_handler()</code> would
ignore a message with the given domain and&nbsp;level.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_format_fields" class="symbol" href="func.log_writer_format_fields.html">log_writer_format_fields</a></td>
            
            <td class="docblock-summary">
            <p>Format a structured log message as a string suitable for outputting to the
terminal (or&nbsp;elsewhere).</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_is_journald" class="symbol" href="func.log_writer_is_journald.html">log_writer_is_journald</a></td>
            
            <td class="docblock-summary">
            <p>Check whether the given <code>output_fd</code> file descriptor is a connection to the
systemd journal, or something else (like a log file or <code>stdout</code> or
<code>stderr</code>).</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_journald" class="symbol" href="func.log_writer_journald.html">log_writer_journald</a></td>
            
            <td class="docblock-summary">
            <p>Format a structured log message and send it to the systemd journal as a set
of key–value&nbsp;pairs.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_standard_streams" class="symbol" href="func.log_writer_standard_streams.html">log_writer_standard_streams</a></td>
            
            <td class="docblock-summary">
            <p>Format a structured log message and print it to either <code>stdout</code> or <code>stderr</code>,
depending on its log&nbsp;level.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_supports_color" class="symbol" href="func.log_writer_supports_color.html">log_writer_supports_color</a></td>
            
            <td class="docblock-summary">
            <p>Check whether the given <code>output_fd</code> file descriptor supports
<a href="https://en.wikipedia.org/wiki/ANSI_escape_code"><span class="caps">ANSI</span> color escape sequences</a>.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="log_writer_syslog" class="symbol" href="func.log_writer_syslog.html">log_writer_syslog</a></td>
            
            <td class="docblock-summary">
            <p>Format a structured log message and send it to the syslog daemon. Only fields
which are understood by this function are included in the formatted string
which is&nbsp;printed.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="logv" class="symbol" href="func.logv.html">logv</a></td>
            
            <td class="docblock-summary">
            <p>Logs an error or debugging&nbsp;message.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="lstat" class="symbol" href="func.lstat.html">lstat</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>lstat()</code> function. The <code>lstat()</code> function is
like <code>stat()</code> except that in the case of symbolic links, it returns
information about the symbolic link itself and not the file that it
refers to. If the system does not support symbolic links <code>g_lstat()</code>
is identical to&nbsp;g_stat().</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_current_source" class="symbol" href="func.main_current_source.html">main_current_source</a></td>
            
            <td class="docblock-summary">
            <p>Returns the currently firing source for this&nbsp;thread.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_depth" class="symbol" href="func.main_depth.html">main_depth</a></td>
            
            <td class="docblock-summary">
            <p>Returns the depth of the stack of calls to
<code>g_main_context_dispatch()</code> on any <code>GMainContext</code> in the current thread.
That is, when called from the toplevel, it gives 0. When
called from within a callback from <code>g_main_context_iteration()</code>
(or g_main_loop_run(), etc.) it returns 1. When called from within
a callback to a recursive call to g_main_context_iteration(),
it returns 2. And so&nbsp;forth.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="malloc" class="symbol" href="func.malloc.html">malloc</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>n_bytes</code> bytes of memory.
If <code>n_bytes</code> is 0 it returns <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="malloc0" class="symbol" href="func.malloc0.html">malloc0</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>n_bytes</code> bytes of memory, initialized to 0&#8217;s.
If <code>n_bytes</code> is 0 it returns <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="malloc0_n" class="symbol" href="func.malloc0_n.html">malloc0_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_malloc0(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="malloc_n" class="symbol" href="func.malloc_n.html">malloc_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_malloc(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="markup_collect_attributes" class="symbol" href="func.markup_collect_attributes.html">markup_collect_attributes</a></td>
            
            <td class="docblock-summary">
            <p>Collects the attributes of the element from the data passed to the
<code>GMarkupParser</code> start_element function, dealing with common error
conditions and supporting boolean&nbsp;values.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="markup_error_quark" class="symbol" href="func.markup_error_quark.html">markup_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="markup_escape_text" class="symbol" href="func.markup_escape_text.html">markup_escape_text</a></td>
            
            <td class="docblock-summary">
            <p>Escapes text so that the markup parser will parse it verbatim.
Less than, greater than, ampersand, etc. are replaced with the
corresponding entities. This function would typically be used
when writing out a file to be parsed with the markup&nbsp;parser.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="markup_printf_escaped" class="symbol" href="func.markup_printf_escaped.html">markup_printf_escaped</a></td>
            
            <td class="docblock-summary">
            <p>Formats arguments according to <code>format</code>, escaping
all string and character arguments in the fashion
of g_markup_escape_text(). This is useful when you
want to insert literal strings into <span class="caps">XML</span>-style markup
output, without having to worry that the strings
might themselves contain&nbsp;markup.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="markup_vprintf_escaped" class="symbol" href="func.markup_vprintf_escaped.html">markup_vprintf_escaped</a></td>
            
            <td class="docblock-summary">
            <p>Formats the data in <code>args</code> according to <code>format</code>, escaping
all string and character arguments in the fashion
of g_markup_escape_text(). See&nbsp;g_markup_printf_escaped().</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mem_is_system_malloc" class="symbol" href="func.mem_is_system_malloc.html">mem_is_system_malloc</a></td>
            
            <td class="docblock-summary">
            <p>Checks whether the allocator used by <code>g_malloc()</code> is the system&#8217;s
malloc implementation. If it returns <code>TRUE</code> memory allocated with
<code>malloc()</code> can be used interchangeably with memory allocated using g_malloc().
This function is useful for avoiding an extra copy of allocated memory returned
by a non-GLib-based <span class="caps">API</span>.</p>
            <p><span class="emblem deprecated">deprecated: 2.46</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mem_profile" class="symbol" href="func.mem_profile.html">mem_profile</a></td>
            
            <td class="docblock-summary">
            <p>GLib used to support some tools for memory profiling, but this
no longer works. There are many other useful tools for memory
profiling these days which can be used&nbsp;instead.</p>
            <p><span class="emblem deprecated">deprecated: 2.46</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mem_set_vtable" class="symbol" href="func.mem_set_vtable.html">mem_set_vtable</a></td>
            
            <td class="docblock-summary">
            <p>This function used to let you override the memory allocation function.
However, its use was incompatible with the use of global constructors
in GLib and <span class="caps">GIO</span>, because those use the GLib allocators before main is
reached. Therefore this function is now deprecated and is just a&nbsp;stub.</p>
            <p><span class="emblem deprecated">deprecated: 2.46</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="memdup" class="symbol" href="func.memdup.html">memdup</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>byte_size</code> bytes of memory, and copies <code>byte_size</code> bytes into it
from <code>mem</code>. If <code>mem</code> is <code>NULL</code> it returns <code>NULL</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.68</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="memdup2" class="symbol" href="func.memdup2.html">memdup2</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>byte_size</code> bytes of memory, and copies <code>byte_size</code> bytes into it
from <code>mem</code>. If <code>mem</code> is <code>NULL</code> it returns <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkdir" class="symbol" href="func.mkdir.html">mkdir</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>mkdir()</code> function. The <code>mkdir()</code> function
attempts to create a directory with the given name and permissions.
The mode argument is ignored on&nbsp;Windows.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkdir_with_parents" class="symbol" href="func.mkdir_with_parents.html">mkdir_with_parents</a></td>
            
            <td class="docblock-summary">
            <p>Create a directory if it doesn&#8217;t already exist. Create intermediate
parent directories as needed,&nbsp;too.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkdtemp" class="symbol" href="func.mkdtemp.html">mkdtemp</a></td>
            
            <td class="docblock-summary">
            <p>Creates a temporary directory. See the <code>mkdtemp()</code> documentation
on most <span class="caps">UNIX</span>-like&nbsp;systems.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkdtemp_full" class="symbol" href="func.mkdtemp_full.html">mkdtemp_full</a></td>
            
            <td class="docblock-summary">
            <p>Creates a temporary directory. See the <code>mkdtemp()</code> documentation
on most <span class="caps">UNIX</span>-like&nbsp;systems.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkstemp" class="symbol" href="func.mkstemp.html">mkstemp</a></td>
            
            <td class="docblock-summary">
            <p>Opens a temporary file. See the <code>mkstemp()</code> documentation
on most <span class="caps">UNIX</span>-like&nbsp;systems.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mkstemp_full" class="symbol" href="func.mkstemp_full.html">mkstemp_full</a></td>
            
            <td class="docblock-summary">
            <p>Opens a temporary file. See the <code>mkstemp()</code> documentation
on most <span class="caps">UNIX</span>-like&nbsp;systems.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="nullify_pointer" class="symbol" href="func.nullify_pointer.html">nullify_pointer</a></td>
            
            <td class="docblock-summary">
            <p>Set the pointer at the specified location to <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="number_parser_error_quark" class="symbol" href="func.number_parser_error_quark.html">number_parser_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="on_error_query" class="symbol" href="func.on_error_query.html">on_error_query</a></td>
            
            <td class="docblock-summary">
            <p>Prompts the user with
<code>[E]xit, [H]alt, show [S]tack trace or [P]roceed</code>.
This function is intended to be used for debugging use only.
The following example shows how it can be used together with
the <code>g_log()</code> functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="on_error_stack_trace" class="symbol" href="func.on_error_stack_trace.html">on_error_stack_trace</a></td>
            
            <td class="docblock-summary">
            <p>Invokes gdb, which attaches to the current process and shows a
stack trace. Called by <code>g_on_error_query()</code> when the &#8220;[S]tack trace&#8221;
option is selected. You can get the current process&#8217;s program name
with g_get_prgname(), assuming that you have called <code>gtk_init()</code> or&nbsp;gdk_init().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="open" class="symbol" href="func.open.html">open</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>open()</code> function. The <code>open()</code> function is
used to convert a pathname into a file&nbsp;descriptor.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="option_error_quark" class="symbol" href="func.option_error_quark.html">option_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="parse_debug_string" class="symbol" href="func.parse_debug_string.html">parse_debug_string</a></td>
            
            <td class="docblock-summary">
            <p>Parses a string containing debugging options
into a %guint containing bit flags. This is used
within <span class="caps">GDK</span> and <span class="caps">GTK</span> to parse the debug options passed on the
command line or through environment&nbsp;variables.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="path_get_basename" class="symbol" href="func.path_get_basename.html">path_get_basename</a></td>
            
            <td class="docblock-summary">
            <p>Gets the last component of the&nbsp;filename.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="path_get_dirname" class="symbol" href="func.path_get_dirname.html">path_get_dirname</a></td>
            
            <td class="docblock-summary">
            <p>Gets the directory components of a file name. For example, the directory
component of <code>/usr/bin/test</code> is <code>/usr/bin</code>. The directory component of <code>/</code>
is <code>/</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="path_is_absolute" class="symbol" href="func.path_is_absolute.html">path_is_absolute</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if the given <code>file_name</code> is an absolute file name.
Note that this is a somewhat vague concept on&nbsp;Windows.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="path_skip_root" class="symbol" href="func.path_skip_root.html">path_skip_root</a></td>
            
            <td class="docblock-summary">
            <p>Returns a pointer into <code>file_name</code> after the root component,
i.e. after the &#8220;/&#8221; in <span class="caps">UNIX</span> or &#8220;C:&#34; under Windows. If <code>file_name</code>
is not an absolute path it returns <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pattern_match" class="symbol" href="func.pattern_match.html">pattern_match</a></td>
            
            <td class="docblock-summary">
            <p>Matches a string against a compiled pattern. Passing the correct
length of the string given is mandatory. The reversed string can be
omitted by passing <code>NULL</code>, this is more efficient if the reversed
version of the string to be matched is not at hand, as
<code>g_pattern_match()</code> will only construct it if the compiled pattern
requires reverse&nbsp;matches.</p>
            <p><span class="emblem deprecated">deprecated: 2.70</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pattern_match_simple" class="symbol" href="func.pattern_match_simple.html">pattern_match_simple</a></td>
            
            <td class="docblock-summary">
            <p>Matches a string against a pattern given as a string. If this
function is to be called in a loop, it&#8217;s more efficient to compile
the pattern once with <code>g_pattern_spec_new()</code> and call
<code>g_pattern_match_string()</code> repeatedly.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pattern_match_string" class="symbol" href="func.pattern_match_string.html">pattern_match_string</a></td>
            
            <td class="docblock-summary">
            <p>Matches a string against a compiled pattern. If the string is to be
matched against more than one pattern, consider using
<code>g_pattern_match()</code> instead while supplying the reversed&nbsp;string.</p>
            <p><span class="emblem deprecated">deprecated: 2.70</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_lock" class="symbol" href="func.pointer_bit_lock.html">pointer_bit_lock</a></td>
            
            <td class="docblock-summary">
            <p>This is equivalent to g_bit_lock, but working on pointers (or other
pointer-sized&nbsp;values).</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_lock_and_get" class="symbol" href="func.pointer_bit_lock_and_get.html">pointer_bit_lock_and_get</a></td>
            
            <td class="docblock-summary">
            <p>This is equivalent to g_bit_lock, but working on pointers (or other
pointer-sized&nbsp;values).</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_lock_mask_ptr" class="symbol" href="func.pointer_bit_lock_mask_ptr.html">pointer_bit_lock_mask_ptr</a></td>
            
            <td class="docblock-summary">
            <p>This mangles <code>ptr</code> as <code>g_pointer_bit_lock()</code> and <code>g_pointer_bit_unlock()</code>
do.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_trylock" class="symbol" href="func.pointer_bit_trylock.html">pointer_bit_trylock</a></td>
            
            <td class="docblock-summary">
            <p>This is equivalent to g_bit_trylock(), but working on pointers (or
other pointer-sized&nbsp;values).</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_unlock" class="symbol" href="func.pointer_bit_unlock.html">pointer_bit_unlock</a></td>
            
            <td class="docblock-summary">
            <p>This is equivalent to g_bit_unlock, but working on pointers (or other
pointer-sized&nbsp;values).</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="pointer_bit_unlock_and_set" class="symbol" href="func.pointer_bit_unlock_and_set.html">pointer_bit_unlock_and_set</a></td>
            
            <td class="docblock-summary">
            <p>This is equivalent to <code>g_pointer_bit_unlock()</code> and atomically setting
the pointer&nbsp;value.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="poll" class="symbol" href="func.poll.html">poll</a></td>
            
            <td class="docblock-summary">
            <p>Polls <code>fds</code>, as with the <code>poll()</code> system call, but portably. (On
systems that don&#8217;t have poll(), it is emulated using select().)
This is used internally by <code>GMainContext</code>, but it can be called
directly if you need to block until a file descriptor is ready, but
don&#8217;t want to run the full main&nbsp;loop.</p>
            <p><span class="emblem available">since: 2.20</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="prefix_error" class="symbol" href="func.prefix_error.html">prefix_error</a></td>
            
            <td class="docblock-summary">
            <p>Formats a string according to <code>format</code> and prefix it to an existing
error message. If <code>err</code> is <code>NULL</code> (ie: no error variable) then do&nbsp;nothing.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="prefix_error_literal" class="symbol" href="func.prefix_error_literal.html">prefix_error_literal</a></td>
            
            <td class="docblock-summary">
            <p>Prefixes <code>prefix</code> to an existing error message. If <code>err</code> or *<code>err</code> is
<code>NULL</code> (i.e.: no error variable) then do&nbsp;nothing.</p>
            <p><span class="emblem available">since: 2.70</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="print" class="symbol" href="func.print.html">print</a></td>
            
            <td class="docblock-summary">
            <p>Outputs a formatted message via the print&nbsp;handler.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="printerr" class="symbol" href="func.printerr.html">printerr</a></td>
            
            <td class="docblock-summary">
            <p>Outputs a formatted message via the error message&nbsp;handler.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="printf" class="symbol" href="func.printf.html">printf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>printf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="printf_string_upper_bound" class="symbol" href="func.printf_string_upper_bound.html">printf_string_upper_bound</a></td>
            
            <td class="docblock-summary">
            <p>Calculates the maximum space needed to store the output
of the <code>sprintf()</code> function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="propagate_error" class="symbol" href="func.propagate_error.html">propagate_error</a></td>
            
            <td class="docblock-summary">
            <p>If <code>dest</code> is <code>NULL</code>, free <code>src</code>; otherwise, moves <code>src</code> into *<code>dest</code>.
The error variable <code>dest</code> points to must be <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="propagate_prefixed_error" class="symbol" href="func.propagate_prefixed_error.html">propagate_prefixed_error</a></td>
            
            <td class="docblock-summary">
            <p>If <code>dest</code> is <code>NULL</code>, free <code>src</code>; otherwise, moves <code>src</code> into <em><code>dest</code>.
</em><code>dest</code> must be <code>NULL</code>. After the move, add a prefix as with&nbsp;g_prefix_error().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="qsort_with_data" class="symbol" href="func.qsort_with_data.html">qsort_with_data</a></td>
            
            <td class="docblock-summary">
            <p>This is just like the standard C <code>qsort()</code> function, but
the comparison routine accepts a user data&nbsp;argument.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="quark_from_static_string" class="symbol" href="func.quark_from_static_string.html">quark_from_static_string</a></td>
            
            <td class="docblock-summary">
            <p>Gets the <code>GQuark</code> identifying the given (static) string. If the
string does not currently have an associated <code>GQuark</code>, a new <code>GQuark</code>
is created, linked to the given&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="quark_from_string" class="symbol" href="func.quark_from_string.html">quark_from_string</a></td>
            
            <td class="docblock-summary">
            <p>Gets the <code>GQuark</code> identifying the given string. If the string does
not currently have an associated <code>GQuark</code>, a new <code>GQuark</code> is created,
using a copy of the&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="quark_to_string" class="symbol" href="func.quark_to_string.html">quark_to_string</a></td>
            
            <td class="docblock-summary">
            <p>Gets the string associated with the given <code>GQuark</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="quark_try_string" class="symbol" href="func.quark_try_string.html">quark_try_string</a></td>
            
            <td class="docblock-summary">
            <p>Gets the <code>GQuark</code> associated with the given string, or 0 if string is
<code>NULL</code> or it has no associated <code>GQuark</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_double" class="symbol" href="func.random_double.html">random_double</a></td>
            
            <td class="docblock-summary">
            <p>Returns a random #gdouble equally distributed over the range&nbsp;[0..1).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_double_range" class="symbol" href="func.random_double_range.html">random_double_range</a></td>
            
            <td class="docblock-summary">
            <p>Returns a random #gdouble equally distributed over the range
[<code>begin</code>..<code>end</code>).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_int" class="symbol" href="func.random_int.html">random_int</a></td>
            
            <td class="docblock-summary">
            <p>Return a random #guint32 equally distributed over the range&nbsp;[0..2^32-1].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_int_range" class="symbol" href="func.random_int_range.html">random_int_range</a></td>
            
            <td class="docblock-summary">
            <p>Returns a random #gint32 equally distributed over the range
[<code>begin</code>..<code>end</code>-1].</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_set_seed" class="symbol" href="func.random_set_seed.html">random_set_seed</a></td>
            
            <td class="docblock-summary">
            <p>Sets the seed for the global random number generator, which is used
by the g_random_* functions, to <code>seed</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_acquire" class="symbol" href="func.rc_box_acquire.html">rc_box_acquire</a></td>
            
            <td class="docblock-summary">
            <p>Acquires a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_alloc" class="symbol" href="func.rc_box_alloc.html">rc_box_alloc</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>block_size</code> bytes of memory, and adds reference
counting semantics to&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_alloc0" class="symbol" href="func.rc_box_alloc0.html">rc_box_alloc0</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>block_size</code> bytes of memory, and adds reference
counting semantics to&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_dup" class="symbol" href="func.rc_box_dup.html">rc_box_dup</a></td>
            
            <td class="docblock-summary">
            <p>Allocates a new block of data with reference counting
semantics, and copies <code>block_size</code> bytes of <code>mem_block</code>
into&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_get_size" class="symbol" href="func.rc_box_get_size.html">rc_box_get_size</a></td>
            
            <td class="docblock-summary">
            <p>Retrieves the size of the reference counted data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_release" class="symbol" href="func.rc_box_release.html">rc_box_release</a></td>
            
            <td class="docblock-summary">
            <p>Releases a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_release_full" class="symbol" href="func.rc_box_release_full.html">rc_box_release_full</a></td>
            
            <td class="docblock-summary">
            <p>Releases a reference on the data pointed by <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="realloc" class="symbol" href="func.realloc.html">realloc</a></td>
            
            <td class="docblock-summary">
            <p>Reallocates the memory pointed to by <code>mem</code>, so that it now has space for
<code>n_bytes</code> bytes of memory. It returns the new address of the memory, which may
have been moved. <code>mem</code> may be <code>NULL</code>, in which case it&#8217;s considered to
have zero-length. <code>n_bytes</code> may be 0, in which case <code>NULL</code> will be returned
and <code>mem</code> will be freed unless it is <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="realloc_n" class="symbol" href="func.realloc_n.html">realloc_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_realloc(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_count_compare" class="symbol" href="func.ref_count_compare.html">ref_count_compare</a></td>
            
            <td class="docblock-summary">
            <p>Compares the current value of <code>rc</code> with <code>val</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_count_dec" class="symbol" href="func.ref_count_dec.html">ref_count_dec</a></td>
            
            <td class="docblock-summary">
            <p>Decreases the reference&nbsp;count.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_count_inc" class="symbol" href="func.ref_count_inc.html">ref_count_inc</a></td>
            
            <td class="docblock-summary">
            <p>Increases the reference&nbsp;count.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_count_init" class="symbol" href="func.ref_count_init.html">ref_count_init</a></td>
            
            <td class="docblock-summary">
            <p>Initializes a reference count variable to&nbsp;1.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_acquire" class="symbol" href="func.ref_string_acquire.html">ref_string_acquire</a></td>
            
            <td class="docblock-summary">
            <p>Acquires a reference on a&nbsp;string.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_length" class="symbol" href="func.ref_string_length.html">ref_string_length</a></td>
            
            <td class="docblock-summary">
            <p>Retrieves the length of <code>str</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_new" class="symbol" href="func.ref_string_new.html">ref_string_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new reference counted string and copies the contents of <code>str</code>
into&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_new_intern" class="symbol" href="func.ref_string_new_intern.html">ref_string_new_intern</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new reference counted string and copies the content of <code>str</code>
into&nbsp;it.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_new_len" class="symbol" href="func.ref_string_new_len.html">ref_string_new_len</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new reference counted string and copies the contents of <code>str</code>
into it, up to <code>len</code> bytes.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ref_string_release" class="symbol" href="func.ref_string_release.html">ref_string_release</a></td>
            
            <td class="docblock-summary">
            <p>Releases a reference on a string; if it was the last reference, the
resources allocated by the string are freed as&nbsp;well.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="reload_user_special_dirs_cache" class="symbol" href="func.reload_user_special_dirs_cache.html">reload_user_special_dirs_cache</a></td>
            
            <td class="docblock-summary">
            <p>Resets the cache used for g_get_user_special_dir(), so
that the latest on-disk version is used. Call this only
if you just changed the data on disk&nbsp;yourself.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="remove" class="symbol" href="func.remove.html">remove</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>remove()</code> function. The <code>remove()</code> function
deletes a name from the&nbsp;filesystem.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rename" class="symbol" href="func.rename.html">rename</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>rename()</code> function. The <code>rename()</code> function
renames a file, moving it between directories if&nbsp;required.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="return_if_fail_warning" class="symbol" href="func.return_if_fail_warning.html">return_if_fail_warning</a></td>
            
            <td class="docblock-summary">
            <p>Internal function used to print messages from the public <code>g_return_if_fail()</code>
and <code>g_return_val_if_fail()</code> macros.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rmdir" class="symbol" href="func.rmdir.html">rmdir</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>rmdir()</code> function. The <code>rmdir()</code> function
deletes a directory from the&nbsp;filesystem.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_application_name" class="symbol" href="func.set_application_name.html">set_application_name</a></td>
            
            <td class="docblock-summary">
            <p>Sets a human-readable name for the application. This name should be
localized if possible, and is intended for display to the user.
Contrast with g_set_prgname(), which sets a non-localized name.
<code>g_set_prgname()</code> will be called automatically by gtk_init(),
but <code>g_set_application_name()</code> will&nbsp;not.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_error" class="symbol" href="func.set_error.html">set_error</a></td>
            
            <td class="docblock-summary">
            <p>Does nothing if <code>err</code> is <code>NULL</code>; if <code>err</code> is non-<code>NULL</code>, then <em><code>err</code>
must be <code>NULL</code>. A new <code>GError</code> is created and assigned to </em><code>err</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_error_literal" class="symbol" href="func.set_error_literal.html">set_error_literal</a></td>
            
            <td class="docblock-summary">
            <p>Does nothing if <code>err</code> is <code>NULL</code>; if <code>err</code> is non-<code>NULL</code>, then <em><code>err</code>
must be <code>NULL</code>. A new <code>GError</code> is created and assigned to </em><code>err</code>.
Unlike g_set_error(), <code>message</code> is not a printf()-style format string.
Use this function if <code>message</code> contains text you don&#8217;t have control over,
that could include <code>printf()</code> escape&nbsp;sequences.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_prgname" class="symbol" href="func.set_prgname.html">set_prgname</a></td>
            
            <td class="docblock-summary">
            <p>Sets the name of the program. This name should not be localized,
in contrast to&nbsp;g_set_application_name().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_print_handler" class="symbol" href="func.set_print_handler.html">set_print_handler</a></td>
            
            <td class="docblock-summary">
            <p>Sets the print handler to <code>func</code>, or resets it to the
default GLib handler if <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="set_printerr_handler" class="symbol" href="func.set_printerr_handler.html">set_printerr_handler</a></td>
            
            <td class="docblock-summary">
            <p>Sets the handler for printing error messages to <code>func</code>,
or resets it to the default GLib handler if <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="setenv" class="symbol" href="func.setenv.html">setenv</a></td>
            
            <td class="docblock-summary">
            <p>Sets an environment variable. On <span class="caps">UNIX</span>, both the variable&#8217;s name and
value can be arbitrary byte strings, except that the variable&#8217;s name
cannot contain &#8216;=&#8217;. On Windows, they should be in <span class="caps">UTF</span>-8.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="shell_error_quark" class="symbol" href="func.shell_error_quark.html">shell_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="shell_parse_argv" class="symbol" href="func.shell_parse_argv.html">shell_parse_argv</a></td>
            
            <td class="docblock-summary">
            <p>Parses a command line into an argument vector, in much the same way
the shell would, but without many of the expansions the shell would
perform (variable expansion, globs, operators, filename expansion,
etc. are not&nbsp;supported).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="shell_quote" class="symbol" href="func.shell_quote.html">shell_quote</a></td>
            
            <td class="docblock-summary">
            <p>Quotes a string so that the shell (/bin/sh) will interpret the
quoted string to mean <code>unquoted_string</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="shell_unquote" class="symbol" href="func.shell_unquote.html">shell_unquote</a></td>
            
            <td class="docblock-summary">
            <p>Unquotes a string as the shell (/bin/sh)&nbsp;would.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_alloc" class="symbol" href="func.slice_alloc.html">slice_alloc</a></td>
            
            <td class="docblock-summary">
            <p>Allocates a block of memory from the libc&nbsp;allocator.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_alloc0" class="symbol" href="func.slice_alloc0.html">slice_alloc0</a></td>
            
            <td class="docblock-summary">
            <p>Allocates a block of memory via <code>g_slice_alloc()</code> and initializes
the returned memory to&nbsp;0.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_copy" class="symbol" href="func.slice_copy.html">slice_copy</a></td>
            
            <td class="docblock-summary">
            <p>Allocates a block of memory from the slice allocator
and copies <code>block_size</code> bytes into it from <code>mem_block</code>.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_free1" class="symbol" href="func.slice_free1.html">slice_free1</a></td>
            
            <td class="docblock-summary">
            <p>Frees a block of&nbsp;memory.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_free_chain_with_offset" class="symbol" href="func.slice_free_chain_with_offset.html">slice_free_chain_with_offset</a></td>
            
            <td class="docblock-summary">
            <p>Frees a linked list of memory blocks of structure type <code>type</code>.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_get_config" class="symbol" href="func.slice_get_config.html">slice_get_config</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_get_config_state" class="symbol" href="func.slice_get_config_state.html">slice_get_config_state</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_set_config" class="symbol" href="func.slice_set_config.html">slice_set_config</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="snprintf" class="symbol" href="func.snprintf.html">snprintf</a></td>
            
            <td class="docblock-summary">
            <p>A safer form of the standard <code>sprintf()</code> function. The output is guaranteed
to not exceed <code>n</code> characters (including the terminating nul character), so
it is easy to ensure that a buffer overflow cannot&nbsp;occur.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spaced_primes_closest" class="symbol" href="func.spaced_primes_closest.html">spaced_primes_closest</a></td>
            
            <td class="docblock-summary">
            <p>Gets the smallest prime number from a built-in array of primes which
is larger than <code>num</code>. This is used within GLib to calculate the optimum
size of a <code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_async" class="symbol" href="func.spawn_async.html">spawn_async</a></td>
            
            <td class="docblock-summary">
            <p>Executes a child program&nbsp;asynchronously.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_async_with_fds" class="symbol" href="func.spawn_async_with_fds.html">spawn_async_with_fds</a></td>
            
            <td class="docblock-summary">
            <p>Executes a child program&nbsp;asynchronously.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_async_with_pipes" class="symbol" href="func.spawn_async_with_pipes.html">spawn_async_with_pipes</a></td>
            
            <td class="docblock-summary">
            <p>Identical to <code>g_spawn_async_with_pipes_and_fds()</code> but with <code>n_fds</code> set to zero,
so no <span class="caps">FD</span> assignments are&nbsp;used.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_async_with_pipes_and_fds" class="symbol" href="func.spawn_async_with_pipes_and_fds.html">spawn_async_with_pipes_and_fds</a></td>
            
            <td class="docblock-summary">
            <p>Executes a child program asynchronously (your program will not
block waiting for the child to&nbsp;exit).</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_check_exit_status" class="symbol" href="func.spawn_check_exit_status.html">spawn_check_exit_status</a></td>
            
            <td class="docblock-summary">
            <p>An old name for g_spawn_check_wait_status(), deprecated because its
name is&nbsp;misleading.</p>
            <p><span class="emblem deprecated">deprecated: 2.70</span>&nbsp;<span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_check_wait_status" class="symbol" href="func.spawn_check_wait_status.html">spawn_check_wait_status</a></td>
            
            <td class="docblock-summary">
            <p>Set <code>error</code> if <code>wait_status</code> indicates the child exited abnormally
(e.g. with a nonzero exit code, or via a fatal&nbsp;signal).</p>
            <p><span class="emblem available">since: 2.70</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_close_pid" class="symbol" href="func.spawn_close_pid.html">spawn_close_pid</a></td>
            
            <td class="docblock-summary">
            <p>On some platforms, notably Windows, the <code>GPid</code> type represents a resource
which must be closed to prevent resource leaking. <code>g_spawn_close_pid()</code>
is provided for this purpose. It should be used on all platforms, even
though it doesn&#8217;t do anything under <span class="caps">UNIX</span>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_command_line_async" class="symbol" href="func.spawn_command_line_async.html">spawn_command_line_async</a></td>
            
            <td class="docblock-summary">
            <p>A simple version of <code>g_spawn_async()</code> that parses a command line with
<code>g_shell_parse_argv()</code> and passes it to&nbsp;g_spawn_async().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_command_line_sync" class="symbol" href="func.spawn_command_line_sync.html">spawn_command_line_sync</a></td>
            
            <td class="docblock-summary">
            <p>A simple version of <code>g_spawn_sync()</code> with little-used parameters
removed, taking a command line instead of an argument&nbsp;vector.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_error_quark" class="symbol" href="func.spawn_error_quark.html">spawn_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_exit_error_quark" class="symbol" href="func.spawn_exit_error_quark.html">spawn_exit_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="spawn_sync" class="symbol" href="func.spawn_sync.html">spawn_sync</a></td>
            
            <td class="docblock-summary">
            <p>Executes a child synchronously (waits for the child to exit before&nbsp;returning).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="sprintf" class="symbol" href="func.sprintf.html">sprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>sprintf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="stat" class="symbol" href="func.stat.html">stat</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>stat()</code> function. The <code>stat()</code> function
returns information about a file. On Windows the <code>stat()</code> function in
the C library checks only the <span class="caps">FAT</span>-style <span class="caps">READONLY</span> attribute and does
not look at the <span class="caps">ACL</span> at all. Thus on Windows the protection bits in
the <code>st_mode</code> field are a fabrication of little&nbsp;use.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="stpcpy" class="symbol" href="func.stpcpy.html">stpcpy</a></td>
            
            <td class="docblock-summary">
            <p>Copies a nul-terminated string into the destination buffer, including
the trailing nul byte, and returns a pointer to the trailing nul byte
in <code>dest</code>.  The return value is useful for concatenating multiple
strings without having to repeatedly scan for the&nbsp;end.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_equal" class="symbol" href="func.str_equal.html">str_equal</a></td>
            
            <td class="docblock-summary">
            <p>Compares two strings for byte-by-byte equality and returns <code>TRUE</code>
if they are equal. It can be passed to <code>g_hash_table_new()</code> as the
<code>key_equal_func</code> parameter, when using non-<code>NULL</code> strings as keys in a
<code>GHashTable</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_has_prefix" class="symbol" href="func.str_has_prefix.html">str_has_prefix</a></td>
            
            <td class="docblock-summary">
            <p>Looks whether the string <code>str</code> begins with <code>prefix</code>.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_has_suffix" class="symbol" href="func.str_has_suffix.html">str_has_suffix</a></td>
            
            <td class="docblock-summary">
            <p>Looks whether a string ends with <code>suffix</code>.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_hash" class="symbol" href="func.str_hash.html">str_hash</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to a hash&nbsp;value.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_is_ascii" class="symbol" href="func.str_is_ascii.html">str_is_ascii</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a string is pure <span class="caps">ASCII</span>. A string is pure <span class="caps">ASCII</span> if it
contains no bytes with the high bit&nbsp;set.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_match_string" class="symbol" href="func.str_match_string.html">str_match_string</a></td>
            
            <td class="docblock-summary">
            <p>Checks if a search conducted for <code>search_term</code> should match
<code>potential_hit</code>.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_to_ascii" class="symbol" href="func.str_to_ascii.html">str_to_ascii</a></td>
            
            <td class="docblock-summary">
            <p>Transliterate <code>str</code> to plain <span class="caps">ASCII</span>.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="str_tokenize_and_fold" class="symbol" href="func.str_tokenize_and_fold.html">str_tokenize_and_fold</a></td>
            
            <td class="docblock-summary">
            <p>Tokenizes <code>string</code> and performs folding on each&nbsp;token.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strcanon" class="symbol" href="func.strcanon.html">strcanon</a></td>
            
            <td class="docblock-summary">
            <p>For each character in <code>string</code>, if the character is not in <code>valid_chars</code>,
replaces the character with <code>substitutor</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strcasecmp" class="symbol" href="func.strcasecmp.html">strcasecmp</a></td>
            
            <td class="docblock-summary">
            <p>A case-insensitive string comparison, corresponding to the standard
<code>strcasecmp()</code> function on platforms which support&nbsp;it.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strchomp" class="symbol" href="func.strchomp.html">strchomp</a></td>
            
            <td class="docblock-summary">
            <p>Removes trailing whitespace from a&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strchug" class="symbol" href="func.strchug.html">strchug</a></td>
            
            <td class="docblock-summary">
            <p>Removes leading whitespace from a string, by moving the rest
of the characters&nbsp;forward.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strcmp0" class="symbol" href="func.strcmp0.html">strcmp0</a></td>
            
            <td class="docblock-summary">
            <p>Compares <code>str1</code> and <code>str2</code> like strcmp(). Handles <code>NULL</code>
gracefully by sorting it before non-<code>NULL</code> strings.
Comparing two <code>NULL</code> pointers returns&nbsp;0.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strcompress" class="symbol" href="func.strcompress.html">strcompress</a></td>
            
            <td class="docblock-summary">
            <p>Replaces all escaped characters with their one byte&nbsp;equivalent.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strconcat" class="symbol" href="func.strconcat.html">strconcat</a></td>
            
            <td class="docblock-summary">
            <p>Concatenates all of the given strings into one long&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdelimit" class="symbol" href="func.strdelimit.html">strdelimit</a></td>
            
            <td class="docblock-summary">
            <p>Converts any delimiter characters in <code>string</code> to <code>new_delimiter</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdown" class="symbol" href="func.strdown.html">strdown</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to lower&nbsp;case.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdup" class="symbol" href="func.strdup.html">strdup</a></td>
            
            <td class="docblock-summary">
            <p>Duplicates a string. If <code>str</code> is <code>NULL</code> it returns <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdup_printf" class="symbol" href="func.strdup_printf.html">strdup_printf</a></td>
            
            <td class="docblock-summary">
            <p>Similar to the standard C <code>sprintf()</code> function but safer, since it
calculates the maximum space required and allocates memory to hold
the&nbsp;result.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdup_vprintf" class="symbol" href="func.strdup_vprintf.html">strdup_vprintf</a></td>
            
            <td class="docblock-summary">
            <p>Similar to the standard C <code>vsprintf()</code> function but safer, since it
calculates the maximum space required and allocates memory to hold
the&nbsp;result.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strdupv" class="symbol" href="func.strdupv.html">strdupv</a></td>
            
            <td class="docblock-summary">
            <p>Copies an array of strings. The copy is a deep copy; each string is also&nbsp;copied.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strerror" class="symbol" href="func.strerror.html">strerror</a></td>
            
            <td class="docblock-summary">
            <p>Returns a string corresponding to the given error code, e.g. &#8220;no
such&nbsp;process&#8221;.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strescape" class="symbol" href="func.strescape.html">strescape</a></td>
            
            <td class="docblock-summary">
            <p>Escapes the special characters &#8216;\b&#8217;, &#8216;\f&#8217;, &#8216;\n&#8217;, &#8216;\r&#8217;, &#8216;\t&#8217;, &#8216;\v&#8217;, &#8216;&#39;
and &#8216;&#8221;&#8217; in the string <code>source</code> by inserting a &#8216;&#39; before
them. Additionally all characters in the range 0x01-0x1F (everything
below <span class="caps">SPACE</span>) and in the range 0x7F-0xFF (all non-<span class="caps">ASCII</span> chars) are
replaced with a &#8216;&#39; followed by their octal representation.
Characters supplied in <code>exceptions</code> are not&nbsp;escaped.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strfreev" class="symbol" href="func.strfreev.html">strfreev</a></td>
            
            <td class="docblock-summary">
            <p>Frees an array of strings, as well as each string it&nbsp;contains.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strip_context" class="symbol" href="func.strip_context.html">strip_context</a></td>
            
            <td class="docblock-summary">
            <p>An auxiliary function for <code>gettext()</code> support (see&nbsp;Q_()).</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strjoin" class="symbol" href="func.strjoin.html">strjoin</a></td>
            
            <td class="docblock-summary">
            <p>Joins a number of strings together to form one long string, with the
optional <code>separator</code> inserted between each of&nbsp;them.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strjoinv" class="symbol" href="func.strjoinv.html">strjoinv</a></td>
            
            <td class="docblock-summary">
            <p>Joins an array of strings together to form one long string, with the
optional <code>separator</code> inserted between each of&nbsp;them.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strlcat" class="symbol" href="func.strlcat.html">strlcat</a></td>
            
            <td class="docblock-summary">
            <p>Portability wrapper that calls <code>strlcat()</code> on systems which have it,
and emulates it otherwise. Appends nul-terminated <code>src</code> string to <code>dest</code>,
guaranteeing nul-termination for <code>dest</code>. The total size of <code>dest</code> won&#8217;t
exceed <code>dest_size</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strlcpy" class="symbol" href="func.strlcpy.html">strlcpy</a></td>
            
            <td class="docblock-summary">
            <p>Portability wrapper that calls <code>strlcpy()</code> on systems which have it,
and emulates <code>strlcpy()</code> otherwise. Copies <code>src</code> to <code>dest</code>; <code>dest</code> is
guaranteed to be nul-terminated; <code>src</code> must be nul-terminated;
<code>dest_size</code> is the buffer size, not the number of bytes to&nbsp;copy.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strncasecmp" class="symbol" href="func.strncasecmp.html">strncasecmp</a></td>
            
            <td class="docblock-summary">
            <p>A case-insensitive string comparison, corresponding to the standard
<code>strncasecmp()</code> function on platforms which support it. It is similar
to <code>g_strcasecmp()</code> except it only compares the first <code>n</code> characters of
the&nbsp;strings.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strndup" class="symbol" href="func.strndup.html">strndup</a></td>
            
            <td class="docblock-summary">
            <p>Duplicates the first <code>n</code> bytes of a string, returning a newly-allocated
buffer <code>n</code> + 1 bytes long which will always be nul-terminated. If <code>str</code>
is less than <code>n</code> bytes long the buffer is padded with nuls. If <code>str</code> is
<code>NULL</code> it returns <code>NULL</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strnfill" class="symbol" href="func.strnfill.html">strnfill</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new string <code>length</code> bytes long filled with <code>fill_char</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strreverse" class="symbol" href="func.strreverse.html">strreverse</a></td>
            
            <td class="docblock-summary">
            <p>Reverses all of the bytes in a string. For example,
<code>g_strreverse ("abcdef")</code> will result in&nbsp;&#8220;fedcba&#8221;.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strrstr" class="symbol" href="func.strrstr.html">strrstr</a></td>
            
            <td class="docblock-summary">
            <p>Searches the string <code>haystack</code> for the last occurrence
of the string <code>needle</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strrstr_len" class="symbol" href="func.strrstr_len.html">strrstr_len</a></td>
            
            <td class="docblock-summary">
            <p>Searches the string <code>haystack</code> for the last occurrence
of the string <code>needle</code>, limiting the length of the search
to <code>haystack_len</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strsignal" class="symbol" href="func.strsignal.html">strsignal</a></td>
            
            <td class="docblock-summary">
            <p>Returns a string describing the given signal, e.g. &#8220;Segmentation fault&#8221;.
If the signal is unknown, it returns “unknown signal&nbsp;(&lt;signum&gt;)”.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strsplit" class="symbol" href="func.strsplit.html">strsplit</a></td>
            
            <td class="docblock-summary">
            <p>Splits a string into a maximum of <code>max_tokens</code> pieces, using the given
<code>delimiter</code>. If <code>max_tokens</code> is reached, the remainder of <code>string</code> is
appended to the last&nbsp;token.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strsplit_set" class="symbol" href="func.strsplit_set.html">strsplit_set</a></td>
            
            <td class="docblock-summary">
            <p>Splits <code>string</code> into a number of tokens not containing any of the characters
in <code>delimiters</code>. A token is the (possibly empty) longest string that does not
contain any of the characters in <code>delimiters</code>. If <code>max_tokens</code> is reached, the
remainder is appended to the last&nbsp;token.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strstr_len" class="symbol" href="func.strstr_len.html">strstr_len</a></td>
            
            <td class="docblock-summary">
            <p>Searches the string <code>haystack</code> for the first occurrence
of the string <code>needle</code>, limiting the length of the search
to <code>haystack_len</code> or a nul terminator byte (whichever is reached&nbsp;first).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strtod" class="symbol" href="func.strtod.html">strtod</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to a floating point&nbsp;value.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strup" class="symbol" href="func.strup.html">strup</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string to upper&nbsp;case.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strv_contains" class="symbol" href="func.strv_contains.html">strv_contains</a></td>
            
            <td class="docblock-summary">
            <p>Checks if an array of strings contains the string <code>str</code> according to
<code>g_str_equal()</code>. <code>strv</code> must not be <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.44</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strv_equal" class="symbol" href="func.strv_equal.html">strv_equal</a></td>
            
            <td class="docblock-summary">
            <p>Checks if two arrays of strings contain exactly the same elements in
exactly the same&nbsp;order.</p>
            <p><span class="emblem available">since: 2.60</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strv_get_type" class="symbol" href="func.strv_get_type.html">strv_get_type</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strv_length" class="symbol" href="func.strv_length.html">strv_length</a></td>
            
            <td class="docblock-summary">
            <p>Returns the length of an array of strings. <code>str_array</code> must not be <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_add_data_func" class="symbol" href="func.test_add_data_func.html">test_add_data_func</a></td>
            
            <td class="docblock-summary">
            <p>Create a new test case, similar to g_test_create_case(). However
the test is assumed to use no fixture, and test suites are automatically
created on the fly and added to the root fixture, based on the
slash-separated portions of <code>testpath</code>. The <code>test_data</code> argument
will be passed as first argument to <code>test_func</code>.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_add_data_func_full" class="symbol" href="func.test_add_data_func_full.html">test_add_data_func_full</a></td>
            
            <td class="docblock-summary">
            <p>Create a new test case, as with g_test_add_data_func(), but freeing
<code>test_data</code> after the test run is&nbsp;complete.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_add_func" class="symbol" href="func.test_add_func.html">test_add_func</a></td>
            
            <td class="docblock-summary">
            <p>Create a new test case, similar to g_test_create_case(). However
the test is assumed to use no fixture, and test suites are automatically
created on the fly and added to the root fixture, based on the
slash-separated portions of <code>testpath</code>.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_add_vtable" class="symbol" href="func.test_add_vtable.html">test_add_vtable</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_bug" class="symbol" href="func.test_bug.html">test_bug</a></td>
            
            <td class="docblock-summary">
            <p>This function adds a message to test reports that
associates a bug <span class="caps">URI</span> with a test&nbsp;case.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_bug_base" class="symbol" href="func.test_bug_base.html">test_bug_base</a></td>
            
            <td class="docblock-summary">
            <p>Specify the base <span class="caps">URI</span> for bug&nbsp;reports.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_build_filename" class="symbol" href="func.test_build_filename.html">test_build_filename</a></td>
            
            <td class="docblock-summary">
            <p>Creates the pathname to a data file that is required for a&nbsp;test.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_create_case" class="symbol" href="func.test_create_case.html">test_create_case</a></td>
            
            <td class="docblock-summary">
            <p>Create a new <code>GTestCase</code>, named <code>test_name</code>.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_create_suite" class="symbol" href="func.test_create_suite.html">test_create_suite</a></td>
            
            <td class="docblock-summary">
            <p>Create a new test suite with the name <code>suite_name</code>.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_disable_crash_reporting" class="symbol" href="func.test_disable_crash_reporting.html">test_disable_crash_reporting</a></td>
            
            <td class="docblock-summary">
            <p>Attempt to disable system crash reporting&nbsp;infrastructure.</p>
            <p><span class="emblem available">since: 2.78</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_expect_message" class="symbol" href="func.test_expect_message.html">test_expect_message</a></td>
            
            <td class="docblock-summary">
            <p>Indicates that a message with the given <code>log_domain</code> and <code>log_level</code>,
with text matching <code>pattern</code>, is expected to be&nbsp;logged.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_fail" class="symbol" href="func.test_fail.html">test_fail</a></td>
            
            <td class="docblock-summary">
            <p>Indicates that a test failed. This function can be called
multiple times from the same test. You can use this function
if your test failed in a recoverable&nbsp;way.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_fail_printf" class="symbol" href="func.test_fail_printf.html">test_fail_printf</a></td>
            
            <td class="docblock-summary">
            <p>Equivalent to g_test_fail(), but also record a message like&nbsp;g_test_skip_printf().</p>
            <p><span class="emblem available">since: 2.70</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_failed" class="symbol" href="func.test_failed.html">test_failed</a></td>
            
            <td class="docblock-summary">
            <p>Returns whether a test has already failed. This will
be the case when g_test_fail(), <code>g_test_incomplete()</code>
or <code>g_test_skip()</code> have been called, but also if an
assertion has&nbsp;failed.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_get_dir" class="symbol" href="func.test_get_dir.html">test_get_dir</a></td>
            
            <td class="docblock-summary">
            <p>Gets the pathname of the directory containing test files of the type
specified by <code>file_type</code>.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_get_filename" class="symbol" href="func.test_get_filename.html">test_get_filename</a></td>
            
            <td class="docblock-summary">
            <p>Gets the pathname to a data file that is required for a&nbsp;test.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_get_path" class="symbol" href="func.test_get_path.html">test_get_path</a></td>
            
            <td class="docblock-summary">
            <p>Gets the test path for the test currently being&nbsp;run.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_get_root" class="symbol" href="func.test_get_root.html">test_get_root</a></td>
            
            <td class="docblock-summary">
            <p>Get the toplevel test suite for the test path <span class="caps">API</span>.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_incomplete" class="symbol" href="func.test_incomplete.html">test_incomplete</a></td>
            
            <td class="docblock-summary">
            <p>Indicates that a test failed because of some incomplete
functionality. This function can be called multiple times
from the same&nbsp;test.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_incomplete_printf" class="symbol" href="func.test_incomplete_printf.html">test_incomplete_printf</a></td>
            
            <td class="docblock-summary">
            <p>Equivalent to g_test_incomplete(), but the explanation is formatted
as if by&nbsp;g_strdup_printf().</p>
            <p><span class="emblem available">since: 2.70</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_init" class="symbol" href="func.test_init.html">test_init</a></td>
            
            <td class="docblock-summary">
            <p>Initialize the GLib testing framework, e.g. by seeding the
test random number generator, the name for <code>g_get_prgname()</code>
and parsing test related command line&nbsp;args.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_log_set_fatal_handler" class="symbol" href="func.test_log_set_fatal_handler.html">test_log_set_fatal_handler</a></td>
            
            <td class="docblock-summary">
            <p>Installs a non-error fatal log handler which can be
used to decide whether log messages which are counted
as fatal abort the&nbsp;program.</p>
            <p><span class="emblem available">since: 2.22</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_log_type_name" class="symbol" href="func.test_log_type_name.html">test_log_type_name</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_maximized_result" class="symbol" href="func.test_maximized_result.html">test_maximized_result</a></td>
            
            <td class="docblock-summary">
            <p>Report the result of a performance or measurement test.
The test should generally strive to maximize the reported
quantities (larger values are better than smaller ones),
this and <code>maximized_quantity</code> can determine sorting
order for test result&nbsp;reports.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_message" class="symbol" href="func.test_message.html">test_message</a></td>
            
            <td class="docblock-summary">
            <p>Add a message to the test&nbsp;report.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_minimized_result" class="symbol" href="func.test_minimized_result.html">test_minimized_result</a></td>
            
            <td class="docblock-summary">
            <p>Report the result of a performance or measurement test.
The test should generally strive to minimize the reported
quantities (smaller values are better than larger ones),
this and <code>minimized_quantity</code> can determine sorting
order for test result&nbsp;reports.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_queue_destroy" class="symbol" href="func.test_queue_destroy.html">test_queue_destroy</a></td>
            
            <td class="docblock-summary">
            <p>Enqueues a callback <code>destroy_func</code> to be executed during the next test case
teardown&nbsp;phase.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_queue_free" class="symbol" href="func.test_queue_free.html">test_queue_free</a></td>
            
            <td class="docblock-summary">
            <p>Enqueue a pointer to be released with <code>g_free()</code> during the next
teardown phase. This is equivalent to calling <code>g_test_queue_destroy()</code>
with a destroy callback of&nbsp;g_free().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_rand_double" class="symbol" href="func.test_rand_double.html">test_rand_double</a></td>
            
            <td class="docblock-summary">
            <p>Get a reproducible random floating point number,
see <code>g_test_rand_int()</code> for details on test case random&nbsp;numbers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_rand_double_range" class="symbol" href="func.test_rand_double_range.html">test_rand_double_range</a></td>
            
            <td class="docblock-summary">
            <p>Get a reproducible random floating pointer number out of a specified range,
see <code>g_test_rand_int()</code> for details on test case random&nbsp;numbers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_rand_int" class="symbol" href="func.test_rand_int.html">test_rand_int</a></td>
            
            <td class="docblock-summary">
            <p>Get a reproducible random integer&nbsp;number.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_rand_int_range" class="symbol" href="func.test_rand_int_range.html">test_rand_int_range</a></td>
            
            <td class="docblock-summary">
            <p>Get a reproducible random integer number out of a specified range,
see <code>g_test_rand_int()</code> for details on test case random&nbsp;numbers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_run" class="symbol" href="func.test_run.html">test_run</a></td>
            
            <td class="docblock-summary">
            <p>Runs all tests under the toplevel suite which can be retrieved
with g_test_get_root(). Similar to g_test_run_suite(), the test
cases to be run are filtered according to test path arguments
(<code>-p testpath</code> and <code>-s testpath</code>) as parsed by g_test_init().
<code>g_test_run_suite()</code> or <code>g_test_run()</code> may only be called once in a&nbsp;program.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_run_suite" class="symbol" href="func.test_run_suite.html">test_run_suite</a></td>
            
            <td class="docblock-summary">
            <p>Execute the tests within <code>suite</code> and all nested <code>GTestSuites</code>.
The test suites to be executed are filtered according to
test path arguments (<code>-p testpath</code> and <code>-s testpath</code>) as parsed by
g_test_init(). See the <code>g_test_run()</code> documentation for more
information on the order that tests are run&nbsp;in.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_set_nonfatal_assertions" class="symbol" href="func.test_set_nonfatal_assertions.html">test_set_nonfatal_assertions</a></td>
            
            <td class="docblock-summary">
            <p>Changes the behaviour of the various <code>g_assert_*()</code> macros,
<code>g_test_assert_expected_messages()</code> and the various
<code>g_test_trap_assert_*()</code> macros to not abort to program, but instead
call <code>g_test_fail()</code> and continue. (This also changes the behavior of
<code>g_test_fail()</code> so that it will not cause the test program to abort
after completing the failed&nbsp;test.)</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_skip" class="symbol" href="func.test_skip.html">test_skip</a></td>
            
            <td class="docblock-summary">
            <p>Indicates that a test was&nbsp;skipped.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_skip_printf" class="symbol" href="func.test_skip_printf.html">test_skip_printf</a></td>
            
            <td class="docblock-summary">
            <p>Equivalent to g_test_skip(), but the explanation is formatted
as if by&nbsp;g_strdup_printf().</p>
            <p><span class="emblem available">since: 2.70</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_subprocess" class="symbol" href="func.test_subprocess.html">test_subprocess</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> (after <code>g_test_init()</code> has been called) if the test
program is running under&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_summary" class="symbol" href="func.test_summary.html">test_summary</a></td>
            
            <td class="docblock-summary">
            <p>Set the summary for a test, which describes what the test checks, and how it
goes about checking it. This may be included in test report output, and is
useful documentation for anyone reading the source code or modifying a test
in future. It must be a single&nbsp;line.</p>
            <p><span class="emblem available">since: 2.62</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_timer_elapsed" class="symbol" href="func.test_timer_elapsed.html">test_timer_elapsed</a></td>
            
            <td class="docblock-summary">
            <p>Get the number of seconds since the last start of the timer with&nbsp;g_test_timer_start().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_timer_last" class="symbol" href="func.test_timer_last.html">test_timer_last</a></td>
            
            <td class="docblock-summary">
            <p>Report the last result of&nbsp;g_test_timer_elapsed().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_timer_start" class="symbol" href="func.test_timer_start.html">test_timer_start</a></td>
            
            <td class="docblock-summary">
            <p>Start a timing test. Call <code>g_test_timer_elapsed()</code> when the task is supposed
to be done. Call this function again to restart the&nbsp;timer.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assertions" class="symbol" href="func.test_trap_assertions.html">test_trap_assertions</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_fork" class="symbol" href="func.test_trap_fork.html">test_trap_fork</a></td>
            
            <td class="docblock-summary">
            <p>Fork the current test program to execute a test case that might
not return or that might&nbsp;abort.</p>
            <p><span class="emblem deprecated">deprecated: Unknown</span>&nbsp;<span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_has_passed" class="symbol" href="func.test_trap_has_passed.html">test_trap_has_passed</a></td>
            
            <td class="docblock-summary">
            <p>Check the result of the last <code>g_test_trap_subprocess()</code> call.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_reached_timeout" class="symbol" href="func.test_trap_reached_timeout.html">test_trap_reached_timeout</a></td>
            
            <td class="docblock-summary">
            <p>Check the result of the last <code>g_test_trap_subprocess()</code> call.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_subprocess" class="symbol" href="func.test_trap_subprocess.html">test_trap_subprocess</a></td>
            
            <td class="docblock-summary">
            <p>Respawns the test program to run only <code>test_path</code> in a&nbsp;subprocess.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_subprocess_with_envp" class="symbol" href="func.test_trap_subprocess_with_envp.html">test_trap_subprocess_with_envp</a></td>
            
            <td class="docblock-summary">
            <p>Respawns the test program to run only <code>test_path</code> in a subprocess with the
given <code>envp</code> environment.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add" class="symbol" href="func.timeout_add.html">timeout_add</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called at regular intervals, with the default
priority, <code>G_PRIORITY_DEFAULT</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add_full" class="symbol" href="func.timeout_add_full.html">timeout_add_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called at regular intervals, with the given
priority.  The function is called repeatedly until it returns
<code>FALSE</code>, at which point the timeout is automatically destroyed and
the function will not be called again.  The <code>notify</code> function is
called when the timeout is destroyed.  The first call to the
function will be at the end of the first <code>interval</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add_once" class="symbol" href="func.timeout_add_once.html">timeout_add_once</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called after <code>interval</code> milliseconds have elapsed,
with the default priority, <code>G_PRIORITY_DEFAULT</code>.</p>
            <p><span class="emblem available">since: 2.74</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add_seconds" class="symbol" href="func.timeout_add_seconds.html">timeout_add_seconds</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called at regular intervals with the default
priority, <code>G_PRIORITY_DEFAULT</code>.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add_seconds_full" class="symbol" href="func.timeout_add_seconds_full.html">timeout_add_seconds_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called at regular intervals, with <code>priority</code>.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_add_seconds_once" class="symbol" href="func.timeout_add_seconds_once.html">timeout_add_seconds_once</a></td>
            
            <td class="docblock-summary">
            <p>This function behaves like <code>g_timeout_add_once()</code> but with a range in&nbsp;seconds.</p>
            <p><span class="emblem available">since: 2.78</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_source_new" class="symbol" href="func.timeout_source_new.html">timeout_source_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new timeout&nbsp;source.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="timeout_source_new_seconds" class="symbol" href="func.timeout_source_new_seconds.html">timeout_source_new_seconds</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new timeout&nbsp;source.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_malloc" class="symbol" href="func.try_malloc.html">try_malloc</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to allocate <code>n_bytes</code>, and returns <code>NULL</code> on failure.
Contrast with g_malloc(), which aborts the program on&nbsp;failure.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_malloc0" class="symbol" href="func.try_malloc0.html">try_malloc0</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to allocate <code>n_bytes</code>, initialized to 0&#8217;s, and returns <code>NULL</code> on
failure. Contrast with g_malloc0(), which aborts the program on&nbsp;failure.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_malloc0_n" class="symbol" href="func.try_malloc0_n.html">try_malloc0_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_try_malloc0(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_malloc_n" class="symbol" href="func.try_malloc_n.html">try_malloc_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_try_malloc(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_realloc" class="symbol" href="func.try_realloc.html">try_realloc</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to realloc <code>mem</code> to a new size, <code>n_bytes</code>, and returns <code>NULL</code>
on failure. Contrast with g_realloc(), which aborts the program
on&nbsp;failure.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_realloc_n" class="symbol" href="func.try_realloc_n.html">try_realloc_n</a></td>
            
            <td class="docblock-summary">
            <p>This function is similar to g_try_realloc(), allocating (<code>n_blocks</code> * <code>n_block_bytes</code>) bytes,
but care is taken to detect possible overflow during&nbsp;multiplication.</p>
            <p><span class="emblem available">since: 2.24</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ucs4_to_utf16" class="symbol" href="func.ucs4_to_utf16.html">ucs4_to_utf16</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UCS</span>-4 to <span class="caps">UTF</span>-16. A 0 character will be
added to the result after the converted&nbsp;text.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ucs4_to_utf8" class="symbol" href="func.ucs4_to_utf8.html">ucs4_to_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from a 32-bit fixed width representation as <span class="caps">UCS</span>-4.
to <span class="caps">UTF</span>-8. The result will be terminated with a 0&nbsp;byte.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_break_type" class="symbol" href="func.unichar_break_type.html">unichar_break_type</a></td>
            
            <td class="docblock-summary">
            <p>Determines the break type of <code>c</code>. <code>c</code> should be a Unicode character
(to derive a character from <span class="caps">UTF</span>-8 encoded text, use
g_utf8_get_char()). The break type is used to find word and line
breaks (&#8220;text boundaries&#8221;), Pango implements the Unicode boundary
resolution algorithms and normally you would use a function such
as <code>pango_break()</code> instead of caring about break types&nbsp;yourself.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_combining_class" class="symbol" href="func.unichar_combining_class.html">unichar_combining_class</a></td>
            
            <td class="docblock-summary">
            <p>Determines the canonical combining class of a Unicode&nbsp;character.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_compose" class="symbol" href="func.unichar_compose.html">unichar_compose</a></td>
            
            <td class="docblock-summary">
            <p>Performs a single composition step of the
Unicode canonical composition&nbsp;algorithm.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_decompose" class="symbol" href="func.unichar_decompose.html">unichar_decompose</a></td>
            
            <td class="docblock-summary">
            <p>Performs a single decomposition step of the
Unicode canonical decomposition&nbsp;algorithm.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_digit_value" class="symbol" href="func.unichar_digit_value.html">unichar_digit_value</a></td>
            
            <td class="docblock-summary">
            <p>Determines the numeric value of a character as a decimal&nbsp;digit.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_fully_decompose" class="symbol" href="func.unichar_fully_decompose.html">unichar_fully_decompose</a></td>
            
            <td class="docblock-summary">
            <p>Computes the canonical or compatibility decomposition of a
Unicode character.  For compatibility decomposition,
pass <code>TRUE</code> for <code>compat</code>; for canonical decomposition
pass <code>FALSE</code> for <code>compat</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_get_mirror_char" class="symbol" href="func.unichar_get_mirror_char.html">unichar_get_mirror_char</a></td>
            
            <td class="docblock-summary">
            <p>In Unicode, some characters are &#8220;mirrored&#8221;. This means that their
images are mirrored horizontally in text that is laid out from right
to left. For instance, &#8220;(&#8221; would become its mirror image, &#8220;)&#8221;, in
right-to-left&nbsp;text.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_get_script" class="symbol" href="func.unichar_get_script.html">unichar_get_script</a></td>
            
            <td class="docblock-summary">
            <p>Looks up the <code>GUnicodeScript</code> for a particular character (as defined
by Unicode Standard Annex #24). No check is made for <code>ch</code> being a
valid Unicode character; if you pass in invalid character, the
result is&nbsp;undefined.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isalnum" class="symbol" href="func.unichar_isalnum.html">unichar_isalnum</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is alphanumeric.
Given some <span class="caps">UTF</span>-8 text, obtain a character value
with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isalpha" class="symbol" href="func.unichar_isalpha.html">unichar_isalpha</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is alphabetic (i.e. a letter).
Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_iscntrl" class="symbol" href="func.unichar_iscntrl.html">unichar_iscntrl</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a control character.
Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isdefined" class="symbol" href="func.unichar_isdefined.html">unichar_isdefined</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a given character is assigned in the Unicode&nbsp;standard.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isdigit" class="symbol" href="func.unichar_isdigit.html">unichar_isdigit</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is numeric (i.e. a digit).  This
covers <span class="caps">ASCII</span> 0-9 and also digits in other languages/scripts.  Given
some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isgraph" class="symbol" href="func.unichar_isgraph.html">unichar_isgraph</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is printable and not a space
(returns <code>FALSE</code> for control characters, format characters, and
spaces). <code>g_unichar_isprint()</code> is similar, but returns <code>TRUE</code> for
spaces. Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_islower" class="symbol" href="func.unichar_islower.html">unichar_islower</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a lowercase letter.
Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_ismark" class="symbol" href="func.unichar_ismark.html">unichar_ismark</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a mark (non-spacing mark,
combining mark, or enclosing mark in Unicode speak).
Given some <span class="caps">UTF</span>-8 text, obtain a character value
with&nbsp;g_utf8_get_char().</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isprint" class="symbol" href="func.unichar_isprint.html">unichar_isprint</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is printable.
Unlike g_unichar_isgraph(), returns <code>TRUE</code> for spaces.
Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_ispunct" class="symbol" href="func.unichar_ispunct.html">unichar_ispunct</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is punctuation or a symbol.
Given some <span class="caps">UTF</span>-8 text, obtain a character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isspace" class="symbol" href="func.unichar_isspace.html">unichar_isspace</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a space, tab, or line separator
(newline, carriage return, etc.).  Given some <span class="caps">UTF</span>-8 text, obtain a
character value with&nbsp;g_utf8_get_char().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_istitle" class="symbol" href="func.unichar_istitle.html">unichar_istitle</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a character is titlecase. Some characters in
Unicode which are composites, such as the <span class="caps">DZ</span> digraph
have three case variants instead of just two. The titlecase
form is used at the beginning of a word where only the
first letter is capitalized. The titlecase form of the <span class="caps">DZ</span>
digraph is U+01F2 <span class="caps">LATIN</span> <span class="caps">CAPITAL</span> <span class="caps">LETTTER</span> D <span class="caps">WITH</span> <span class="caps">SMALL</span> <span class="caps">LETTER</span>&nbsp;Z.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isupper" class="symbol" href="func.unichar_isupper.html">unichar_isupper</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a character is&nbsp;uppercase.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_iswide" class="symbol" href="func.unichar_iswide.html">unichar_iswide</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a character is typically rendered in a double-width&nbsp;cell.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_iswide_cjk" class="symbol" href="func.unichar_iswide_cjk.html">unichar_iswide_cjk</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a character is typically rendered in a double-width
cell under legacy East Asian locales.  If a character is wide according to
g_unichar_iswide(), then it is also reported wide with this function, but
the converse is not necessarily true. See the
<a href="http://www.unicode.org/reports/tr11/">Unicode Standard Annex #11</a>
for&nbsp;details.</p>
            <p><span class="emblem available">since: 2.12</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_isxdigit" class="symbol" href="func.unichar_isxdigit.html">unichar_isxdigit</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a character is a hexadecimal&nbsp;digit.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_iszerowidth" class="symbol" href="func.unichar_iszerowidth.html">unichar_iszerowidth</a></td>
            
            <td class="docblock-summary">
            <p>Determines if a given character typically takes zero width when rendered.
The return value is <code>TRUE</code> for all non-spacing and enclosing marks
(e.g., combining accents), format characters, zero-width
space, but not U+<span class="caps">00AD</span> <span class="caps">SOFT</span> <span class="caps">HYPHEN</span>.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_to_utf8" class="symbol" href="func.unichar_to_utf8.html">unichar_to_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Converts a single character to <span class="caps">UTF</span>-8.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_tolower" class="symbol" href="func.unichar_tolower.html">unichar_tolower</a></td>
            
            <td class="docblock-summary">
            <p>Converts a character to lower&nbsp;case.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_totitle" class="symbol" href="func.unichar_totitle.html">unichar_totitle</a></td>
            
            <td class="docblock-summary">
            <p>Converts a character to the&nbsp;titlecase.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_toupper" class="symbol" href="func.unichar_toupper.html">unichar_toupper</a></td>
            
            <td class="docblock-summary">
            <p>Converts a character to&nbsp;uppercase.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_type" class="symbol" href="func.unichar_type.html">unichar_type</a></td>
            
            <td class="docblock-summary">
            <p>Classifies a Unicode character by&nbsp;type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_validate" class="symbol" href="func.unichar_validate.html">unichar_validate</a></td>
            
            <td class="docblock-summary">
            <p>Checks whether <code>ch</code> is a valid Unicode character. Some possible
integer values of <code>ch</code> will not be valid. 0 is considered a valid
character, though it&#8217;s normally a string&nbsp;terminator.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unichar_xdigit_value" class="symbol" href="func.unichar_xdigit_value.html">unichar_xdigit_value</a></td>
            
            <td class="docblock-summary">
            <p>Determines the numeric value of a character as a hexadecimal&nbsp;digit.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unicode_canonical_decomposition" class="symbol" href="func.unicode_canonical_decomposition.html">unicode_canonical_decomposition</a></td>
            
            <td class="docblock-summary">
            <p>Computes the canonical decomposition of a Unicode&nbsp;character.</p>
            <p><span class="emblem deprecated">deprecated: 2.30</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unicode_canonical_ordering" class="symbol" href="func.unicode_canonical_ordering.html">unicode_canonical_ordering</a></td>
            
            <td class="docblock-summary">
            <p>Computes the canonical ordering of a string in-place.
This rearranges decomposed characters in the string
according to their combining classes.  See the Unicode
manual for more&nbsp;information.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_error_quark" class="symbol" href="func.unix_error_quark.html">unix_error_quark</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_fd_add" class="symbol" href="func.unix_fd_add.html">unix_fd_add</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called when the <span class="caps">IO</span> condition, as specified by
<code>condition</code> becomes true for <code>fd</code>.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_fd_add_full" class="symbol" href="func.unix_fd_add_full.html">unix_fd_add_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets a function to be called when the <span class="caps">IO</span> condition, as specified by
<code>condition</code> becomes true for <code>fd</code>.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_fd_source_new" class="symbol" href="func.unix_fd_source_new.html">unix_fd_source_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a <code>GSource</code> to watch for a particular I/O condition on a file&nbsp;descriptor.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_get_passwd_entry" class="symbol" href="func.unix_get_passwd_entry.html">unix_get_passwd_entry</a></td>
            
            <td class="docblock-summary">
            <p>Get the <code>passwd</code> file entry for the given <code>user_name</code> using <code>getpwnam_r()</code>.
This can fail if the given <code>user_name</code> doesn’t&nbsp;exist.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_open_pipe" class="symbol" href="func.unix_open_pipe.html">unix_open_pipe</a></td>
            
            <td class="docblock-summary">
            <p>Similar to the <span class="caps">UNIX</span> <code>pipe()</code> call, but on modern systems like Linux
uses the <code>pipe2()</code> system call, which atomically creates a pipe with
the configured&nbsp;flags.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_set_fd_nonblocking" class="symbol" href="func.unix_set_fd_nonblocking.html">unix_set_fd_nonblocking</a></td>
            
            <td class="docblock-summary">
            <p>Control the non-blocking state of the given file descriptor,
according to <code>nonblock</code>. On most systems this uses <code>O_NONBLOCK</code>, but
on some older ones may use <code>O_NDELAY</code>.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_signal_add" class="symbol" href="func.unix_signal_add.html">unix_signal_add</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function for g_unix_signal_source_new(), which
attaches to the default <code>GMainContext</code>.  You can remove the watch
using&nbsp;g_source_remove().</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_signal_add_full" class="symbol" href="func.unix_signal_add_full.html">unix_signal_add_full</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function for g_unix_signal_source_new(), which
attaches to the default <code>GMainContext</code>.  You can remove the watch
using&nbsp;g_source_remove().</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unix_signal_source_new" class="symbol" href="func.unix_signal_source_new.html">unix_signal_source_new</a></td>
            
            <td class="docblock-summary">
            <p>Create a <code>GSource</code> that will be dispatched upon delivery of the <span class="caps">UNIX</span>
signal <code>signum</code>.  In GLib versions before 2.36, only <code>SIGHUP</code>, <code>SIGINT</code>,
<code>SIGTERM</code> can be monitored.  In GLib 2.36, <code>SIGUSR1</code> and <code>SIGUSR2</code>
were added. In GLib 2.54, <code>SIGWINCH</code> was&nbsp;added.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unlink" class="symbol" href="func.unlink.html">unlink</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>unlink()</code> function. The <code>unlink()</code> function
deletes a name from the filesystem. If this was the last link to the
file and no processes have it opened, the diskspace occupied by the
file is&nbsp;freed.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="unsetenv" class="symbol" href="func.unsetenv.html">unsetenv</a></td>
            
            <td class="docblock-summary">
            <p>Removes an environment variable from the&nbsp;environment.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="usleep" class="symbol" href="func.usleep.html">usleep</a></td>
            
            <td class="docblock-summary">
            <p>Pauses the current thread for the given number of&nbsp;microseconds.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf16_to_ucs4" class="symbol" href="func.utf16_to_ucs4.html">utf16_to_ucs4</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UTF</span>-16 to <span class="caps">UCS</span>-4. The result will be&nbsp;nul-terminated.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf16_to_utf8" class="symbol" href="func.utf16_to_utf8.html">utf16_to_utf8</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UTF</span>-16 to <span class="caps">UTF</span>-8. The result will be
terminated with a 0&nbsp;byte.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_casefold" class="symbol" href="func.utf8_casefold.html">utf8_casefold</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string into a form that is independent of case. The
result will not correspond to any particular case, but can be
compared for equality or ordered with the results of calling
<code>g_utf8_casefold()</code> on other&nbsp;strings.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_collate" class="symbol" href="func.utf8_collate.html">utf8_collate</a></td>
            
            <td class="docblock-summary">
            <p>Compares two strings for ordering using the linguistically
correct rules for the [current locale][setlocale].
When sorting a large number of strings, it will be significantly
faster to obtain collation keys with <code>g_utf8_collate_key()</code> and
compare the keys with <code>strcmp()</code> when sorting instead of sorting
the original&nbsp;strings.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_collate_key" class="symbol" href="func.utf8_collate_key.html">utf8_collate_key</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string into a collation key that can be compared
with other collation keys produced by the same function using&nbsp;strcmp().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_collate_key_for_filename" class="symbol" href="func.utf8_collate_key_for_filename.html">utf8_collate_key_for_filename</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string into a collation key that can be compared
with other collation keys produced by the same function using&nbsp;strcmp().</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_find_next_char" class="symbol" href="func.utf8_find_next_char.html">utf8_find_next_char</a></td>
            
            <td class="docblock-summary">
            <p>Finds the start of the next <span class="caps">UTF</span>-8 character in the string after <code>p</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_find_prev_char" class="symbol" href="func.utf8_find_prev_char.html">utf8_find_prev_char</a></td>
            
            <td class="docblock-summary">
            <p>Given a position <code>p</code> with a <span class="caps">UTF</span>-8 encoded string <code>str</code>, find the start
of the previous <span class="caps">UTF</span>-8 character starting before <code>p</code>. Returns <code>NULL</code> if no
<span class="caps">UTF</span>-8 characters are present in <code>str</code> before <code>p</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_get_char" class="symbol" href="func.utf8_get_char.html">utf8_get_char</a></td>
            
            <td class="docblock-summary">
            <p>Converts a sequence of bytes encoded as <span class="caps">UTF</span>-8 to a Unicode&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_get_char_validated" class="symbol" href="func.utf8_get_char_validated.html">utf8_get_char_validated</a></td>
            
            <td class="docblock-summary">
            <p>Convert a sequence of bytes encoded as <span class="caps">UTF</span>-8 to a Unicode character.
This function checks for incomplete characters, for invalid characters
such as characters that are out of the range of Unicode, and for
overlong encodings of valid&nbsp;characters.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_make_valid" class="symbol" href="func.utf8_make_valid.html">utf8_make_valid</a></td>
            
            <td class="docblock-summary">
            <p>If the provided string is valid <span class="caps">UTF</span>-8, return a copy of it. If not,
return a copy in which bytes that could not be interpreted as valid Unicode
are replaced with the Unicode replacement character (U+<span class="caps">FFFD</span>).</p>
            <p><span class="emblem available">since: 2.52</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_normalize" class="symbol" href="func.utf8_normalize.html">utf8_normalize</a></td>
            
            <td class="docblock-summary">
            <p>Converts a string into canonical form, standardizing
such issues as whether a character with an accent
is represented as a base character and combining
accent or as a single precomposed character. The
string has to be valid <span class="caps">UTF</span>-8, otherwise <code>NULL</code> is
returned. You should generally call <code>g_utf8_normalize()</code>
before comparing two Unicode&nbsp;strings.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_offset_to_pointer" class="symbol" href="func.utf8_offset_to_pointer.html">utf8_offset_to_pointer</a></td>
            
            <td class="docblock-summary">
            <p>Converts from an integer character offset to a pointer to a position
within the&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_pointer_to_offset" class="symbol" href="func.utf8_pointer_to_offset.html">utf8_pointer_to_offset</a></td>
            
            <td class="docblock-summary">
            <p>Converts from a pointer to position within a string to an integer
character&nbsp;offset.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_prev_char" class="symbol" href="func.utf8_prev_char.html">utf8_prev_char</a></td>
            
            <td class="docblock-summary">
            <p>Finds the previous <span class="caps">UTF</span>-8 character in the string before <code>p</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strchr" class="symbol" href="func.utf8_strchr.html">utf8_strchr</a></td>
            
            <td class="docblock-summary">
            <p>Finds the leftmost occurrence of the given Unicode character
in a <span class="caps">UTF</span>-8 encoded string, while limiting the search to <code>len</code> bytes.
If <code>len</code> is -1, allow unbounded&nbsp;search.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strdown" class="symbol" href="func.utf8_strdown.html">utf8_strdown</a></td>
            
            <td class="docblock-summary">
            <p>Converts all Unicode characters in the string that have a case
to lowercase. The exact manner that this is done depends
on the current locale, and may result in the number of
characters in the string&nbsp;changing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strlen" class="symbol" href="func.utf8_strlen.html">utf8_strlen</a></td>
            
            <td class="docblock-summary">
            <p>Computes the length of the string in characters, not including
the terminating nul character. If the <code>max</code><span class="quo">&#8216;</span>th byte falls in the
middle of a character, the last (partial) character is not&nbsp;counted.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strncpy" class="symbol" href="func.utf8_strncpy.html">utf8_strncpy</a></td>
            
            <td class="docblock-summary">
            <p>Like the standard C <code>strncpy()</code> function, but copies a given number
of characters instead of a given number of bytes. The <code>src</code> string
must be valid <span class="caps">UTF</span>-8 encoded text. (Use <code>g_utf8_validate()</code> on all
text before trying to use <span class="caps">UTF</span>-8 utility functions with&nbsp;it.)</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strrchr" class="symbol" href="func.utf8_strrchr.html">utf8_strrchr</a></td>
            
            <td class="docblock-summary">
            <p>Find the rightmost occurrence of the given Unicode character
in a <span class="caps">UTF</span>-8 encoded string, while limiting the search to <code>len</code> bytes.
If <code>len</code> is -1, allow unbounded&nbsp;search.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strreverse" class="symbol" href="func.utf8_strreverse.html">utf8_strreverse</a></td>
            
            <td class="docblock-summary">
            <p>Reverses a <span class="caps">UTF</span>-8 string. <code>str</code> must be valid <span class="caps">UTF</span>-8 encoded text.
(Use <code>g_utf8_validate()</code> on all text before trying to use <span class="caps">UTF</span>-8
utility functions with&nbsp;it.)</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_strup" class="symbol" href="func.utf8_strup.html">utf8_strup</a></td>
            
            <td class="docblock-summary">
            <p>Converts all Unicode characters in the string that have a case
to uppercase. The exact manner that this is done depends
on the current locale, and may result in the number of
characters in the string increasing. (For instance, the
German ess-zet will be changed to <span class="caps">SS</span>.)</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_substring" class="symbol" href="func.utf8_substring.html">utf8_substring</a></td>
            
            <td class="docblock-summary">
            <p>Copies a substring out of a <span class="caps">UTF</span>-8 encoded string.
The substring will contain <code>end_pos</code> - <code>start_pos</code> characters.</p>
            <p><span class="emblem available">since: 2.30</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_to_ucs4" class="symbol" href="func.utf8_to_ucs4.html">utf8_to_ucs4</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UTF</span>-8 to a 32-bit fixed width
representation as <span class="caps">UCS</span>-4. A trailing 0 character will be added to the
string after the converted&nbsp;text.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_to_ucs4_fast" class="symbol" href="func.utf8_to_ucs4_fast.html">utf8_to_ucs4_fast</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UTF</span>-8 to a 32-bit fixed width
representation as <span class="caps">UCS</span>-4, assuming valid <span class="caps">UTF</span>-8 input.
This function is roughly twice as fast as <code>g_utf8_to_ucs4()</code>
but does no error checking on the input. A trailing 0 character
will be added to the string after the converted&nbsp;text.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_to_utf16" class="symbol" href="func.utf8_to_utf16.html">utf8_to_utf16</a></td>
            
            <td class="docblock-summary">
            <p>Convert a string from <span class="caps">UTF</span>-8 to <span class="caps">UTF</span>-16. A 0 character will be
added to the result after the converted&nbsp;text.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_truncate_middle" class="symbol" href="func.utf8_truncate_middle.html">utf8_truncate_middle</a></td>
            
            <td class="docblock-summary">
            <p>Cuts off the middle of the string, preserving half of <code>truncate_length</code>
characters at the beginning and half at the&nbsp;end.</p>
            <p><span class="emblem available">since: 2.78</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_validate" class="symbol" href="func.utf8_validate.html">utf8_validate</a></td>
            
            <td class="docblock-summary">
            <p>Validates <span class="caps">UTF</span>-8 encoded text. <code>str</code> is the text to validate;
if <code>str</code> is nul-terminated, then <code>max_len</code> can be -1, otherwise
<code>max_len</code> should be the number of bytes to validate.
If <code>end</code> is non-<code>NULL</code>, then the end of the valid range
will be stored there (i.e. the start of the first invalid
character if some bytes were invalid, or the end of the text
being validated&nbsp;otherwise).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_validate_len" class="symbol" href="func.utf8_validate_len.html">utf8_validate_len</a></td>
            
            <td class="docblock-summary">
            <p>Validates <span class="caps">UTF</span>-8 encoded&nbsp;text.</p>
            <p><span class="emblem available">since: 2.60</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utime" class="symbol" href="func.utime.html">utime</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>utime()</code> function. The <code>utime()</code> function
sets the access and modification timestamps of a&nbsp;file.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uuid_string_is_valid" class="symbol" href="func.uuid_string_is_valid.html">uuid_string_is_valid</a></td>
            
            <td class="docblock-summary">
            <p>Parses the string <code>str</code> and verify if it is a <span class="caps">UUID</span>.</p>
            <p><span class="emblem available">since: 2.52</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uuid_string_random" class="symbol" href="func.uuid_string_random.html">uuid_string_random</a></td>
            
            <td class="docblock-summary">
            <p>Generates a random <span class="caps">UUID</span> (<span class="caps">RFC</span> 4122 version 4) as a string. It has the same
randomness guarantees as <code>GRand</code>, so must not be used for cryptographic
purposes such as key generation, nonces, salts or one-time&nbsp;pads.</p>
            <p><span class="emblem available">since: 2.52</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="variant_get_gtype" class="symbol" href="func.variant_get_gtype.html">variant_get_gtype</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="vasprintf" class="symbol" href="func.vasprintf.html">vasprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the <span class="caps">GNU</span> <code>vasprintf()</code> function which supports
positional parameters, as specified in the Single Unix Specification.
This function is similar to <code>g_vsprintf()</code>, except that it allocates a
string to hold the output, instead of putting the output in a buffer
you allocate in&nbsp;advance.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="vfprintf" class="symbol" href="func.vfprintf.html">vfprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>fprintf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="vprintf" class="symbol" href="func.vprintf.html">vprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>vprintf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="vsnprintf" class="symbol" href="func.vsnprintf.html">vsnprintf</a></td>
            
            <td class="docblock-summary">
            <p>A safer form of the standard <code>vsprintf()</code> function. The output is guaranteed
to not exceed <code>n</code> characters (including the terminating nul character), so
it is easy to ensure that a buffer overflow cannot&nbsp;occur.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="vsprintf" class="symbol" href="func.vsprintf.html">vsprintf</a></td>
            
            <td class="docblock-summary">
            <p>An implementation of the standard <code>vsprintf()</code> function which supports
positional parameters, as specified in the Single Unix&nbsp;Specification.</p>
            <p><span class="emblem available">since: 2.2</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="warn_message" class="symbol" href="func.warn_message.html">warn_message</a></td>
            
            <td class="docblock-summary">
            <p>Internal function used to print messages from the public <code>g_warn_if_reached()</code>
and <code>g_warn_if_fail()</code> macros.</p>
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="function_macros" class="section-header" style="display:flex;">
        Function Macros
        <a href="#function_macros" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="abort" class="symbol" href="func.abort.html">abort</a></td>
            
            <td class="docblock-summary">
            <p>A wrapper for the <span class="caps">POSIX</span> <code>abort()</code> function.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ALIGNOF" class="symbol" href="func.ALIGNOF.html">ALIGNOF</a></td>
            
            <td class="docblock-summary">
            <p>Return the minimal alignment required by the platform <span class="caps">ABI</span> for values of the given
type. The address of a variable or struct member of the given type must always be
a multiple of this alignment. For example, most platforms require int variables
to be aligned at a 4-byte boundary, so <code>G_ALIGNOF (int)</code> is 4 on most&nbsp;platforms.</p>
            <p><span class="emblem available">since: 2.60</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="alloca" class="symbol" href="func.alloca.html">alloca</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>size</code> bytes on the stack; these bytes will be freed when the current
stack frame is cleaned up. This macro essentially just wraps the <code>alloca()</code>
function present on most <span class="caps">UNIX</span> variants.
Thus it provides the same advantages and pitfalls as&nbsp;alloca():</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="alloca0" class="symbol" href="func.alloca0.html">alloca0</a></td>
            
            <td class="docblock-summary">
            <p>Wraps <code>g_alloca()</code> and initializes allocated memory to zeroes.
If <code>size</code> is <code>0</code> it returns <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="APPROX_VALUE" class="symbol" href="func.APPROX_VALUE.html">APPROX_VALUE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="array_append_val" class="symbol" href="func.array_append_val.html">array_append_val</a></td>
            
            <td class="docblock-summary">
            <p>Adds the value on to the end of the array. The array will grow in
size automatically if&nbsp;necessary.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="array_index" class="symbol" href="func.array_index.html">array_index</a></td>
            
            <td class="docblock-summary">
            <p>Returns the element of a <code>GArray</code> at the given index. The return
value is cast to the given type. This is the main way to read or write an
element in a <code>GArray</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="array_insert_val" class="symbol" href="func.array_insert_val.html">array_insert_val</a></td>
            
            <td class="docblock-summary">
            <p>Inserts an element into an array at the given&nbsp;index.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="array_prepend_val" class="symbol" href="func.array_prepend_val.html">array_prepend_val</a></td>
            
            <td class="docblock-summary">
            <p>Adds the value on to the start of the array. The array will grow in
size automatically if&nbsp;necessary.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isalnum" class="symbol" href="func.ascii_isalnum.html">ascii_isalnum</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is&nbsp;alphanumeric.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isalpha" class="symbol" href="func.ascii_isalpha.html">ascii_isalpha</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is alphabetic (i.e. a&nbsp;letter).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_iscntrl" class="symbol" href="func.ascii_iscntrl.html">ascii_iscntrl</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a control&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isdigit" class="symbol" href="func.ascii_isdigit.html">ascii_isdigit</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is digit&nbsp;(0-9).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isgraph" class="symbol" href="func.ascii_isgraph.html">ascii_isgraph</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a printing character and not a&nbsp;space.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_islower" class="symbol" href="func.ascii_islower.html">ascii_islower</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is an <span class="caps">ASCII</span> lower case&nbsp;letter.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isprint" class="symbol" href="func.ascii_isprint.html">ascii_isprint</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a printing&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_ispunct" class="symbol" href="func.ascii_ispunct.html">ascii_ispunct</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a punctuation&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isspace" class="symbol" href="func.ascii_isspace.html">ascii_isspace</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a white-space&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isupper" class="symbol" href="func.ascii_isupper.html">ascii_isupper</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is an <span class="caps">ASCII</span> upper case&nbsp;letter.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ascii_isxdigit" class="symbol" href="func.ascii_isxdigit.html">ascii_isxdigit</a></td>
            
            <td class="docblock-summary">
            <p>Determines whether a character is a hexadecimal-digit&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert" class="symbol" href="func.assert.html">assert</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to terminate the application if the assertion
fails. If the assertion fails (i.e. the expression is not true),
an error message is logged and the application is&nbsp;terminated.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpfloat" class="symbol" href="func.assert_cmpfloat.html">assert_cmpfloat</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two floating point&nbsp;numbers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpfloat_with_epsilon" class="symbol" href="func.assert_cmpfloat_with_epsilon.html">assert_cmpfloat_with_epsilon</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two floating point numbers within an&nbsp;epsilon.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmphex" class="symbol" href="func.assert_cmphex.html">assert_cmphex</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare to unsigned&nbsp;integers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpint" class="symbol" href="func.assert_cmpint.html">assert_cmpint</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two&nbsp;integers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpmem" class="symbol" href="func.assert_cmpmem.html">assert_cmpmem</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare memory regions. If the comparison fails,
an error message is logged and the application is either terminated
or the testcase marked as&nbsp;failed.</p>
            <p><span class="emblem available">since: 2.46</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpstr" class="symbol" href="func.assert_cmpstr.html">assert_cmpstr</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two strings. If the comparison fails,
an error message is logged and the application is either terminated
or the testcase marked as failed.
The strings are compared using&nbsp;g_strcmp0().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpstrv" class="symbol" href="func.assert_cmpstrv.html">assert_cmpstrv</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check if two <code>NULL</code>-terminated string arrays (i.e. 2
<code>GStrv</code>) are equal. If they are not equal, an error message is logged and the
application is either terminated or the testcase marked as failed.
If both arrays are <code>NULL</code>, the check passes. If one array is <code>NULL</code> but the
other is not, an error message is&nbsp;logged.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpuint" class="symbol" href="func.assert_cmpuint.html">assert_cmpuint</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two unsigned&nbsp;integers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_cmpvariant" class="symbol" href="func.assert_cmpvariant.html">assert_cmpvariant</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to compare two <code>GVariants</code>. If the comparison fails,
an error message is logged and the application is either terminated
or the testcase marked as failed. The variants are compared using&nbsp;g_variant_equal().</p>
            <p><span class="emblem available">since: 2.60</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_error" class="symbol" href="func.assert_error.html">assert_error</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check that a method has returned
the correct <code>GError</code>.</p>
            <p><span class="emblem available">since: 2.20</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_false" class="symbol" href="func.assert_false.html">assert_false</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check an expression is&nbsp;false.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_no_errno" class="symbol" href="func.assert_no_errno.html">assert_no_errno</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check that an expression has a non-negative return value,
as used by traditional <span class="caps">POSIX</span> functions (such as <code>rmdir()</code>) to indicate&nbsp;success.</p>
            <p><span class="emblem available">since: 2.66</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_no_error" class="symbol" href="func.assert_no_error.html">assert_no_error</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check that a <code>GError</code> is not&nbsp;set.</p>
            <p><span class="emblem available">since: 2.20</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_nonnull" class="symbol" href="func.assert_nonnull.html">assert_nonnull</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check an expression is not <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_not_reached" class="symbol" href="func.assert_not_reached.html">assert_not_reached</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to terminate the application if it is ever
reached. If it is reached, an error message is logged and the
application is&nbsp;terminated.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_null" class="symbol" href="func.assert_null.html">assert_null</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check an expression is <code>NULL</code>.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="assert_true" class="symbol" href="func.assert_true.html">assert_true</a></td>
            
            <td class="docblock-summary">
            <p>Debugging macro to check that an expression is&nbsp;true.</p>
            <p><span class="emblem available">since: 2.38</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ATEXIT" class="symbol" href="func.ATEXIT.html">ATEXIT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_new" class="symbol" href="func.atomic_rc_box_new.html">atomic_rc_box_new</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate atomically reference counted
data with the size of the given <code>type</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="atomic_rc_box_new0" class="symbol" href="func.atomic_rc_box_new0.html">atomic_rc_box_new0</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate atomically reference counted
data with the size of the given <code>type</code>, and set its contents
to&nbsp;zero.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="AUTO_LOCK" class="symbol" href="func.AUTO_LOCK.html">AUTO_LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Works like <code>G_MUTEX_AUTO_LOCK()</code>, but for a lock defined with
<code>G_LOCK_DEFINE()</code>.</p>
            <p><span class="emblem available">since: 2.80</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="BREAKPOINT" class="symbol" href="func.BREAKPOINT.html">BREAKPOINT</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a breakpoint instruction into the&nbsp;code.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="C_STD_CHECK_VERSION" class="symbol" href="func.C_STD_CHECK_VERSION.html">C_STD_CHECK_VERSION</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CHECK_VERSION" class="symbol" href="func.CHECK_VERSION.html">CHECK_VERSION</a></td>
            
            <td class="docblock-summary">
            <p>Checks whether the version of the GLib library that is being compiled
against is greater than or equal to the given&nbsp;one.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="chunk_free" class="symbol" href="func.chunk_free.html">chunk_free</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="chunk_new" class="symbol" href="func.chunk_new.html">chunk_new</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="chunk_new0" class="symbol" href="func.chunk_new0.html">chunk_new0</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="critical" class="symbol" href="func.critical.html">critical</a></td>
            
            <td class="docblock-summary">
            <p>Logs a ‘critical warning’ (<code>GLogLevelFlags</code>).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CXX_STD_CHECK_VERSION" class="symbol" href="func.CXX_STD_CHECK_VERSION.html">CXX_STD_CHECK_VERSION</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_remove_data" class="symbol" href="func.datalist_id_remove_data.html">datalist_id_remove_data</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element, using its <code>GQuark</code> identifier.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_id_set_data" class="symbol" href="func.datalist_id_set_data.html">datalist_id_set_data</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data corresponding to the given <code>GQuark</code> id. Any previous
data with the same key is removed, and its destroy function is&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_remove_data" class="symbol" href="func.datalist_remove_data.html">datalist_remove_data</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element using its string identifier. The data element&#8217;s
destroy function is called if it has been&nbsp;set.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_remove_no_notify" class="symbol" href="func.datalist_remove_no_notify.html">datalist_remove_no_notify</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element, without calling its destroy&nbsp;notifier.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_set_data" class="symbol" href="func.datalist_set_data.html">datalist_set_data</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data element corresponding to the given string&nbsp;identifier.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="datalist_set_data_full" class="symbol" href="func.datalist_set_data_full.html">datalist_set_data_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data element corresponding to the given string identifier,
and the function to be called when the data element is&nbsp;removed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_get_data" class="symbol" href="func.dataset_get_data.html">dataset_get_data</a></td>
            
            <td class="docblock-summary">
            <p>Gets the data element corresponding to a&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_id_remove_data" class="symbol" href="func.dataset_id_remove_data.html">dataset_id_remove_data</a></td>
            
            <td class="docblock-summary">
            <p>Removes a data element from a dataset. The data element&#8217;s destroy
function is called if it has been&nbsp;set.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_id_set_data" class="symbol" href="func.dataset_id_set_data.html">dataset_id_set_data</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data element associated with the given <code>GQuark</code> id. Any
previous data with the same key is removed, and its destroy function
is&nbsp;called.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_remove_data" class="symbol" href="func.dataset_remove_data.html">dataset_remove_data</a></td>
            
            <td class="docblock-summary">
            <p>Removes a data element corresponding to a string. Its destroy
function is called if it has been&nbsp;set.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_remove_no_notify" class="symbol" href="func.dataset_remove_no_notify.html">dataset_remove_no_notify</a></td>
            
            <td class="docblock-summary">
            <p>Removes an element, without calling its destroy&nbsp;notifier.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_set_data" class="symbol" href="func.dataset_set_data.html">dataset_set_data</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data corresponding to the given string&nbsp;identifier.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="dataset_set_data_full" class="symbol" href="func.dataset_set_data_full.html">dataset_set_data_full</a></td>
            
            <td class="docblock-summary">
            <p>Sets the data corresponding to the given string identifier, and the
function to call when the data element is&nbsp;destroyed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="debug" class="symbol" href="func.debug.html">debug</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function/macro to log a debug&nbsp;message.</p>
            <p><span class="emblem available">since: 2.6</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEBUG_HERE" class="symbol" href="func.DEBUG_HERE.html">DEBUG_HERE</a></td>
            
            <td class="docblock-summary">
            <p>A convenience form of g_log_structured(), recommended to be added to
functions when debugging. It prints the current monotonic time and the code
location using <code>G_STRLOC</code>.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEFINE_AUTO_CLEANUP_CLEAR_FUNC" class="symbol" href="func.DEFINE_AUTO_CLEANUP_CLEAR_FUNC.html">DEFINE_AUTO_CLEANUP_CLEAR_FUNC</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEFINE_AUTO_CLEANUP_FREE_FUNC" class="symbol" href="func.DEFINE_AUTO_CLEANUP_FREE_FUNC.html">DEFINE_AUTO_CLEANUP_FREE_FUNC</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEFINE_AUTOPTR_CLEANUP_FUNC" class="symbol" href="func.DEFINE_AUTOPTR_CLEANUP_FUNC.html">DEFINE_AUTOPTR_CLEANUP_FUNC</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEFINE_EXTENDED_ERROR" class="symbol" href="func.DEFINE_EXTENDED_ERROR.html">DEFINE_EXTENDED_ERROR</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro which defines two functions. First, returning
the <code>GQuark</code> for the extended error type <code>ErrorType</code>; it is called
<code>error_type_quark()</code>. Second, returning the private data from a
passed <code>GError</code>; it is called <code>error_type_get_private()</code>.</p>
            <p><span class="emblem available">since: 2.68</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEFINE_QUARK" class="symbol" href="func.DEFINE_QUARK.html">DEFINE_QUARK</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro which defines a function returning the
<code>GQuark</code> for the name <code>QN</code>. The function will be named
<code>q_n_quark</code>().</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEPRECATED_ENUMERATOR_FOR" class="symbol" href="func.DEPRECATED_ENUMERATOR_FOR.html">DEPRECATED_ENUMERATOR_FOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEPRECATED_FOR" class="symbol" href="func.DEPRECATED_FOR.html">DEPRECATED_FOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEPRECATED_MACRO_FOR" class="symbol" href="func.DEPRECATED_MACRO_FOR.html">DEPRECATED_MACRO_FOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DEPRECATED_TYPE_FOR" class="symbol" href="func.DEPRECATED_TYPE_FOR.html">DEPRECATED_TYPE_FOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ENCODE_VERSION" class="symbol" href="func.ENCODE_VERSION.html">ENCODE_VERSION</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="error" class="symbol" href="func.error.html">error</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function/macro to log an error&nbsp;message.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT64_CONSTANT" class="symbol" href="func.GINT64_CONSTANT.html">GINT64_CONSTANT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_ALLOC_SIZE" class="symbol" href="func.GNUC_ALLOC_SIZE.html">GNUC_ALLOC_SIZE</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>alloc_size</code> function attribute if the compiler
is a new enough gcc. This attribute tells the compiler that the
function returns a pointer to memory of a size that is specified
by the <code>xth</code> function&nbsp;parameter.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_ALLOC_SIZE2" class="symbol" href="func.GNUC_ALLOC_SIZE2.html">GNUC_ALLOC_SIZE2</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>alloc_size</code> function attribute if the compiler is a
new enough gcc. This attribute tells the compiler that the function returns
a pointer to memory of a size that is specified by the product of two
function&nbsp;parameters.</p>
            <p><span class="emblem available">since: 2.18</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_CHECK_VERSION" class="symbol" href="func.GNUC_CHECK_VERSION.html">GNUC_CHECK_VERSION</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_DEPRECATED_FOR" class="symbol" href="func.GNUC_DEPRECATED_FOR.html">GNUC_DEPRECATED_FOR</a></td>
            
            <td class="docblock-summary">
            <p>Like <code>G_GNUC_DEPRECATED</code>, but names the intended replacement for the
deprecated symbol if the version of gcc in use is new enough to support
custom deprecation&nbsp;messages.</p>
            <p><span class="emblem available">since: 2.26</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_FORMAT" class="symbol" href="func.GNUC_FORMAT.html">GNUC_FORMAT</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>format_arg</code> function attribute if the compiler
is gcc. This function attribute specifies that a function takes a
format string for a <code>printf()</code>, <code>scanf()</code>, <code>strftime()</code> or <code>strfmon()</code> style
function and modifies it, so that the result can be passed to a <code>printf()</code>,
<code>scanf()</code>, <code>strftime()</code> or <code>strfmon()</code> style function (with the remaining
arguments to the format function the same as they would have been
for the unmodified&nbsp;string).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_PRINTF" class="symbol" href="func.GNUC_PRINTF.html">GNUC_PRINTF</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>format</code> function attribute if the compiler is gcc.
This is used for declaring functions which take a variable number of
arguments, with the same syntax as <code>printf()</code>. It allows the compiler
to type-check the arguments passed to the&nbsp;function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_SCANF" class="symbol" href="func.GNUC_SCANF.html">GNUC_SCANF</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>format</code> function attribute if the compiler is gcc.
This is used for declaring functions which take a variable number of
arguments, with the same syntax as <code>scanf()</code>. It allows the compiler
to type-check the arguments passed to the&nbsp;function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_STRFTIME" class="symbol" href="func.GNUC_STRFTIME.html">GNUC_STRFTIME</a></td>
            
            <td class="docblock-summary">
            <p>Expands to the <span class="caps">GNU</span> C <code>strftime</code> format function attribute if the compiler
is gcc. This is used for declaring functions which take a format argument
which is passed to <code>strftime()</code> or an <span class="caps">API</span> implementing its formats. It allows
the compiler check the format passed to the&nbsp;function.</p>
            <p><span class="emblem available">since: 2.60</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GOFFSET_CONSTANT" class="symbol" href="func.GOFFSET_CONSTANT.html">GOFFSET_CONSTANT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GUINT64_CONSTANT" class="symbol" href="func.GUINT64_CONSTANT.html">GUINT64_CONSTANT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hash_table_freeze" class="symbol" href="func.hash_table_freeze.html">hash_table_freeze</a></td>
            
            <td class="docblock-summary">
            <p>This function is deprecated and will be removed in the next major
release of GLib. It does&nbsp;nothing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hash_table_thaw" class="symbol" href="func.hash_table_thaw.html">hash_table_thaw</a></td>
            
            <td class="docblock-summary">
            <p>This function is deprecated and will be removed in the next major
release of GLib. It does&nbsp;nothing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HOOK_ACTIVE" class="symbol" href="func.HOOK_ACTIVE.html">HOOK_ACTIVE</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if the <code>GHook</code> is active, which is normally the case
until the <code>GHook</code> is&nbsp;destroyed.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="hook_append" class="symbol" href="func.hook_append.html">hook_append</a></td>
            
            <td class="docblock-summary">
            <p>Appends a <code>GHook</code> onto the end of a <code>GHookList</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HOOK_FLAGS" class="symbol" href="func.HOOK_FLAGS.html">HOOK_FLAGS</a></td>
            
            <td class="docblock-summary">
            <p>Gets the flags of a&nbsp;hook.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HOOK_IN_CALL" class="symbol" href="func.HOOK_IN_CALL.html">HOOK_IN_CALL</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if the <code>GHook</code> function is currently&nbsp;executing.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="htonl" class="symbol" href="func.htonl.html">htonl</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="htons" class="symbol" href="func.htons.html">htons</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="info" class="symbol" href="func.info.html">info</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function/macro to log an informational&nbsp;message.</p>
            <p><span class="emblem available">since: 2.40</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LIKELY" class="symbol" href="func.LIKELY.html">LIKELY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="list_next" class="symbol" href="func.list_next.html">list_next</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to get the next element in a <code>GList</code>.
Note that it is considered perfectly acceptable to access
<code>list</code>-&gt;next&nbsp;directly.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="list_previous" class="symbol" href="func.list_previous.html">list_previous</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to get the previous element in a <code>GList</code>.
Note that it is considered perfectly acceptable to access
<code>list</code>-&gt;prev&nbsp;directly.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOCK" class="symbol" href="func.LOCK.html">LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_lock(), but for a lock defined with
<code>G_LOCK_DEFINE</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOCK_DEFINE" class="symbol" href="func.LOCK_DEFINE.html">LOCK_DEFINE</a></td>
            
            <td class="docblock-summary">
            <p>The <code>G_LOCK_</code> macros provide a convenient interface to <code>GMutex</code>.
<code>G_LOCK_DEFINE</code> defines a lock. It can appear in any place where
variable definitions may appear in programs, i.e. in the first block
of a function or outside of functions. The <code>name</code> parameter will be
mangled to get the name of the <code>GMutex</code>. This means that you
can use names of existing variables as the parameter - e.g. the name
of the variable you intend to protect with the lock. Look at our
<code>give_me_next_number()</code> example using the <code>G_LOCK</code> macros:</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOCK_DEFINE_STATIC" class="symbol" href="func.LOCK_DEFINE_STATIC.html">LOCK_DEFINE_STATIC</a></td>
            
            <td class="docblock-summary">
            <p>This works like <code>G_LOCK_DEFINE</code>, but it creates a static&nbsp;object.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOCK_EXTERN" class="symbol" href="func.LOCK_EXTERN.html">LOCK_EXTERN</a></td>
            
            <td class="docblock-summary">
            <p>This declares a lock, that is defined with <code>G_LOCK_DEFINE</code> in another&nbsp;module.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOCK_NAME" class="symbol" href="func.LOCK_NAME.html">LOCK_NAME</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_destroy" class="symbol" href="func.main_destroy.html">main_destroy</a></td>
            
            <td class="docblock-summary">
            <p>Frees the memory allocated for the <code>GMainLoop</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_is_running" class="symbol" href="func.main_is_running.html">main_is_running</a></td>
            
            <td class="docblock-summary">
            <p>Checks if the main loop is&nbsp;running.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_iteration" class="symbol" href="func.main_iteration.html">main_iteration</a></td>
            
            <td class="docblock-summary">
            <p>Runs a single iteration for the default <code>GMainContext</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_new" class="symbol" href="func.main_new.html">main_new</a></td>
            
            <td class="docblock-summary">
            <p>Creates a new <code>GMainLoop</code> for th default main&nbsp;context.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_pending" class="symbol" href="func.main_pending.html">main_pending</a></td>
            
            <td class="docblock-summary">
            <p>Checks if any events are pending for the default <code>GMainContext</code>
(i.e. ready to be&nbsp;processed).</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_quit" class="symbol" href="func.main_quit.html">main_quit</a></td>
            
            <td class="docblock-summary">
            <p>Stops the <code>GMainLoop</code>.
If <code>g_main_run()</code> was called to run the <code>GMainLoop</code>, it will now&nbsp;return.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_run" class="symbol" href="func.main_run.html">main_run</a></td>
            
            <td class="docblock-summary">
            <p>Runs a main loop until it stops&nbsp;running.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="main_set_poll_func" class="symbol" href="func.main_set_poll_func.html">main_set_poll_func</a></td>
            
            <td class="docblock-summary">
            <p>Sets the function to use for the handle polling of file descriptors
for the default main&nbsp;context.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="mem_chunk_create" class="symbol" href="func.mem_chunk_create.html">mem_chunk_create</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="memmove" class="symbol" href="func.memmove.html">memmove</a></td>
            
            <td class="docblock-summary">
            <p>Copies a block of memory <code>len</code> bytes long, from <code>src</code> to <code>dest</code>.
The source and destination areas may&nbsp;overlap.</p>
            <p><span class="emblem deprecated">deprecated: 2.40</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="message" class="symbol" href="func.message.html">message</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function/macro to log a normal&nbsp;message.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MUTEX_AUTO_LOCK" class="symbol" href="func.MUTEX_AUTO_LOCK.html">MUTEX_AUTO_LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Declare a <code>GMutexLocker</code> variable with <code>g_autoptr()</code> and lock the
mutex. The mutex will be unlocked automatically when leaving the scope. The
variable is declared with <code>G_GNUC_UNUSED</code> to avoid compiler warning if it is
not used in the&nbsp;scope.</p>
            <p><span class="emblem available">since: 2.80.0</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="N_ELEMENTS" class="symbol" href="func.N_ELEMENTS.html">N_ELEMENTS</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="new" class="symbol" href="func.new.html">new</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>n_structs</code> elements of type <code>struct_type</code>.
The returned pointer is cast to a pointer to the given type.
If <code>n_structs</code> is 0 it returns <code>NULL</code>.
Care is taken to avoid overflow when calculating the size of the allocated&nbsp;block.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="new0" class="symbol" href="func.new0.html">new0</a></td>
            
            <td class="docblock-summary">
            <p>Allocates <code>n_structs</code> elements of type <code>struct_type</code>, initialized to 0&#8217;s.
The returned pointer is cast to a pointer to the given type.
If <code>n_structs</code> is 0 it returns <code>NULL</code>.
Care is taken to avoid overflow when calculating the size of the allocated&nbsp;block.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="newa" class="symbol" href="func.newa.html">newa</a></td>
            
            <td class="docblock-summary">
            <p>Wraps <code>g_alloca()</code> in a more typesafe&nbsp;manner.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="newa0" class="symbol" href="func.newa0.html">newa0</a></td>
            
            <td class="docblock-summary">
            <p>Wraps <code>g_alloca0()</code> in a more typesafe&nbsp;manner.</p>
            <p><span class="emblem available">since: 2.72</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_append" class="symbol" href="func.node_append.html">node_append</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a <code>GNode</code> as the last child of the given&nbsp;parent.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_append_data" class="symbol" href="func.node_append_data.html">node_append_data</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a new <code>GNode</code> as the last child of the given&nbsp;parent.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_first_child" class="symbol" href="func.node_first_child.html">node_first_child</a></td>
            
            <td class="docblock-summary">
            <p>Gets the first child of a <code>GNode</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_insert_data" class="symbol" href="func.node_insert_data.html">node_insert_data</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a new <code>GNode</code> at the given&nbsp;position.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_insert_data_after" class="symbol" href="func.node_insert_data_after.html">node_insert_data_after</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a new <code>GNode</code> after the given&nbsp;sibling.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_insert_data_before" class="symbol" href="func.node_insert_data_before.html">node_insert_data_before</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a new <code>GNode</code> before the given&nbsp;sibling.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_next_sibling" class="symbol" href="func.node_next_sibling.html">node_next_sibling</a></td>
            
            <td class="docblock-summary">
            <p>Gets the next sibling of a <code>GNode</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_prepend_data" class="symbol" href="func.node_prepend_data.html">node_prepend_data</a></td>
            
            <td class="docblock-summary">
            <p>Inserts a new <code>GNode</code> as the first child of the given&nbsp;parent.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="node_prev_sibling" class="symbol" href="func.node_prev_sibling.html">node_prev_sibling</a></td>
            
            <td class="docblock-summary">
            <p>Gets the previous sibling of a <code>GNode</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ntohl" class="symbol" href="func.ntohl.html">ntohl</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ntohs" class="symbol" href="func.ntohs.html">ntohs</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="once" class="symbol" href="func.once.html">once</a></td>
            
            <td class="docblock-summary">
            <p>The first call to this routine by a process with a given <code>GOnce</code>
struct calls <code>func</code> with the given argument. Thereafter, subsequent
calls to <code>g_once()</code>  with the same <code>GOnce</code> struct do not call <code>func</code>
again, but return the stored result of the first call. On return
from g_once(), the status of <code>once</code> will be <code>G_ONCE_STATUS_READY</code>.</p>
            <p><span class="emblem available">since: 2.4</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIVATE_INIT" class="symbol" href="func.PRIVATE_INIT.html">PRIVATE_INIT</a></td>
            
            <td class="docblock-summary">
            <p>A macro to assist with the static initialisation of a <code>GPrivate</code>.</p>
            <p><span class="emblem available">since: 2.32</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ptr_array_index" class="symbol" href="func.ptr_array_index.html">ptr_array_index</a></td>
            
            <td class="docblock-summary">
            <p>Returns the pointer at the given index of the pointer&nbsp;array.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rand_boolean" class="symbol" href="func.rand_boolean.html">rand_boolean</a></td>
            
            <td class="docblock-summary">
            <p>Returns a random #gboolean from <code>rand_</code>.
This corresponds to an unbiased coin&nbsp;toss.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="random_boolean" class="symbol" href="func.random_boolean.html">random_boolean</a></td>
            
            <td class="docblock-summary">
            <p>Returns a random #gboolean.
This corresponds to an unbiased coin&nbsp;toss.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_new" class="symbol" href="func.rc_box_new.html">rc_box_new</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate reference counted data with
the size of the given <code>type</code>.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="rc_box_new0" class="symbol" href="func.rc_box_new0.html">rc_box_new0</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate reference counted data with
the size of the given <code>type</code>, and set its contents to&nbsp;zero.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="REC_MUTEX_AUTO_LOCK" class="symbol" href="func.REC_MUTEX_AUTO_LOCK.html">REC_MUTEX_AUTO_LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Declare a <code>GRecMutexLocker</code> variable with <code>g_autoptr()</code> and lock the
mutex. The mutex will be unlocked automatically when leaving the scope. The
variable is declared with <code>G_GNUC_UNUSED</code> to avoid compiler warning if it is
not used in the&nbsp;scope.</p>
            <p><span class="emblem available">since: 2.80.0</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="renew" class="symbol" href="func.renew.html">renew</a></td>
            
            <td class="docblock-summary">
            <p>Reallocates the memory pointed to by <code>mem</code>, so that it now has space for
<code>n_structs</code> elements of type <code>struct_type</code>. It returns the new address of
the memory, which may have been moved.
Care is taken to avoid overflow when calculating the size of the allocated&nbsp;block.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="return_if_fail" class="symbol" href="func.return_if_fail.html">return_if_fail</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="return_if_reached" class="symbol" href="func.return_if_reached.html">return_if_reached</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="return_val_if_fail" class="symbol" href="func.return_val_if_fail.html">return_val_if_fail</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="return_val_if_reached" class="symbol" href="func.return_val_if_reached.html">return_val_if_reached</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RW_LOCK_READER_AUTO_LOCK" class="symbol" href="func.RW_LOCK_READER_AUTO_LOCK.html">RW_LOCK_READER_AUTO_LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Declare a <code>GRWLockReaderLocker</code> variable with <code>g_autoptr()</code> and lock
for reading. The mutex will be unlocked automatically when leaving the scope.
The variable is declared with <code>G_GNUC_UNUSED</code> to avoid compiler warning if it
is not used in the&nbsp;scope.</p>
            <p><span class="emblem available">since: 2.80.0</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="RW_LOCK_WRITER_AUTO_LOCK" class="symbol" href="func.RW_LOCK_WRITER_AUTO_LOCK.html">RW_LOCK_WRITER_AUTO_LOCK</a></td>
            
            <td class="docblock-summary">
            <p>Declare a <code>GRWLockWriterLocker</code> variable with <code>g_autoptr()</code> and lock
for writing. The mutex will be unlocked automatically when leaving the scope.
The variable is declared with <code>G_GNUC_UNUSED</code> to avoid compiler warning if it
is not used in the&nbsp;scope.</p>
            <p><span class="emblem available">since: 2.80.0</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="scanner_add_symbol" class="symbol" href="func.scanner_add_symbol.html">scanner_add_symbol</a></td>
            
            <td class="docblock-summary">
            <p>Adds a symbol to the default&nbsp;scope.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="scanner_foreach_symbol" class="symbol" href="func.scanner_foreach_symbol.html">scanner_foreach_symbol</a></td>
            
            <td class="docblock-summary">
            <p>Calls a function for each symbol in the default&nbsp;scope.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="scanner_freeze_symbol_table" class="symbol" href="func.scanner_freeze_symbol_table.html">scanner_freeze_symbol_table</a></td>
            
            <td class="docblock-summary">
            <p>There is no reason to use this macro, since it does&nbsp;nothing.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="scanner_remove_symbol" class="symbol" href="func.scanner_remove_symbol.html">scanner_remove_symbol</a></td>
            
            <td class="docblock-summary">
            <p>Removes a symbol from the default&nbsp;scope.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="scanner_thaw_symbol_table" class="symbol" href="func.scanner_thaw_symbol_table.html">scanner_thaw_symbol_table</a></td>
            
            <td class="docblock-summary">
            <p>There is no reason to use this macro, since it does&nbsp;nothing.</p>
            <p><span class="emblem deprecated">deprecated: 2.2</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="size_checked_add" class="symbol" href="func.size_checked_add.html">size_checked_add</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="size_checked_mul" class="symbol" href="func.size_checked_mul.html">size_checked_mul</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SIZEOF_MEMBER" class="symbol" href="func.SIZEOF_MEMBER.html">SIZEOF_MEMBER</a></td>
            
            <td class="docblock-summary">
            <p>Returns the size of <code>member</code> in the struct definition without having a
declared instance of <code>struct_type</code>.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_dup" class="symbol" href="func.slice_dup.html">slice_dup</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to duplicate a block of memory using
the slice&nbsp;allocator.</p>
            <p><span class="emblem available">since: 2.14</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_free" class="symbol" href="func.slice_free.html">slice_free</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to free a block of memory that has
been allocated from the slice&nbsp;allocator.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_free_chain" class="symbol" href="func.slice_free_chain.html">slice_free_chain</a></td>
            
            <td class="docblock-summary">
            <p>Frees a linked list of memory blocks of structure type <code>type</code>.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_new" class="symbol" href="func.slice_new.html">slice_new</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate a block of memory from the
slice&nbsp;allocator.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slice_new0" class="symbol" href="func.slice_new0.html">slice_new0</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to allocate a block of memory from the
slice allocator and set the memory to&nbsp;0.</p>
            <p><span class="emblem available">since: 2.10</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="slist_next" class="symbol" href="func.slist_next.html">slist_next</a></td>
            
            <td class="docblock-summary">
            <p>A convenience macro to get the next element in a <code>GSList</code>.
Note that it is considered perfectly acceptable to access
<code>slist</code>-&gt;next&nbsp;directly.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SOURCE_FUNC" class="symbol" href="func.SOURCE_FUNC.html">SOURCE_FUNC</a></td>
            
            <td class="docblock-summary">
            <p>Cast a function pointer to a <code>GSourceFunc</code>, suppressing warnings from <span class="caps">GCC</span> 8
onwards with <code>-Wextra</code> or <code>-Wcast-function-type</code> enabled about the function
types being&nbsp;incompatible.</p>
            <p><span class="emblem available">since: 2.58</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="static_mutex_lock" class="symbol" href="func.static_mutex_lock.html">static_mutex_lock</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_lock(), but for a <code>GStaticMutex</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="static_mutex_trylock" class="symbol" href="func.static_mutex_trylock.html">static_mutex_trylock</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_trylock(), but for a <code>GStaticMutex</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="static_mutex_unlock" class="symbol" href="func.static_mutex_unlock.html">static_mutex_unlock</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_unlock(), but for a <code>GStaticMutex</code>.</p>
            <p><span class="emblem deprecated">deprecated: 2.32</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="steal_pointer" class="symbol" href="func.steal_pointer.html">steal_pointer</a></td>
            
            <td class="docblock-summary">
            <p>Sets <code>pp</code> to <code>NULL</code>, returning the value that was there&nbsp;before.</p>
            <p><span class="emblem available">since: 2.44</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STRINGIFY" class="symbol" href="func.STRINGIFY.html">STRINGIFY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STRINGIFY_ARG" class="symbol" href="func.STRINGIFY_ARG.html">STRINGIFY_ARG</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="strstrip" class="symbol" href="func.strstrip.html">strstrip</a></td>
            
            <td class="docblock-summary">
            <p>Removes leading and trailing whitespace from a&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STRUCT_MEMBER" class="symbol" href="func.STRUCT_MEMBER.html">STRUCT_MEMBER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STRUCT_MEMBER_P" class="symbol" href="func.STRUCT_MEMBER_P.html">STRUCT_MEMBER_P</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STRUCT_OFFSET" class="symbol" href="func.STRUCT_OFFSET.html">STRUCT_OFFSET</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_add" class="symbol" href="func.test_add.html">test_add</a></td>
            
            <td class="docblock-summary">
            <p>Hook up a new test case at <code>testpath</code>, similar to g_test_add_func().
A fixture data structure with setup and teardown functions may be provided,
similar to&nbsp;g_test_create_case().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_assert_expected_messages" class="symbol" href="func.test_assert_expected_messages.html">test_assert_expected_messages</a></td>
            
            <td class="docblock-summary">
            <p>Asserts that all messages previously indicated via
<code>g_test_expect_message()</code> have been seen and&nbsp;suppressed.</p>
            <p><span class="emblem available">since: 2.34</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_initialized" class="symbol" href="func.test_initialized.html">test_initialized</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if <code>g_test_init()</code> has been&nbsp;called.</p>
            <p><span class="emblem available">since: 2.36</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_perf" class="symbol" href="func.test_perf.html">test_perf</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in performance&nbsp;mode.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_queue_unref" class="symbol" href="func.test_queue_unref.html">test_queue_unref</a></td>
            
            <td class="docblock-summary">
            <p>Enqueue an object to be released with <code>g_object_unref()</code> during
the next teardown phase. This is equivalent to calling
<code>g_test_queue_destroy()</code> with a destroy callback of&nbsp;g_object_unref().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_quick" class="symbol" href="func.test_quick.html">test_quick</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in quick mode.
Exactly one of <code>g_test_quick()</code> and <code>g_test_slow()</code> is active in any run;
there is no &#8220;medium&nbsp;speed&#8221;.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_quiet" class="symbol" href="func.test_quiet.html">test_quiet</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in quiet mode.
In tests that use g_test_init(), the option <code>-q</code> or <code>--quiet</code> enables
this, while <code>--verbose</code> disables it.
The default is neither <code>g_test_verbose()</code> nor&nbsp;g_test_quiet().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_rand_bit" class="symbol" href="func.test_rand_bit.html">test_rand_bit</a></td>
            
            <td class="docblock-summary">
            <p>Get a reproducible random bit (0 or 1), see <code>g_test_rand_int()</code>
for details on test case random&nbsp;numbers.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_slow" class="symbol" href="func.test_slow.html">test_slow</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in slow mode.
Exactly one of <code>g_test_quick()</code> and <code>g_test_slow()</code> is active in any run;
there is no &#8220;medium&nbsp;speed&#8221;.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_thorough" class="symbol" href="func.test_thorough.html">test_thorough</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in thorough mode, equivalent to&nbsp;g_test_slow().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_failed" class="symbol" href="func.test_trap_assert_failed.html">test_trap_assert_failed</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the last test subprocess failed.
See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_passed" class="symbol" href="func.test_trap_assert_passed.html">test_trap_assert_passed</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the last test subprocess passed.
See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_stderr" class="symbol" href="func.test_trap_assert_stderr.html">test_trap_assert_stderr</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the stderr output of the last test subprocess
matches <code>serrpattern</code>. See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_stderr_unmatched" class="symbol" href="func.test_trap_assert_stderr_unmatched.html">test_trap_assert_stderr_unmatched</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the stderr output of the last test subprocess
does not match <code>serrpattern</code>. See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_stdout" class="symbol" href="func.test_trap_assert_stdout.html">test_trap_assert_stdout</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the stdout output of the last test subprocess matches
<code>soutpattern</code>. See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_trap_assert_stdout_unmatched" class="symbol" href="func.test_trap_assert_stdout_unmatched.html">test_trap_assert_stdout_unmatched</a></td>
            
            <td class="docblock-summary">
            <p>Assert that the stdout output of the last test subprocess
does not match <code>soutpattern</code>. See&nbsp;g_test_trap_subprocess().</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_undefined" class="symbol" href="func.test_undefined.html">test_undefined</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests may provoke assertions and other formally-undefined
behaviour, to verify that appropriate warnings are given. It might, in some
cases, be useful to turn this off with if running tests under valgrind;
in tests that use g_test_init(), the option <code>-m no-undefined</code> disables
those tests, while <code>-m undefined</code> explicitly enables them (normally
the default&nbsp;behaviour).</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="test_verbose" class="symbol" href="func.test_verbose.html">test_verbose</a></td>
            
            <td class="docblock-summary">
            <p>Returns <code>TRUE</code> if tests are run in verbose mode.
In tests that use g_test_init(), the option <code>--verbose</code> enables this,
while <code>-q</code> or <code>--quiet</code> disables it.
The default is neither <code>g_test_verbose()</code> nor&nbsp;g_test_quiet().</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="thread_supported" class="symbol" href="func.thread_supported.html">thread_supported</a></td>
            
            <td class="docblock-summary">
            <p>This macro returns <code>TRUE</code> if the thread system is initialized,
and <code>FALSE</code> if it is&nbsp;not.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_new" class="symbol" href="func.try_new.html">try_new</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to allocate <code>n_structs</code> elements of type <code>struct_type</code>, and returns
<code>NULL</code> on failure. Contrast with g_new(), which aborts the program on failure.
The returned pointer is cast to a pointer to the given type.
The function returns <code>NULL</code> when <code>n_structs</code> is 0 of if an overflow&nbsp;occurs.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_new0" class="symbol" href="func.try_new0.html">try_new0</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to allocate <code>n_structs</code> elements of type <code>struct_type</code>, initialized
to 0&#8217;s, and returns <code>NULL</code> on failure. Contrast with g_new0(), which aborts
the program on failure.
The returned pointer is cast to a pointer to the given type.
The function returns <code>NULL</code> when <code>n_structs</code> is 0 or if an overflow&nbsp;occurs.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="try_renew" class="symbol" href="func.try_renew.html">try_renew</a></td>
            
            <td class="docblock-summary">
            <p>Attempts to reallocate the memory pointed to by <code>mem</code>, so that it now has
space for <code>n_structs</code> elements of type <code>struct_type</code>, and returns <code>NULL</code> on
failure. Contrast with g_renew(), which aborts the program on failure.
It returns the new address of the memory, which may have been moved.
The function returns <code>NULL</code> if an overflow&nbsp;occurs.</p>
            <p><span class="emblem available">since: 2.8</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TRYLOCK" class="symbol" href="func.TRYLOCK.html">TRYLOCK</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_trylock(), but for a lock defined with
<code>G_LOCK_DEFINE</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="typeof" class="symbol" href="func.typeof.html">typeof</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uint64_checked_add" class="symbol" href="func.uint64_checked_add.html">uint64_checked_add</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uint64_checked_mul" class="symbol" href="func.uint64_checked_mul.html">uint64_checked_mul</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uint_checked_add" class="symbol" href="func.uint_checked_add.html">uint_checked_add</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="uint_checked_mul" class="symbol" href="func.uint_checked_mul.html">uint_checked_mul</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNAVAILABLE" class="symbol" href="func.UNAVAILABLE.html">UNAVAILABLE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNAVAILABLE_ENUMERATOR" class="symbol" href="func.UNAVAILABLE_ENUMERATOR.html">UNAVAILABLE_ENUMERATOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNAVAILABLE_MACRO" class="symbol" href="func.UNAVAILABLE_MACRO.html">UNAVAILABLE_MACRO</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNAVAILABLE_STATIC_INLINE" class="symbol" href="func.UNAVAILABLE_STATIC_INLINE.html">UNAVAILABLE_STATIC_INLINE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNAVAILABLE_TYPE" class="symbol" href="func.UNAVAILABLE_TYPE.html">UNAVAILABLE_TYPE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNLIKELY" class="symbol" href="func.UNLIKELY.html">UNLIKELY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNLOCK" class="symbol" href="func.UNLOCK.html">UNLOCK</a></td>
            
            <td class="docblock-summary">
            <p>Works like g_mutex_unlock(), but for a lock defined with
<code>G_LOCK_DEFINE</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="utf8_next_char" class="symbol" href="func.utf8_next_char.html">utf8_next_char</a></td>
            
            <td class="docblock-summary">
            <p>Skips to the next character in a <span class="caps">UTF</span>-8&nbsp;string.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VARIANT_BUILDER_INIT" class="symbol" href="func.VARIANT_BUILDER_INIT.html">VARIANT_BUILDER_INIT</a></td>
            
            <td class="docblock-summary">
            <p>A stack-allocated <code>GVariantBuilder</code> must be initialized if it is
used together with <code>g_auto()</code> to avoid warnings or crashes if
function returns before <code>g_variant_builder_init()</code> is called on the&nbsp;builder.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VARIANT_DICT_INIT" class="symbol" href="func.VARIANT_DICT_INIT.html">VARIANT_DICT_INIT</a></td>
            
            <td class="docblock-summary">
            <p>A stack-allocated <code>GVariantDict</code> must be initialized if it is used
together with <code>g_auto()</code> to avoid warnings or crashes if function
returns before <code>g_variant_dict_init()</code> is called on the&nbsp;builder.</p>
            <p><span class="emblem available">since: 2.50</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="warn_if_fail" class="symbol" href="func.warn_if_fail.html">warn_if_fail</a></td>
            
            <td class="docblock-summary">
            <p>Logs a warning if the expression is not&nbsp;true.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="warn_if_reached" class="symbol" href="func.warn_if_reached.html">warn_if_reached</a></td>
            
            <td class="docblock-summary">
            <p>Logs a&nbsp;warning.</p>
            <p><span class="emblem available">since: 2.16</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="warning" class="symbol" href="func.warning.html">warning</a></td>
            
            <td class="docblock-summary">
            <p>A convenience function/macro to log a warning&nbsp;message.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="warning_once" class="symbol" href="func.warning_once.html">warning_once</a></td>
            
            <td class="docblock-summary">
            <p>Logs a warning only&nbsp;once.</p>
            <p><span class="emblem available">since: 2.64</span></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="WIN32_DLLMAIN_FOR_DLL_NAME" class="symbol" href="func.WIN32_DLLMAIN_FOR_DLL_NAME.html">WIN32_DLLMAIN_FOR_DLL_NAME</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
  
  <section>
    <div class="toggle-wrapper default-hide">
      <h4 id="constants" class="section-header" style="display:flex;">
        Constants
        <a href="#constants" class="anchor"></a>
      </h4>

      <div class="docblock">
        <table style="display:block;">
          <tbody>
          
          <tr class="section-item">
            <td><a title="ALLOC_AND_FREE" class="symbol" href="const.ALLOC_AND_FREE.html">ALLOC_AND_FREE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ALLOC_ONLY" class="symbol" href="const.ALLOC_ONLY.html">ALLOC_ONLY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ALLOCATOR_LIST" class="symbol" href="const.ALLOCATOR_LIST.html">ALLOCATOR_LIST</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ALLOCATOR_NODE" class="symbol" href="const.ALLOCATOR_NODE.html">ALLOCATOR_NODE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ALLOCATOR_SLIST" class="symbol" href="const.ALLOCATOR_SLIST.html">ALLOCATOR_SLIST</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ANALYZER_ANALYZING" class="symbol" href="const.ANALYZER_ANALYZING.html">ANALYZER_ANALYZING</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ASCII_DTOSTR_BUF_SIZE" class="symbol" href="const.ASCII_DTOSTR_BUF_SIZE.html">ASCII_DTOSTR_BUF_SIZE</a></td>
            
            <td class="docblock-summary">
            <p>A good size for a buffer to be passed into <code>g_ascii_dtostr()</code>.
It is guaranteed to be enough for all output of that function
on systems with 64bit <span class="caps">IEEE</span>-compatible&nbsp;doubles.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="ATOMIC_REF_COUNT_INIT" class="symbol" href="const.ATOMIC_REF_COUNT_INIT.html">ATOMIC_REF_COUNT_INIT</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to the initial reference count for <code>gatomicrefcount</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="BIG_ENDIAN" class="symbol" href="const.BIG_ENDIAN.html">BIG_ENDIAN</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="C_STD_VERSION" class="symbol" href="const.C_STD_VERSION.html">C_STD_VERSION</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CSET_A_2_Z" class="symbol" href="const.CSET_A_2_Z.html">CSET_A_2_Z</a></td>
            
            <td class="docblock-summary">
            <p>The set of uppercase <span class="caps">ASCII</span> alphabet characters.
Used for specifying valid identifier characters
in <code>GScannerConfig</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CSET_a_2_z" class="symbol" href="const.CSET_a_2_z.html">CSET_a_2_z</a></td>
            
            <td class="docblock-summary">
            <p>The set of lowercase <span class="caps">ASCII</span> alphabet characters.
Used for specifying valid identifier characters
in <code>GScannerConfig</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="CSET_DIGITS" class="symbol" href="const.CSET_DIGITS.html">CSET_DIGITS</a></td>
            
            <td class="docblock-summary">
            <p>The set of <span class="caps">ASCII</span> digits.
Used for specifying valid identifier characters
in <code>GScannerConfig</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DATALIST_FLAGS_MASK" class="symbol" href="const.DATALIST_FLAGS_MASK.html">DATALIST_FLAGS_MASK</a></td>
            
            <td class="docblock-summary">
            <p>A bitmask that restricts the possible flags passed to
g_datalist_set_flags(). Passing a flags value where
flags <span class="amp">&amp;</span> ~G_DATALIST_FLAGS_MASK != 0 is an&nbsp;error.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DATE_BAD_DAY" class="symbol" href="const.DATE_BAD_DAY.html">DATE_BAD_DAY</a></td>
            
            <td class="docblock-summary">
            <p>Represents an invalid <code>GDateDay</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DATE_BAD_JULIAN" class="symbol" href="const.DATE_BAD_JULIAN.html">DATE_BAD_JULIAN</a></td>
            
            <td class="docblock-summary">
            <p>Represents an invalid Julian day&nbsp;number.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DATE_BAD_YEAR" class="symbol" href="const.DATE_BAD_YEAR.html">DATE_BAD_YEAR</a></td>
            
            <td class="docblock-summary">
            <p>Represents an invalid&nbsp;year.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DIR_SEPARATOR" class="symbol" href="const.DIR_SEPARATOR.html">DIR_SEPARATOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="DIR_SEPARATOR_S" class="symbol" href="const.DIR_SEPARATOR_S.html">DIR_SEPARATOR_S</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="E" class="symbol" href="const.E.html">E</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT16_FORMAT" class="symbol" href="const.GINT16_FORMAT.html">GINT16_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT16_MODIFIER" class="symbol" href="const.GINT16_MODIFIER.html">GINT16_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT32_FORMAT" class="symbol" href="const.GINT32_FORMAT.html">GINT32_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT32_MODIFIER" class="symbol" href="const.GINT32_MODIFIER.html">GINT32_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT64_FORMAT" class="symbol" href="const.GINT64_FORMAT.html">GINT64_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINT64_MODIFIER" class="symbol" href="const.GINT64_MODIFIER.html">GINT64_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINTPTR_FORMAT" class="symbol" href="const.GINTPTR_FORMAT.html">GINTPTR_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GINTPTR_MODIFIER" class="symbol" href="const.GINTPTR_MODIFIER.html">GINTPTR_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_FUNCTION" class="symbol" href="const.GNUC_FUNCTION.html">GNUC_FUNCTION</a></td>
            
            <td class="docblock-summary">
            <p>Expands to &#8220;&#8221; on all modern compilers, and to  <strong><span class="caps">FUNCTION</span></strong> on gcc
version 2.x. Don&#8217;t use&nbsp;it.</p>
            <p><span class="emblem deprecated">deprecated: 2.16</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GNUC_PRETTY_FUNCTION" class="symbol" href="const.GNUC_PRETTY_FUNCTION.html">GNUC_PRETTY_FUNCTION</a></td>
            
            <td class="docblock-summary">
            <p>Expands to &#8220;&#8221; on all modern compilers, and to <strong>PRETTY_FUNCTION</strong>
on gcc version 2.x. Don&#8217;t use&nbsp;it.</p>
            <p><span class="emblem deprecated">deprecated: 2.16</span>&nbsp;</p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GSIZE_FORMAT" class="symbol" href="const.GSIZE_FORMAT.html">GSIZE_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GSIZE_MODIFIER" class="symbol" href="const.GSIZE_MODIFIER.html">GSIZE_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GSSIZE_FORMAT" class="symbol" href="const.GSSIZE_FORMAT.html">GSSIZE_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GSSIZE_MODIFIER" class="symbol" href="const.GSSIZE_MODIFIER.html">GSSIZE_MODIFIER</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GUINT16_FORMAT" class="symbol" href="const.GUINT16_FORMAT.html">GUINT16_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GUINT32_FORMAT" class="symbol" href="const.GUINT32_FORMAT.html">GUINT32_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GUINT64_FORMAT" class="symbol" href="const.GUINT64_FORMAT.html">GUINT64_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="GUINTPTR_FORMAT" class="symbol" href="const.GUINTPTR_FORMAT.html">GUINTPTR_FORMAT</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HAVE_GINT64" class="symbol" href="const.HAVE_GINT64.html">HAVE_GINT64</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HAVE_GNUC_VARARGS" class="symbol" href="const.HAVE_GNUC_VARARGS.html">HAVE_GNUC_VARARGS</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HAVE_GNUC_VISIBILITY" class="symbol" href="const.HAVE_GNUC_VISIBILITY.html">HAVE_GNUC_VISIBILITY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HAVE_GROWING_STACK" class="symbol" href="const.HAVE_GROWING_STACK.html">HAVE_GROWING_STACK</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HAVE_ISO_VARARGS" class="symbol" href="const.HAVE_ISO_VARARGS.html">HAVE_ISO_VARARGS</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="HOOK_FLAG_USER_SHIFT" class="symbol" href="const.HOOK_FLAG_USER_SHIFT.html">HOOK_FLAG_USER_SHIFT</a></td>
            
            <td class="docblock-summary">
            <p>The position of the first bit which is not reserved for internal
use be the <code>GHook</code> implementation, i.e.
<code>1 &lt;&lt; G_HOOK_FLAG_USER_SHIFT</code> is the first
bit which can be used for application-defined&nbsp;flags.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IEEE754_DOUBLE_BIAS" class="symbol" href="const.IEEE754_DOUBLE_BIAS.html">IEEE754_DOUBLE_BIAS</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="IEEE754_FLOAT_BIAS" class="symbol" href="const.IEEE754_FLOAT_BIAS.html">IEEE754_FLOAT_BIAS</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_GROUP" class="symbol" href="const.KEY_FILE_DESKTOP_GROUP.html">KEY_FILE_DESKTOP_GROUP</a></td>
            
            <td class="docblock-summary">
            <p>The name of the main group of a desktop entry file, as defined in the
<a href="http://freedesktop.org/Standards/desktop-entry-spec">Desktop Entry Specification</a>.
Consult the specification for more
details about the meanings of the keys&nbsp;below.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_ACTIONS" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_ACTIONS.html">KEY_FILE_DESKTOP_KEY_ACTIONS</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string list
giving the available application&nbsp;actions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_CATEGORIES" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_CATEGORIES.html">KEY_FILE_DESKTOP_KEY_CATEGORIES</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a list
of strings giving the categories in which the desktop entry
should be shown in a&nbsp;menu.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_COMMENT" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_COMMENT.html">KEY_FILE_DESKTOP_KEY_COMMENT</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a localized
string giving the tooltip for the desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE.html">KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a boolean
set to true if the application is D-Bus&nbsp;activatable.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_EXEC" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_EXEC.html">KEY_FILE_DESKTOP_KEY_EXEC</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
giving the command line to execute. It is only valid for desktop
entries with the <code>Application</code> type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_GENERIC_NAME" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_GENERIC_NAME.html">KEY_FILE_DESKTOP_KEY_GENERIC_NAME</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a localized
string giving the generic name of the desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_HIDDEN" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_HIDDEN.html">KEY_FILE_DESKTOP_KEY_HIDDEN</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a boolean
stating whether the desktop entry has been deleted by the&nbsp;user.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_ICON" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_ICON.html">KEY_FILE_DESKTOP_KEY_ICON</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a localized
string giving the name of the icon to be displayed for the desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_MIME_TYPE" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_MIME_TYPE.html">KEY_FILE_DESKTOP_KEY_MIME_TYPE</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a list
of strings giving the <span class="caps">MIME</span> types supported by this desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_NAME" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_NAME.html">KEY_FILE_DESKTOP_KEY_NAME</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a localized
string giving the specific name of the desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_NO_DISPLAY" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_NO_DISPLAY.html">KEY_FILE_DESKTOP_KEY_NO_DISPLAY</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a boolean
stating whether the desktop entry should be shown in&nbsp;menus.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN.html">KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a list of
strings identifying the environments that should not display the
desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN.html">KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a list of
strings identifying the environments that should display the
desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_PATH" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_PATH.html">KEY_FILE_DESKTOP_KEY_PATH</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
containing the working directory to run the program in. It is only
valid for desktop entries with the <code>Application</code> type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY.html">KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a boolean
stating whether the application supports the
<a href="http://www.freedesktop.org/Standards/startup-notification-spec">Startup Notification Protocol Specification</a>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS.html">KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is string
identifying the <span class="caps">WM</span> class or name hint of a window that the application
will create, which can be used to emulate Startup Notification with
older&nbsp;applications.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_TERMINAL" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_TERMINAL.html">KEY_FILE_DESKTOP_KEY_TERMINAL</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a boolean
stating whether the program should be run in a terminal&nbsp;window.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_TRY_EXEC" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_TRY_EXEC.html">KEY_FILE_DESKTOP_KEY_TRY_EXEC</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
giving the file name of a binary on disk used to determine if the
program is actually installed. It is only valid for desktop entries
with the <code>Application</code> type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_TYPE" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_TYPE.html">KEY_FILE_DESKTOP_KEY_TYPE</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
giving the type of the desktop&nbsp;entry.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_URL" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_URL.html">KEY_FILE_DESKTOP_KEY_URL</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
giving the <span class="caps">URL</span> to access. It is only valid for desktop entries
with the <code>Link</code> type.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_KEY_VERSION" class="symbol" href="const.KEY_FILE_DESKTOP_KEY_VERSION.html">KEY_FILE_DESKTOP_KEY_VERSION</a></td>
            
            <td class="docblock-summary">
            <p>A key under <code>G_KEY_FILE_DESKTOP_GROUP</code>, whose value is a string
giving the version of the Desktop Entry Specification used for
the desktop entry&nbsp;file.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_TYPE_APPLICATION" class="symbol" href="const.KEY_FILE_DESKTOP_TYPE_APPLICATION.html">KEY_FILE_DESKTOP_TYPE_APPLICATION</a></td>
            
            <td class="docblock-summary">
            <p>The value of the <code>G_KEY_FILE_DESKTOP_KEY_TYPE</code>, key for desktop
entries representing&nbsp;applications.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_TYPE_DIRECTORY" class="symbol" href="const.KEY_FILE_DESKTOP_TYPE_DIRECTORY.html">KEY_FILE_DESKTOP_TYPE_DIRECTORY</a></td>
            
            <td class="docblock-summary">
            <p>The value of the <code>G_KEY_FILE_DESKTOP_KEY_TYPE</code>, key for desktop
entries representing&nbsp;directories.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="KEY_FILE_DESKTOP_TYPE_LINK" class="symbol" href="const.KEY_FILE_DESKTOP_TYPE_LINK.html">KEY_FILE_DESKTOP_TYPE_LINK</a></td>
            
            <td class="docblock-summary">
            <p>The value of the <code>G_KEY_FILE_DESKTOP_KEY_TYPE</code>, key for desktop
entries representing links to&nbsp;documents.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LITTLE_ENDIAN" class="symbol" href="const.LITTLE_ENDIAN.html">LITTLE_ENDIAN</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LN10" class="symbol" href="const.LN10.html">LN10</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LN2" class="symbol" href="const.LN2.html">LN2</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOG_2_BASE_10" class="symbol" href="const.LOG_2_BASE_10.html">LOG_2_BASE_10</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOG_DOMAIN" class="symbol" href="const.LOG_DOMAIN.html">LOG_DOMAIN</a></td>
            
            <td class="docblock-summary">
            <p>Defines the log domain. See <a href="#log-domains">Log Domains</a>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOG_FATAL_MASK" class="symbol" href="const.LOG_FATAL_MASK.html">LOG_FATAL_MASK</a></td>
            
            <td class="docblock-summary">
            <p>GLib log levels that are considered fatal by&nbsp;default.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="LOG_LEVEL_USER_SHIFT" class="symbol" href="const.LOG_LEVEL_USER_SHIFT.html">LOG_LEVEL_USER_SHIFT</a></td>
            
            <td class="docblock-summary">
            <p>Log levels below <code>1&lt;&lt;G_LOG_LEVEL_USER_SHIFT</code> are used by GLib.
Higher bits can be used for user-defined log&nbsp;levels.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAJOR_VERSION" class="symbol" href="const.MAJOR_VERSION.html">MAJOR_VERSION</a></td>
            
            <td class="docblock-summary">
            <p>The major version number of the GLib&nbsp;library.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXINT16" class="symbol" href="const.MAXINT16.html">MAXINT16</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXINT32" class="symbol" href="const.MAXINT32.html">MAXINT32</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXINT64" class="symbol" href="const.MAXINT64.html">MAXINT64</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXINT8" class="symbol" href="const.MAXINT8.html">MAXINT8</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXUINT16" class="symbol" href="const.MAXUINT16.html">MAXUINT16</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXUINT32" class="symbol" href="const.MAXUINT32.html">MAXUINT32</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXUINT64" class="symbol" href="const.MAXUINT64.html">MAXUINT64</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MAXUINT8" class="symbol" href="const.MAXUINT8.html">MAXUINT8</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MICRO_VERSION" class="symbol" href="const.MICRO_VERSION.html">MICRO_VERSION</a></td>
            
            <td class="docblock-summary">
            <p>The micro version number of the GLib&nbsp;library.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MININT16" class="symbol" href="const.MININT16.html">MININT16</a></td>
            
            <td class="docblock-summary">
            <p>The minimum value which can be held in a&nbsp;#gint16.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MININT32" class="symbol" href="const.MININT32.html">MININT32</a></td>
            
            <td class="docblock-summary">
            <p>The minimum value which can be held in a&nbsp;#gint32.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MININT64" class="symbol" href="const.MININT64.html">MININT64</a></td>
            
            <td class="docblock-summary">
            <p>The minimum value which can be held in a&nbsp;#gint64.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MININT8" class="symbol" href="const.MININT8.html">MININT8</a></td>
            
            <td class="docblock-summary">
            <p>The minimum value which can be held in a&nbsp;#gint8.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MINOR_VERSION" class="symbol" href="const.MINOR_VERSION.html">MINOR_VERSION</a></td>
            
            <td class="docblock-summary">
            <p>The minor version number of the GLib&nbsp;library.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="MODULE_SUFFIX" class="symbol" href="const.MODULE_SUFFIX.html">MODULE_SUFFIX</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="OPTION_REMAINING" class="symbol" href="const.OPTION_REMAINING.html">OPTION_REMAINING</a></td>
            
            <td class="docblock-summary">
            <p>If a long option in the main group has this name, it is not treated as a
regular option. Instead it collects all non-option arguments which would
otherwise be left in <code>argv</code>. The option must be of type
<code>G_OPTION_ARG_CALLBACK</code>, <code>G_OPTION_ARG_STRING_ARRAY</code>
or <code>G_OPTION_ARG_FILENAME_ARRAY</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PDP_ENDIAN" class="symbol" href="const.PDP_ENDIAN.html">PDP_ENDIAN</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PI" class="symbol" href="const.PI.html">PI</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PI_2" class="symbol" href="const.PI_2.html">PI_2</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PI_4" class="symbol" href="const.PI_4.html">PI_4</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PID_FORMAT" class="symbol" href="const.PID_FORMAT.html">PID_FORMAT</a></td>
            
            <td class="docblock-summary">
            <p>A format specifier that can be used in printf()-style format strings
when printing a <code>GPid</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="POLLFD_FORMAT" class="symbol" href="const.POLLFD_FORMAT.html">POLLFD_FORMAT</a></td>
            
            <td class="docblock-summary">
            <p>A format specifier that can be used in printf()-style format strings
when printing the <code>fd</code> member of a <code>GPollFD</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIORITY_DEFAULT" class="symbol" href="const.PRIORITY_DEFAULT.html">PRIORITY_DEFAULT</a></td>
            
            <td class="docblock-summary">
            <p>Use this for default priority event&nbsp;sources.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIORITY_DEFAULT_IDLE" class="symbol" href="const.PRIORITY_DEFAULT_IDLE.html">PRIORITY_DEFAULT_IDLE</a></td>
            
            <td class="docblock-summary">
            <p>Use this for default priority idle&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIORITY_HIGH" class="symbol" href="const.PRIORITY_HIGH.html">PRIORITY_HIGH</a></td>
            
            <td class="docblock-summary">
            <p>Use this for high priority event&nbsp;sources.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIORITY_HIGH_IDLE" class="symbol" href="const.PRIORITY_HIGH_IDLE.html">PRIORITY_HIGH_IDLE</a></td>
            
            <td class="docblock-summary">
            <p>Use this for high priority idle&nbsp;functions.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="PRIORITY_LOW" class="symbol" href="const.PRIORITY_LOW.html">PRIORITY_LOW</a></td>
            
            <td class="docblock-summary">
            <p>Use this for very low priority background&nbsp;tasks.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="REF_COUNT_INIT" class="symbol" href="const.REF_COUNT_INIT.html">REF_COUNT_INIT</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to the initial reference count for <code>grefcount</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SEARCHPATH_SEPARATOR" class="symbol" href="const.SEARCHPATH_SEPARATOR.html">SEARCHPATH_SEPARATOR</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SEARCHPATH_SEPARATOR_S" class="symbol" href="const.SEARCHPATH_SEPARATOR_S.html">SEARCHPATH_SEPARATOR_S</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SIZEOF_LONG" class="symbol" href="const.SIZEOF_LONG.html">SIZEOF_LONG</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SIZEOF_SIZE_T" class="symbol" href="const.SIZEOF_SIZE_T.html">SIZEOF_SIZE_T</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SIZEOF_SSIZE_T" class="symbol" href="const.SIZEOF_SSIZE_T.html">SIZEOF_SSIZE_T</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SIZEOF_VOID_P" class="symbol" href="const.SIZEOF_VOID_P.html">SIZEOF_VOID_P</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SOURCE_CONTINUE" class="symbol" href="const.SOURCE_CONTINUE.html">SOURCE_CONTINUE</a></td>
            
            <td class="docblock-summary">
            <p>Use this macro as the return value of a <code>GSourceFunc</code> to leave
the <code>GSource</code> in the main&nbsp;loop.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SOURCE_REMOVE" class="symbol" href="const.SOURCE_REMOVE.html">SOURCE_REMOVE</a></td>
            
            <td class="docblock-summary">
            <p>Use this macro as the return value of a <code>GSourceFunc</code> to remove
the <code>GSource</code> from the main&nbsp;loop.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SQRT2" class="symbol" href="const.SQRT2.html">SQRT2</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="STR_DELIMITERS" class="symbol" href="const.STR_DELIMITERS.html">STR_DELIMITERS</a></td>
            
            <td class="docblock-summary">
            <p>The standard delimiters, used in <code>g_strdelimit()</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_AF_INET" class="symbol" href="const.SYSDEF_AF_INET.html">SYSDEF_AF_INET</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_AF_INET6" class="symbol" href="const.SYSDEF_AF_INET6.html">SYSDEF_AF_INET6</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_AF_UNIX" class="symbol" href="const.SYSDEF_AF_UNIX.html">SYSDEF_AF_UNIX</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_MSG_DONTROUTE" class="symbol" href="const.SYSDEF_MSG_DONTROUTE.html">SYSDEF_MSG_DONTROUTE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_MSG_OOB" class="symbol" href="const.SYSDEF_MSG_OOB.html">SYSDEF_MSG_OOB</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="SYSDEF_MSG_PEEK" class="symbol" href="const.SYSDEF_MSG_PEEK.html">SYSDEF_MSG_PEEK</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TEST_OPTION_ISOLATE_DIRS" class="symbol" href="const.TEST_OPTION_ISOLATE_DIRS.html">TEST_OPTION_ISOLATE_DIRS</a></td>
            
            <td class="docblock-summary">
            <p>Creates a unique temporary directory for each unit test and uses
<code>g_set_user_dirs()</code> to set <span class="caps">XDG</span> directories to point into subdirectories of it
for the duration of the unit test. The directory tree is cleaned up after the
test finishes successfully. Note that this doesn’t take effect until
<code>g_test_run()</code> is called, so calls to (for example) <code>g_get_user_home_dir()</code> will
return the system-wide value when made in a test program’s <code>main()</code> function.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TIME_SPAN_DAY" class="symbol" href="const.TIME_SPAN_DAY.html">TIME_SPAN_DAY</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to a time span of one&nbsp;day.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TIME_SPAN_HOUR" class="symbol" href="const.TIME_SPAN_HOUR.html">TIME_SPAN_HOUR</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to a time span of one&nbsp;hour.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TIME_SPAN_MILLISECOND" class="symbol" href="const.TIME_SPAN_MILLISECOND.html">TIME_SPAN_MILLISECOND</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to a time span of one&nbsp;millisecond.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TIME_SPAN_MINUTE" class="symbol" href="const.TIME_SPAN_MINUTE.html">TIME_SPAN_MINUTE</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to a time span of one&nbsp;minute.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="TIME_SPAN_SECOND" class="symbol" href="const.TIME_SPAN_SECOND.html">TIME_SPAN_SECOND</a></td>
            
            <td class="docblock-summary">
            <p>Evaluates to a time span of one&nbsp;second.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="UNICHAR_MAX_DECOMPOSITION_LENGTH" class="symbol" href="const.UNICHAR_MAX_DECOMPOSITION_LENGTH.html">UNICHAR_MAX_DECOMPOSITION_LENGTH</a></td>
            
            <td class="docblock-summary">
            <p>The maximum length (in codepoints) of a compatibility or canonical
decomposition of a single Unicode&nbsp;character.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="URI_RESERVED_CHARS_GENERIC_DELIMITERS" class="symbol" href="const.URI_RESERVED_CHARS_GENERIC_DELIMITERS.html">URI_RESERVED_CHARS_GENERIC_DELIMITERS</a></td>
            
            <td class="docblock-summary">
            <p>Generic delimiters characters as defined in
<a href="https://tools.ietf.org/html/rfc3986"><span class="caps">RFC</span> 3986</a>. Includes <code>:/?#[]@</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS" class="symbol" href="const.URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS.html">URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS</a></td>
            
            <td class="docblock-summary">
            <p>Subcomponent delimiter characters as defined in
<a href="https://tools.ietf.org/html/rfc3986"><span class="caps">RFC</span> 3986</a>. Includes <code>!$&amp;'()*+,;=</code>.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="USEC_PER_SEC" class="symbol" href="const.USEC_PER_SEC.html">USEC_PER_SEC</a></td>
            
            <td class="docblock-summary">
            <p>Number of microseconds in one second (1 million).
This macro is provided for code&nbsp;readability.</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VA_COPY_AS_ARRAY" class="symbol" href="const.VA_COPY_AS_ARRAY.html">VA_COPY_AS_ARRAY</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="VERSION_MIN_REQUIRED" class="symbol" href="const.VERSION_MIN_REQUIRED.html">VERSION_MIN_REQUIRED</a></td>
            
            <td class="docblock-summary">
            <p>A macro that should be defined by the user prior to including
the glib.h header.
The definition should be one of the predefined GLib version
macros: <code>GLIB_VERSION_2_26</code>, <code>GLIB_VERSION_2_28</code>,&#8230;</p>
            <p></p>
            </td>
            
          </tr>
          
          <tr class="section-item">
            <td><a title="WIN32_MSG_HANDLE" class="symbol" href="const.WIN32_MSG_HANDLE.html">WIN32_MSG_HANDLE</a></td>
            
            <td class="docblock-summary">
            
            <p></p>
            </td>
            
          </tr>
          
          </tbody>
        </table>
      </div>
    </div>
  </section>
  
</section>


    

    <section id="search" class="content hidden"></section>

    <footer>
    
    </footer>
  </div>
</body>
</html>